{
    /*
     * iASL Warning: There were 11 external control methods found during
     * disassembly, but only 4 were resolved (7 unresolved). Additional
     * ACPI tables may be required to properly disassemble the code. This
     * resulting disassembler output file may not compile because the
     * disassembler did not know how many arguments to assign to the
     * unresolved methods. Note: SSDTs can be dynamically loaded at
     * runtime and may or may not be available via the host OS.
     *
     * In addition, the -fe option can be used to specify a file containing
     * control method external declarations with the associated method
     * argument counts. Each line of the file must be of the form:
     *     External (<method pathname>, MethodObj, <argument count>)
     * Invocation:
     *     iasl -fe refs.txt -d dsdt.aml
     *
     * The following methods were unresolved and many not compile properly
     * because the disassembler had to guess at the number of arguments
     * required for each:
     */
    External (_PR_.CFGD, FieldUnitObj)
    External (_PR_.CPU0._PPC, IntObj)
    External (_PR_.CPU0._PSS, PkgObj)
    External (_SB_.IAOE.AWT0, UnknownObj)    // Warning: Unknown object
    External (_SB_.IAOE.AWT1, UnknownObj)    // Warning: Unknown object
    External (_SB_.IAOE.AWT2, UnknownObj)    // Warning: Unknown object
    External (_SB_.IAOE.ECTM, IntObj)    // Warning: Unknown object
    External (_SB_.IAOE.FFSE, UnknownObj)    // Warning: Unknown object
    External (_SB_.IAOE.IBT1, UnknownObj)    // Warning: Unknown object
    External (_SB_.IAOE.ITMR, IntObj)    // Warning: Unknown object
    External (_SB_.IAOE.PTSL, UnknownObj)    // Warning: Unknown object
    External (_SB_.IAOE.RCTM, IntObj)    // Warning: Unknown object
    External (_SB_.IAOE.WTMS, IntObj)    // Warning: Unknown object
    External (_SB_.IETM, UnknownObj)    // Warning: Unknown object
    External (_SB_.IFFS.FFSS, UnknownObj)    // Warning: Unknown object
    External (_SB_.IFFS.FFST, UnknownObj)    // Warning: Unknown object
    External (_SB_.IFFS.GFFS, UnknownObj)    // Warning: Unknown object
    External (_SB_.IFFS.GFTV, UnknownObj)    // Warning: Unknown object
    External (_SB_.PCCD, UnknownObj)
    External (_SB_.PCCD.PENB, IntObj)
    External (_SB_.PCI0.B0D3.ABAR, FieldUnitObj)
    External (_SB_.PCI0.B0D3.BARA, IntObj)
    External (_SB_.PCI0.GFX0, UnknownObj)
    External (_SB_.PCI0.GFX0.CLID, FieldUnitObj)
    External (_SB_.PCI0.GFX0.GSCI, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.GFX0.GSSE, FieldUnitObj)
    External (_SB_.PCI0.GFX0.LCD0, UnknownObj)
    External (_SB_.PCI0.GFX0.PDDS, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (_SB_.PCI0.GFX0.SKIP, UnknownObj)    // Warning: Unknown object
    External (_SB_.PCI0.PEG0, UnknownObj)
    External (_SB_.PCI0.PEG0.HPME, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.PEG0.LNKD, FieldUnitObj)
    External (_SB_.PCI0.PEG0.PEGP, UnknownObj)
    External (_SB_.PCI0.PEG0.PEGP.EPON, MethodObj)    // 0 Arguments
    External (_SB_.PCI0.PEG0.PEGP.LCD0, UnknownObj)    // Warning: Unknown object
    External (_SB_.PCI0.PEG0.PEGP.NHDM, FieldUnitObj)
    External (_SB_.PCI0.PEG0.PEGP.TGPC, BuffObj)
    External (_SB_.PCI0.PEG1, UnknownObj)    // Warning: Unknown object
    External (_SB_.PCI0.PEG1.HPME, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.PEG2, UnknownObj)    // Warning: Unknown object
    External (_SB_.PCI0.PEG2.HPME, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.PCI0.RP05.PEGP.EPON, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (_SB_.TPM_.PTS_, MethodObj)    // Warning: Unknown method, guessing 1 arguments
    External (GSMI, FieldUnitObj)
    External (LIDS, FieldUnitObj)
    External (MDBG, MethodObj)    // 1 Arguments
    External (NVHA, FieldUnitObj)
    External (PDC0, IntObj)
    External (PDC1, IntObj)
    External (PDC2, IntObj)
    External (PDC3, IntObj)
    External (PDC4, IntObj)
    External (PDC5, IntObj)
    External (PDC6, IntObj)
    External (PDC7, IntObj)
    External (PS0X, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (PS3X, MethodObj)    // Warning: Unknown method, guessing 0 arguments
    External (SGMD, FieldUnitObj)

    Name (SMBS, 0x0580)

  0024: 08 53 4D 42 53 0B 80 05                          // .SMBS...

    Name (SMBL, 0x20)

  002C: 08 53 4D 42 4C 0A 20                             // .SMBL. 

    Name (PMBS, 0x1800)

  0033: 08 50 4D 42 53 0B 00 18                          // .PMBS...

    Name (GPBS, 0x1C00)

  003B: 08 47 50 42 53 0B 00 1C                          // .GPBS...

    Name (SMIP, 0xB2)

  0043: 08 53 4D 49 50 0A B2                             // .SMIP..

    Name (APCB, 0xFEC00000)

  004A: 08 41 50 43 42 0C 00 00 C0 FE                    // .APCB.....

    Name (APCL, 0x1000)

  0054: 08 41 50 43 4C 0B 00 10                          // .APCL...

    Name (SMCR, 0x1830)

  005C: 08 53 4D 43 52 0B 30 18                          // .SMCR.0.

    Name (HPTB, 0xFED00000)

  0064: 08 48 50 54 42 0C 00 00 D0 FE                    // .HPTB.....

    Name (HPTC, 0xFED1F404)

  006E: 08 48 50 54 43 0C 04 F4 D1 FE                    // .HPTC.....

    Name (FLSZ, 0x00400000)

  0078: 08 46 4C 53 5A 0C 00 00 40 00                    // .FLSZ...@.

    Name (SRCB, 0xFED1C000)

  0082: 08 53 52 43 42 0C 00 C0 D1 FE                    // .SRCB.....

    Name (RCLN, 0x4000)

  008C: 08 52 43 4C 4E 0B 00 40                          // .RCLN..@

    Name (PEBS, 0xF8000000)

  0094: 08 50 45 42 53 0C 00 00 00 F8                    // .PEBS.....

    Name (PELN, 0x04000000)

  009E: 08 50 45 4C 4E 0C 00 00 00 04                    // .PELN.....

    Name (LAPB, 0xFEE00000)

  00A8: 08 4C 41 50 42 0C 00 00 E0 FE                    // .LAPB.....

    Name (EGPB, 0xFED19000)

  00B2: 08 45 47 50 42 0C 00 90 D1 FE                    // .EGPB.....

    Name (MCHB, 0xFED10000)

  00BC: 08 4D 43 48 42 0C 00 00 D1 FE                    // .MCHB.....

    Name (VTBS, 0xFED90000)

  00C6: 08 56 54 42 53 0C 00 00 D9 FE                    // .VTBS.....

    Name (VTLN, 0x4000)

  00D0: 08 56 54 4C 4E 0B 00 40                          // .VTLN..@

    Name (ACPH, 0xDE)

  00D8: 08 41 43 50 48 0A DE                             // .ACPH..

    Name (ASSB, Zero)

  00DF: 08 41 53 53 42 00                                // .ASSB.

    Name (AOTB, Zero)

  00E5: 08 41 4F 54 42 00                                // .AOTB.

    Name (AAXB, Zero)

  00EB: 08 41 41 58 42 00                                // .AAXB.

    Name (PEHP, One)

  00F1: 08 50 45 48 50 01                                // .PEHP.

    Name (SHPC, One)

  00F7: 08 53 48 50 43 01                                // .SHPC.

    Name (PEPM, One)

  00FD: 08 50 45 50 4D 01                                // .PEPM.

    Name (PEER, One)

  0103: 08 50 45 45 52 01                                // .PEER.

    Name (PECS, One)

  0109: 08 50 45 43 53 01                                // .PECS.

    Name (ITKE, Zero)

  010F: 08 49 54 4B 45 00                                // .ITKE.

    Name (SRSI, 0xB2)

  0115: 08 53 52 53 49 0A B2                             // .SRSI..

    Name (CSMI, 0x61)

  011C: 08 43 53 4D 49 0A 61                             // .CSMI.a

    Name (FMBL, One)

  0123: 08 46 4D 42 4C 01                                // .FMBL.

    Name (FDTP, 0x02)

  0129: 08 46 44 54 50 0A 02                             // .FDTP..

    Name (FUPS, 0x03)

  0130: 08 46 55 50 53 0A 03                             // .FUPS..

    Name (FUWS, 0x04)

  0137: 08 46 55 57 53 0A 04                             // .FUWS..

    Name (BGR, One)

  013E: 08 42 47 52 5F 01                                // .BGR_.

    Name (BFR, 0x02)

  0144: 08 42 46 52 5F 0A 02                             // .BFR_..

    Name (BBR, 0x03)

  014B: 08 42 42 52 5F 0A 03                             // .BBR_..

    Name (BWC, 0x04)

  0152: 08 42 57 43 5F 0A 04                             // .BWC_..

    Name (BWT1, 0x20)

  0159: 08 42 57 54 31 0A 20                             // .BWT1. 

    Name (BFHC, 0x0100)

  0160: 08 42 46 48 43 0B 00 01                          // .BFHC...

    Name (TRTP, One)

  0168: 08 54 52 54 50 01                                // .TRTP.

    Name (WDTE, One)

  016E: 08 57 44 54 45 01                                // .WDTE.

    Name (TRTD, 0x02)

  0174: 08 54 52 54 44 0A 02                             // .TRTD..

    Name (TRTI, 0x03)

  017B: 08 54 52 54 49 0A 03                             // .TRTI..

    Name (PFTI, 0x04)

  0182: 08 50 46 54 49 0A 04                             // .PFTI..

    Name (GCDD, One)

  0189: 08 47 43 44 44 01                                // .GCDD.

    Name (DSTA, 0x0A)

  018F: 08 44 53 54 41 0A 0A                             // .DSTA..

    Name (DSLO, 0x0C)

  0196: 08 44 53 4C 4F 0A 0C                             // .DSLO..

    Name (DSLC, 0x0E)

  019D: 08 44 53 4C 43 0A 0E                             // .DSLC..

    Name (PITS, 0x10)

  01A4: 08 50 49 54 53 0A 10                             // .PITS..

    Name (SBCS, 0x12)

  01AB: 08 53 42 43 53 0A 12                             // .SBCS..

    Name (SALS, 0x13)

  01B2: 08 53 41 4C 53 0A 13                             // .SALS..

    Name (LSSS, 0x2A)

  01B9: 08 4C 53 53 53 0A 2A                             // .LSSS.*

    Name (SOOT, 0x35)

  01C0: 08 53 4F 4F 54 0A 35                             // .SOOT.5

    Name (PDBR, 0x4D)

  01C7: 08 50 44 42 52 0A 4D                             // .PDBR.M

    Name (BW1P, 0x21)

  01CE: 08 42 57 31 50 0A 21                             // .BW1P.!

    Name (BW2C, 0x22)

  01D5: 08 42 57 32 43 0A 22                             // .BW2C."

    Name (BW2P, 0x23)

  01DC: 08 42 57 32 50 0A 23                             // .BW2P.#

    Name (BSPC, 0x24)

  01E3: 08 42 53 50 43 0A 24                             // .BSPC.$

    Name (BSPP, 0x25)

  01EA: 08 42 53 50 50 0A 25                             // .BSPP.%

    Name (BICO, 0x27)

  01F1: 08 42 49 43 4F 0A 27                             // .BICO.'

    Name (BICC, 0x28)

  01F8: 08 42 49 43 43 0A 28                             // .BICC.(

    Name (BHB, 0x30)

  01FF: 08 42 48 42 5F 0A 30                             // .BHB_.0

    Name (BFS2, 0x31)

  0206: 08 42 46 53 32 0A 31                             // .BFS2.1

    Name (BFS3, 0x32)

  020D: 08 42 46 53 33 0A 32                             // .BFS3.2

    Name (BFS4, 0x33)

  0214: 08 42 46 53 34 0A 33                             // .BFS4.3

    Name (BRH, 0x35)

  021B: 08 42 52 48 5F 0A 35                             // .BRH_.5

    Name (SMIA, 0xB2)

  0222: 08 53 4D 49 41 0A B2                             // .SMIA..

    Name (SMIB, 0xB3)

  0229: 08 53 4D 49 42 0A B3                             // .SMIB..

    Name (OFST, 0x35)

  0230: 08 4F 46 53 54 0A 35                             // .OFST.5

    Name (TRST, 0x02)

  0237: 08 54 52 53 54 0A 02                             // .TRST..

    Name (TCMF, Zero)

  023E: 08 54 43 4D 46 00                                // .TCMF.

    Name (TMF1, Zero)

  0244: 08 54 4D 46 31 00                                // .TMF1.

    Name (TMF2, Zero)

  024A: 08 54 4D 46 32 00                                // .TMF2.

    Name (TMF3, Zero)

  0250: 08 54 4D 46 33 00                                // .TMF3.

    Name (TTPF, One)

  0256: 08 54 54 50 46 01                                // .TTPF.

    Name (TTDP, Zero)

  025C: 08 54 54 44 50 00                                // .TTDP.

    Name (TPMF, Zero)

  0262: 08 54 50 4D 46 00                                // .TPMF.

    Name (DSSP, Zero)

  0268: 08 44 53 53 50 00                                // .DSSP.

    Name (FHPP, Zero)

  026E: 08 46 48 50 50 00                                // .FHPP.

    Name (HIDK, "MSFT0001")

  0274: 08 48 49 44 4B 0D 4D 53 46 54 30 30 30 31 00     // .HIDK.MSFT0001.

    Name (HIDM, "MSFT0003")

  0283: 08 48 49 44 4D 0D 4D 53 46 54 30 30 30 33 00     // .HIDM.MSFT0003.

    Name (CIDK, 0x0303D041)

  0292: 08 43 49 44 4B 0C 41 D0 03 03                    // .CIDK.A...

    Name (CIDM, 0x030FD041)

  029C: 08 43 49 44 4D 0C 41 D0 0F 03                    // .CIDM.A...

    Name (MBEC, Zero)

  02A6: 08 4D 42 45 43 00                                // .MBEC.

    Name (PMLN, 0x0100)

  02AC: 08 50 4D 4C 4E 0B 00 01                          // .PMLN...

    Name (GPLN, 0x0400)

  02B4: 08 47 50 4C 4E 0B 00 04                          // .GPLN...

    Name (ECBL, Zero)

  02BC: 08 45 43 42 4C 00                                // .ECBL.

    Name (TPID, One)

  02C2: 08 54 50 49 44 01                                // .TPID.

    Name (MOCD, Zero)

  02C8: 08 4D 4F 43 44 00                                // .MOCD.

    Name (SS1, Zero)

  02CE: 08 53 53 31 5F 00                                // .SS1_.

    Name (SS2, Zero)

  02D4: 08 53 53 32 5F 00                                // .SS2_.

    Name (SS3, One)

  02DA: 08 53 53 33 5F 01                                // .SS3_.

    Name (SS4, One)

  02E0: 08 53 53 34 5F 01                                // .SS4_.

    Name (IOST, 0x4400)

  02E6: 08 49 4F 53 54 0B 00 44                          // .IOST..D

    Name (TOPM, 0x00000000)

  02EE: 08 54 4F 50 4D 0C 00 00 00 00                    // .TOPM.....

    Name (ROMS, 0xFFE00000)

  02F8: 08 52 4F 4D 53 0C 00 00 E0 FF                    // .ROMS.....

    Name (VGAF, One)

  0302: 08 56 47 41 46 01                                // .VGAF.

    OperationRegion (GNVS, SystemMemory, 0xC77A8C18, 0x02C1)

  0308: 5B 80 47 4E 56 53 00 0C 18 8C 7A C7 0B C1 02     // [.GNVS....z....

    Field (GNVS, AnyAcc, Lock, Preserve)
    {
        OSYS,   16, 
        SMIF,   8, 
        PRM0,   8, 
        PRM1,   8, 
        SCIF,   8, 
        PRM2,   8, 
        PRM3,   8, 
        LCKF,   8, 
        PRM4,   8, 
        PRM5,   8, 
        P80D,   32, 
        PWRS,   8, 
        DBGS,   8, 
        THOF,   8, 
        ACT1,   8, 
        ACTT,   8, 
        PSVT,   8, 
        TC1V,   8, 
        TC2V,   8, 
        TSPV,   8, 
        CRTT,   8, 
        DTSE,   8, 
        DTS1,   8, 
        DTS2,   8, 
        DTSF,   8, 
        Offset (0x1E), 
        Offset (0x25), 
        REVN,   8, 
        Offset (0x28), 
        APIC,   8, 
        TCNT,   8, 
        PCP0,   8, 
        PCP1,   8, 
        PPCM,   8, 
        PPMF,   32, 
        C67L,   8, 
        NATP,   8, 
        CMAP,   8, 
        CMBP,   8, 
        LPTP,   8, 
        FDCP,   8, 
        CMCP,   8, 
        CIRP,   8, 
        SMSC,   8, 
        W381,   8, 
        SMC1,   8, 
        EMAE,   8, 
        EMAP,   16, 
        EMAL,   16, 
        Offset (0x42), 
        MEFE,   8, 
        DSTS,   8, 
        Offset (0x48), 
        MORD,   8, 
        TCGP,   8, 
        PPRP,   32, 
        PPRQ,   8, 
        LPPR,   8, 
        GTF0,   56, 
        GTF2,   56, 
        IDEM,   8, 
        GTF1,   56, 
        BID,    16, 
        PLID,   8, 
        ECTG,   8, 
        Offset (0x70), 
        OSCC,   8, 
        NEXP,   8, 
        SBV1,   8, 
        SBV2,   8, 
        Offset (0x7A), 
        DSEN,   8, 
        ECON,   8, 
        GPIC,   8, 
        CTYP,   8, 
        L01C,   8, 
        VFN0,   8, 
        VFN1,   8, 
        VFN2,   8, 
        VFN3,   8, 
        VFN4,   8, 
        VFN5,   8, 
        VFN6,   8, 
        VFN7,   8, 
        VFN8,   8, 
        VFN9,   8, 
        Offset (0x8F), 
        ATMC,   8, 
        PTMC,   8, 
        ATRA,   8, 
        PTRA,   8, 
        PNHM,   32, 
        TBAB,   32, 
        TBAH,   32, 
        RTIP,   8, 
        TSOD,   8, 
        ATPC,   8, 
        PTPC,   8, 
        PFLV,   8, 
        BREV,   8, 
        PDTS,   8, 
        PKGA,   8, 
        PAMT,   8, 
        AC0F,   8, 
        AC1F,   8, 
        DTS3,   8, 
        DTS4,   8, 
        Offset (0xB0), 
        LTR1,   8, 
        LTR2,   8, 
        LTR3,   8, 
        LTR4,   8, 
        LTR5,   8, 
        LTR6,   8, 
        LTR7,   8, 
        LTR8,   8, 
        OBF1,   8, 
        OBF2,   8, 
        OBF3,   8, 
        OBF4,   8, 
        OBF5,   8, 
        OBF6,   8, 
        OBF7,   8, 
        OBF8,   8, 
        XHCI,   8, 
        XTUB,   32, 
        XTUS,   32, 
        XMPB,   32, 
        DDRF,   8, 
        RTD3,   8, 
        PEP0,   8, 
        PEP3,   8, 
        DPTF,   8, 
        SADE,   8, 
        SACR,   8, 
        SAHT,   8, 
        PCHD,   8, 
        PCHC,   8, 
        PCHH,   8, 
        CTDP,   8, 
        LPMP,   8, 
        LPMV,   8, 
        ECEU,   8, 
        TGFG,   16, 
        MEMD,   8, 
        MEMC,   8, 
        MEMH,   8, 
        FND1,   8, 
        FND2,   8, 
        AMBD,   8, 
        AMAT,   8, 
        AMPT,   8, 
        AMCT,   8, 
        AMHT,   8, 
        SKDE,   8, 
        SKAT,   8, 
        SKPT,   8, 
        SKCT,   8, 
        SKHT,   8, 
        EFDE,   8, 
        EFAT,   8, 
        EFPT,   8, 
        EFCT,   8, 
        EFHT,   8, 
        VRDE,   8, 
        VRAT,   8, 
        VRPT,   8, 
        VRCT,   8, 
        VRHT,   8, 
        DPAP,   8, 
        DPPP,   8, 
        DPCP,   8, 
        DCMP,   8, 
        TRTV,   8, 
        LPOE,   8, 
        LPOP,   8, 
        LPOS,   8, 
        LPOW,   8, 
        LPER,   8, 
        PPSZ,   32, 
        DISE,   8, 
        PFMA,   64, 
        PFMS,   8, 
        PFIA,   16, 
        ICNF,   8, 
        DSP0,   32, 
        DSP1,   32, 
        NFCE,   8, 
        CODS,   8, 
        SNHE,   8, 
        S0ID,   8, 
        CTDB,   8, 
        Offset (0x207), 
        PWRE,   8, 
        PWRP,   8, 
        XHPR,   8, 
        SDS0,   8, 
        SDS1,   16, 
        SDS2,   8, 
        SDS3,   8, 
        SDS4,   8, 
        SDS5,   8, 
        Offset (0x212), 
        RIC0,   8, 
        PEPY,   8, 
        DVS0,   8, 
        DVS1,   8, 
        DVS2,   8, 
        DVS3,   8, 
        GBSX,   8, 
        IUBE,   8, 
        IUCE,   8, 
        IUDE,   8, 
        ECNO,   8, 
        AUDD,   16, 
        DSPD,   16, 
        IC0D,   16, 
        IC1D,   16, 
        IC1S,   16, 
        VRRD,   16, 
        PSCP,   8, 
        RWAG,   8, 
        I20D,   16, 
        I21D,   16, 
        Offset (0x231), 
        RCG0,   8, 
        ECDB,   8, 
        P2ME,   8, 
        SSH0,   16, 
        SSL0,   16, 
        SSD0,   16, 
        FMH0,   16, 
        FML0,   16, 
        FMD0,   16, 
        FPH0,   16, 
        FPL0,   16, 
        FPD0,   16, 
        SSH1,   16, 
        SSL1,   16, 
        SSD1,   16, 
        FMH1,   16, 
        FML1,   16, 
        FMD1,   16, 
        FPH1,   16, 
        FPL1,   16, 
        FPD1,   16, 
        M0C0,   16, 
        M1C0,   16, 
        M2C0,   16, 
        M0C1,   16, 
        M1C1,   16, 
        M2C1,   16, 
        M0C2,   16, 
        M1C2,   16, 
        M0C3,   16, 
        M1C3,   16, 
        M0C4,   16, 
        M1C4,   16, 
        M0C5,   16, 
        M1C5,   16, 
        TBSF,   8, 
        GIRQ,   32, 
        DMTP,   8, 
        DMTD,   8, 
        DMSH,   8, 
        LANP,   8, 
        Offset (0x27E), 
        SHSB,   8, 
        PLCS,   8, 
        PLVL,   16, 
        GN1E,   8, 
        G1AT,   8, 
        G1PT,   8, 
        G1CT,   8, 
        G1HT,   8, 
        GN2E,   8, 
        G2AT,   8, 
        G2PT,   8, 
        G2CT,   8, 
        G2HT,   8, 
        WWSD,   8, 
        CVSD,   8, 
        SSDD,   8, 
        INLD,   8, 
        IFAT,   8, 
        IFPT,   8, 
        IFCT,   8, 
        IFHT,   8, 
        DOSD,   8, 
        USBH,   8, 
        BCV4,   8, 
        WTV0,   8, 
        WTV1,   8, 
        APFU,   8, 
        SOHP,   8, 
        NOHP,   8, 
        TBSE,   8, 
        WKFN,   8, 
        PEPC,   16, 
        VRSD,   16, 
        PB1E,   8, 
        WAND,   8, 
        WWAT,   8, 
        WWPT,   8, 
        WWCT,   8, 
        WWHT,   8, 
        Offset (0x2AD), 
        MPLT,   16, 
        GR13,   8, 
        SPST,   8, 
        ECLP,   8, 
        INSC,   8, 
        OEMF,   16, 
        OIOP,   16, 
        ODAL,   8, 
        OCMD,   8, 
        ODA0,   8, 
        ODA1,   8, 
        ODA2,   8, 
        ODA3,   8, 
        LKFG,   8, 
        FNF1,   8, 
        TJMX,   8, 
        GPSC,   8
    }


  0317: 5B 81 43 63 47 4E 56 53 10 4F 53 59 53 10 53 4D  // [.CcGNVS.OSYS.SM
  0327: 49 46 08 50 52 4D 30 08 50 52 4D 31 08 53 43 49  // IF.PRM0.PRM1.SCI
  0337: 46 08 50 52 4D 32 08 50 52 4D 33 08 4C 43 4B 46  // F.PRM2.PRM3.LCKF
  0347: 08 50 52 4D 34 08 50 52 4D 35 08 50 38 30 44 20  // .PRM4.PRM5.P80D 
  0357: 50 57 52 53 08 44 42 47 53 08 54 48 4F 46 08 41  // PWRS.DBGS.THOF.A
  0367: 43 54 31 08 41 43 54 54 08 50 53 56 54 08 54 43  // CT1.ACTT.PSVT.TC
  0377: 31 56 08 54 43 32 56 08 54 53 50 56 08 43 52 54  // 1V.TC2V.TSPV.CRT
  0387: 54 08 44 54 53 45 08 44 54 53 31 08 44 54 53 32  // T.DTSE.DTS1.DTS2
  0397: 08 44 54 53 46 08 00 08 00 38 52 45 56 4E 08 00  // .DTSF....8REVN..
  03A7: 10 41 50 49 43 08 54 43 4E 54 08 50 43 50 30 08  // .APIC.TCNT.PCP0.
  03B7: 50 43 50 31 08 50 50 43 4D 08 50 50 4D 46 20 43  // PCP1.PPCM.PPMF C
  03C7: 36 37 4C 08 4E 41 54 50 08 43 4D 41 50 08 43 4D  // 67L.NATP.CMAP.CM
  03D7: 42 50 08 4C 50 54 50 08 46 44 43 50 08 43 4D 43  // BP.LPTP.FDCP.CMC
  03E7: 50 08 43 49 52 50 08 53 4D 53 43 08 57 33 38 31  // P.CIRP.SMSC.W381
  03F7: 08 53 4D 43 31 08 45 4D 41 45 08 45 4D 41 50 10  // .SMC1.EMAE.EMAP.
  0407: 45 4D 41 4C 10 00 08 4D 45 46 45 08 44 53 54 53  // EMAL...MEFE.DSTS
  0417: 08 00 20 4D 4F 52 44 08 54 43 47 50 08 50 50 52  // .. MORD.TCGP.PPR
  0427: 50 20 50 50 52 51 08 4C 50 50 52 08 47 54 46 30  // P PPRQ.LPPR.GTF0
  0437: 38 47 54 46 32 38 49 44 45 4D 08 47 54 46 31 38  // 8GTF28IDEM.GTF18
  0447: 42 49 44 5F 10 50 4C 49 44 08 45 43 54 47 08 00  // BID_.PLID.ECTG..
  0457: 30 4F 53 43 43 08 4E 45 58 50 08 53 42 56 31 08  // 0OSCC.NEXP.SBV1.
  0467: 53 42 56 32 08 00 30 44 53 45 4E 08 45 43 4F 4E  // SBV2..0DSEN.ECON
  0477: 08 47 50 49 43 08 43 54 59 50 08 4C 30 31 43 08  // .GPIC.CTYP.L01C.
  0487: 56 46 4E 30 08 56 46 4E 31 08 56 46 4E 32 08 56  // VFN0.VFN1.VFN2.V
  0497: 46 4E 33 08 56 46 4E 34 08 56 46 4E 35 08 56 46  // FN3.VFN4.VFN5.VF
  04A7: 4E 36 08 56 46 4E 37 08 56 46 4E 38 08 56 46 4E  // N6.VFN7.VFN8.VFN
  04B7: 39 08 00 30 41 54 4D 43 08 50 54 4D 43 08 41 54  // 9..0ATMC.PTMC.AT
  04C7: 52 41 08 50 54 52 41 08 50 4E 48 4D 20 54 42 41  // RA.PTRA.PNHM TBA
  04D7: 42 20 54 42 41 48 20 52 54 49 50 08 54 53 4F 44  // B TBAH RTIP.TSOD
  04E7: 08 41 54 50 43 08 50 54 50 43 08 50 46 4C 56 08  // .ATPC.PTPC.PFLV.
  04F7: 42 52 45 56 08 50 44 54 53 08 50 4B 47 41 08 50  // BREV.PDTS.PKGA.P
  0507: 41 4D 54 08 41 43 30 46 08 41 43 31 46 08 44 54  // AMT.AC0F.AC1F.DT
  0517: 53 33 08 44 54 53 34 08 00 20 4C 54 52 31 08 4C  // S3.DTS4.. LTR1.L
  0527: 54 52 32 08 4C 54 52 33 08 4C 54 52 34 08 4C 54  // TR2.LTR3.LTR4.LT
  0537: 52 35 08 4C 54 52 36 08 4C 54 52 37 08 4C 54 52  // R5.LTR6.LTR7.LTR
  0547: 38 08 4F 42 46 31 08 4F 42 46 32 08 4F 42 46 33  // 8.OBF1.OBF2.OBF3
  0557: 08 4F 42 46 34 08 4F 42 46 35 08 4F 42 46 36 08  // .OBF4.OBF5.OBF6.
  0567: 4F 42 46 37 08 4F 42 46 38 08 58 48 43 49 08 58  // OBF7.OBF8.XHCI.X
  0577: 54 55 42 20 58 54 55 53 20 58 4D 50 42 20 44 44  // TUB XTUS XMPB DD
  0587: 52 46 08 52 54 44 33 08 50 45 50 30 08 50 45 50  // RF.RTD3.PEP0.PEP
  0597: 33 08 44 50 54 46 08 53 41 44 45 08 53 41 43 52  // 3.DPTF.SADE.SACR
  05A7: 08 53 41 48 54 08 50 43 48 44 08 50 43 48 43 08  // .SAHT.PCHD.PCHC.
  05B7: 50 43 48 48 08 43 54 44 50 08 4C 50 4D 50 08 4C  // PCHH.CTDP.LPMP.L
  05C7: 50 4D 56 08 45 43 45 55 08 54 47 46 47 10 4D 45  // PMV.ECEU.TGFG.ME
  05D7: 4D 44 08 4D 45 4D 43 08 4D 45 4D 48 08 46 4E 44  // MD.MEMC.MEMH.FND
  05E7: 31 08 46 4E 44 32 08 41 4D 42 44 08 41 4D 41 54  // 1.FND2.AMBD.AMAT
  05F7: 08 41 4D 50 54 08 41 4D 43 54 08 41 4D 48 54 08  // .AMPT.AMCT.AMHT.
  0607: 53 4B 44 45 08 53 4B 41 54 08 53 4B 50 54 08 53  // SKDE.SKAT.SKPT.S
  0617: 4B 43 54 08 53 4B 48 54 08 45 46 44 45 08 45 46  // KCT.SKHT.EFDE.EF
  0627: 41 54 08 45 46 50 54 08 45 46 43 54 08 45 46 48  // AT.EFPT.EFCT.EFH
  0637: 54 08 56 52 44 45 08 56 52 41 54 08 56 52 50 54  // T.VRDE.VRAT.VRPT
  0647: 08 56 52 43 54 08 56 52 48 54 08 44 50 41 50 08  // .VRCT.VRHT.DPAP.
  0657: 44 50 50 50 08 44 50 43 50 08 44 43 4D 50 08 54  // DPPP.DPCP.DCMP.T
  0667: 52 54 56 08 4C 50 4F 45 08 4C 50 4F 50 08 4C 50  // RTV.LPOE.LPOP.LP
  0677: 4F 53 08 4C 50 4F 57 08 4C 50 45 52 08 50 50 53  // OS.LPOW.LPER.PPS
  0687: 5A 20 44 49 53 45 08 50 46 4D 41 40 04 50 46 4D  // Z DISE.PFMA@.PFM
  0697: 53 08 50 46 49 41 10 49 43 4E 46 08 44 53 50 30  // S.PFIA.ICNF.DSP0
  06A7: 20 44 53 50 31 20 4E 46 43 45 08 43 4F 44 53 08  //  DSP1 NFCE.CODS.
  06B7: 53 4E 48 45 08 53 30 49 44 08 43 54 44 42 08 00  // SNHE.S0ID.CTDB..
  06C7: 40 74 50 57 52 45 08 50 57 52 50 08 58 48 50 52  // @tPWRE.PWRP.XHPR
  06D7: 08 53 44 53 30 08 53 44 53 31 10 53 44 53 32 08  // .SDS0.SDS1.SDS2.
  06E7: 53 44 53 33 08 53 44 53 34 08 53 44 53 35 08 00  // SDS3.SDS4.SDS5..
  06F7: 08 52 49 43 30 08 50 45 50 59 08 44 56 53 30 08  // .RIC0.PEPY.DVS0.
  0707: 44 56 53 31 08 44 56 53 32 08 44 56 53 33 08 47  // DVS1.DVS2.DVS3.G
  0717: 42 53 58 08 49 55 42 45 08 49 55 43 45 08 49 55  // BSX.IUBE.IUCE.IU
  0727: 44 45 08 45 43 4E 4F 08 41 55 44 44 10 44 53 50  // DE.ECNO.AUDD.DSP
  0737: 44 10 49 43 30 44 10 49 43 31 44 10 49 43 31 53  // D.IC0D.IC1D.IC1S
  0747: 10 56 52 52 44 10 50 53 43 50 08 52 57 41 47 08  // .VRRD.PSCP.RWAG.
  0757: 49 32 30 44 10 49 32 31 44 10 00 10 52 43 47 30  // I20D.I21D...RCG0
  0767: 08 45 43 44 42 08 50 32 4D 45 08 53 53 48 30 10  // .ECDB.P2ME.SSH0.
  0777: 53 53 4C 30 10 53 53 44 30 10 46 4D 48 30 10 46  // SSL0.SSD0.FMH0.F
  0787: 4D 4C 30 10 46 4D 44 30 10 46 50 48 30 10 46 50  // ML0.FMD0.FPH0.FP
  0797: 4C 30 10 46 50 44 30 10 53 53 48 31 10 53 53 4C  // L0.FPD0.SSH1.SSL
  07A7: 31 10 53 53 44 31 10 46 4D 48 31 10 46 4D 4C 31  // 1.SSD1.FMH1.FML1
  07B7: 10 46 4D 44 31 10 46 50 48 31 10 46 50 4C 31 10  // .FMD1.FPH1.FPL1.
  07C7: 46 50 44 31 10 4D 30 43 30 10 4D 31 43 30 10 4D  // FPD1.M0C0.M1C0.M
  07D7: 32 43 30 10 4D 30 43 31 10 4D 31 43 31 10 4D 32  // 2C0.M0C1.M1C1.M2
  07E7: 43 31 10 4D 30 43 32 10 4D 31 43 32 10 4D 30 43  // C1.M0C2.M1C2.M0C
  07F7: 33 10 4D 31 43 33 10 4D 30 43 34 10 4D 31 43 34  // 3.M1C3.M0C4.M1C4
  0807: 10 4D 30 43 35 10 4D 31 43 35 10 54 42 53 46 08  // .M0C5.M1C5.TBSF.
  0817: 47 49 52 51 20 44 4D 54 50 08 44 4D 54 44 08 44  // GIRQ DMTP.DMTD.D
  0827: 4D 53 48 08 4C 41 4E 50 08 00 08 53 48 53 42 08  // MSH.LANP...SHSB.
  0837: 50 4C 43 53 08 50 4C 56 4C 10 47 4E 31 45 08 47  // PLCS.PLVL.GN1E.G
  0847: 31 41 54 08 47 31 50 54 08 47 31 43 54 08 47 31  // 1AT.G1PT.G1CT.G1
  0857: 48 54 08 47 4E 32 45 08 47 32 41 54 08 47 32 50  // HT.GN2E.G2AT.G2P
  0867: 54 08 47 32 43 54 08 47 32 48 54 08 57 57 53 44  // T.G2CT.G2HT.WWSD
  0877: 08 43 56 53 44 08 53 53 44 44 08 49 4E 4C 44 08  // .CVSD.SSDD.INLD.
  0887: 49 46 41 54 08 49 46 50 54 08 49 46 43 54 08 49  // IFAT.IFPT.IFCT.I
  0897: 46 48 54 08 44 4F 53 44 08 55 53 42 48 08 42 43  // FHT.DOSD.USBH.BC
  08A7: 56 34 08 57 54 56 30 08 57 54 56 31 08 41 50 46  // V4.WTV0.WTV1.APF
  08B7: 55 08 53 4F 48 50 08 4E 4F 48 50 08 54 42 53 45  // U.SOHP.NOHP.TBSE
  08C7: 08 57 4B 46 4E 08 50 45 50 43 10 56 52 53 44 10  // .WKFN.PEPC.VRSD.
  08D7: 50 42 31 45 08 57 41 4E 44 08 57 57 41 54 08 57  // PB1E.WAND.WWAT.W
  08E7: 57 50 54 08 57 57 43 54 08 57 57 48 54 08 00 28  // WPT.WWCT.WWHT..(
  08F7: 4D 50 4C 54 10 47 52 31 33 08 53 50 53 54 08 45  // MPLT.GR13.SPST.E
  0907: 43 4C 50 08 49 4E 53 43 08 4F 45 4D 46 10 4F 49  // CLP.INSC.OEMF.OI
  0917: 4F 50 10 4F 44 41 4C 08 4F 43 4D 44 08 4F 44 41  // OP.ODAL.OCMD.ODA
  0927: 30 08 4F 44 41 31 08 4F 44 41 32 08 4F 44 41 33  // 0.ODA1.ODA2.ODA3
  0937: 08 4C 4B 46 47 08 46 4E 46 31 08 54 4A 4D 58 08  // .LKFG.FNF1.TJMX.
  0947: 47 50 53 43 08                                   // GPSC.

    Scope (_SB)
    {

  094C: 10 8E FE 02 5F 53 42 5F                          // ...._SB_

        Name (PR00, 
  0954: 08 50 52 30 30                                   // .PR00

Package (0x1F)
        {

  0959: 12 41 1C 1F                                      // .A..

            Package (0x04)
            {
                0x001FFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


  095D: 12 0D 04 0C FF FF 1F 00 01 4C 4E 4B 44 00        // .........LNKD.

            Package (0x04)
            {
                0x001FFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  096B: 12 0E 04 0C FF FF 1F 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  097A: 12 0D 04 0C FF FF 14 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                LNKH, 
                Zero
            }, 


  0988: 12 0D 04 0C FF FF 1D 00 00 4C 4E 4B 48 00        // .........LNKH.

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  0996: 12 0D 04 0C FF FF 1A 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                LNKG, 
                Zero
            }, 


  09A4: 12 0D 04 0C FF FF 1B 00 00 4C 4E 4B 47 00        // .........LNKG.

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  09B2: 12 0D 04 0C FF FF 16 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0016FFFF, 
                One, 
                LNKD, 
                Zero
            }, 


  09C0: 12 0D 04 0C FF FF 16 00 01 4C 4E 4B 44 00        // .........LNKD.

            Package (0x04)
            {
                0x0016FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  09CE: 12 0E 04 0C FF FF 16 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x0016FFFF, 
                0x03, 
                LNKB, 
                Zero
            }, 


  09DD: 12 0E 04 0C FF FF 16 00 0A 03 4C 4E 4B 42 00     // ..........LNKB.

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  09EC: 12 0D 04 0C FF FF 1C 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x001CFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  09FA: 12 0D 04 0C FF FF 1C 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x001CFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  0A08: 12 0E 04 0C FF FF 1C 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x001CFFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


  0A17: 12 0E 04 0C FF FF 1C 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x0015FFFF, 
                One, 
                LNKE, 
                Zero
            }, 


  0A26: 12 0D 04 0C FF FF 15 00 01 4C 4E 4B 45 00        // .........LNKE.

            Package (0x04)
            {
                0x0015FFFF, 
                0x02, 
                LNKF, 
                Zero
            }, 


  0A34: 12 0E 04 0C FF FF 15 00 0A 02 4C 4E 4B 46 00     // ..........LNKF.

            Package (0x04)
            {
                0x0015FFFF, 
                0x03, 
                LNKF, 
                Zero
            }, 


  0A43: 12 0E 04 0C FF FF 15 00 0A 03 4C 4E 4B 46 00     // ..........LNKF.

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                LNKG, 
                Zero
            }, 


  0A52: 12 0D 04 0C FF FF 17 00 00 4C 4E 4B 47 00        // .........LNKG.

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                LNKH, 
                Zero
            }, 


  0A60: 12 0D 04 0C FF FF 13 00 00 4C 4E 4B 48 00        // .........LNKH.

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  0A6E: 12 0D 04 0C FF FF 01 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  0A7C: 12 0D 04 0C FF FF 01 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  0A8A: 12 0E 04 0C FF FF 01 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


  0A99: 12 0E 04 0C FF FF 01 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  0AA8: 12 0D 04 0C FF FF 03 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  0AB6: 12 0D 04 0C FF FF 04 00 00 4C 4E 4B 41 00        // .........LNKA.

            Package (0x04)
            {
                0x0004FFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  0AC4: 12 0D 04 0C FF FF 04 00 01 4C 4E 4B 42 00        // .........LNKB.

            Package (0x04)
            {
                0x0004FFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  0AD2: 12 0E 04 0C FF FF 04 00 0A 02 4C 4E 4B 43 00     // ..........LNKC.

            Package (0x04)
            {
                0x0004FFFF, 
                0x03, 
                LNKD, 
                Zero
            }, 


  0AE1: 12 0E 04 0C FF FF 04 00 0A 03 4C 4E 4B 44 00     // ..........LNKD.

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                LNKF, 
                Zero
            }, 


  0AF0: 12 0D 04 0C FF FF 1F 00 00 4C 4E 4B 46 00        // .........LNKF.

            Package (0x04)
            {
                0x001FFFFF, 
                0x03, 
                LNKA, 
                Zero
            }, 


  0AFE: 12 0E 04 0C FF FF 1F 00 0A 03 4C 4E 4B 41 00     // ..........LNKA.

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                LNKA, 
                Zero
            }
        })

  0B0D: 12 0D 04 0C FF FF 02 00 00 4C 4E 4B 41 00        // .........LNKA.

        Name (AR00, 
  0B1B: 08 41 52 30 30                                   // .AR00

Package (0x1F)
        {

  0B20: 12 43 18 1F                                      // .C..

            Package (0x04)
            {
                0x001FFFFF, 
                One, 
                Zero, 
                0x13
            }, 


  0B24: 12 0B 04 0C FF FF 1F 00 01 00 0A 13              // ............

            Package (0x04)
            {
                0x001FFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  0B30: 12 0C 04 0C FF FF 1F 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x0014FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  0B3D: 12 0B 04 0C FF FF 14 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x001DFFFF, 
                Zero, 
                Zero, 
                0x17
            }, 


  0B49: 12 0B 04 0C FF FF 1D 00 00 00 0A 17              // ............

            Package (0x04)
            {
                0x001AFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  0B55: 12 0B 04 0C FF FF 1A 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x001BFFFF, 
                Zero, 
                Zero, 
                0x16
            }, 


  0B61: 12 0B 04 0C FF FF 1B 00 00 00 0A 16              // ............

            Package (0x04)
            {
                0x0016FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  0B6D: 12 0B 04 0C FF FF 16 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0016FFFF, 
                One, 
                Zero, 
                0x13
            }, 


  0B79: 12 0B 04 0C FF FF 16 00 01 00 0A 13              // ............

            Package (0x04)
            {
                0x0016FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  0B85: 12 0C 04 0C FF FF 16 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x0016FFFF, 
                0x03, 
                Zero, 
                0x11
            }, 


  0B92: 12 0C 04 0C FF FF 16 00 0A 03 00 0A 11           // .............

            Package (0x04)
            {
                0x001CFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  0B9F: 12 0B 04 0C FF FF 1C 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x001CFFFF, 
                One, 
                Zero, 
                0x11
            }, 


  0BAB: 12 0B 04 0C FF FF 1C 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x001CFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  0BB7: 12 0C 04 0C FF FF 1C 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x001CFFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


  0BC4: 12 0C 04 0C FF FF 1C 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x0015FFFF, 
                One, 
                Zero, 
                0x14
            }, 


  0BD1: 12 0B 04 0C FF FF 15 00 01 00 0A 14              // ............

            Package (0x04)
            {
                0x0015FFFF, 
                0x02, 
                Zero, 
                0x15
            }, 


  0BDD: 12 0C 04 0C FF FF 15 00 0A 02 00 0A 15           // .............

            Package (0x04)
            {
                0x0015FFFF, 
                0x03, 
                Zero, 
                0x15
            }, 


  0BEA: 12 0C 04 0C FF FF 15 00 0A 03 00 0A 15           // .............

            Package (0x04)
            {
                0x0017FFFF, 
                Zero, 
                Zero, 
                0x16
            }, 


  0BF7: 12 0B 04 0C FF FF 17 00 00 00 0A 16              // ............

            Package (0x04)
            {
                0x0013FFFF, 
                Zero, 
                Zero, 
                0x17
            }, 


  0C03: 12 0B 04 0C FF FF 13 00 00 00 0A 17              // ............

            Package (0x04)
            {
                0x0001FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  0C0F: 12 0B 04 0C FF FF 01 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0001FFFF, 
                One, 
                Zero, 
                0x11
            }, 


  0C1B: 12 0B 04 0C FF FF 01 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x0001FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  0C27: 12 0C 04 0C FF FF 01 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x0001FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


  0C34: 12 0C 04 0C FF FF 01 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x0003FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  0C41: 12 0B 04 0C FF FF 03 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0004FFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  0C4D: 12 0B 04 0C FF FF 04 00 00 00 0A 10              // ............

            Package (0x04)
            {
                0x0004FFFF, 
                One, 
                Zero, 
                0x11
            }, 


  0C59: 12 0B 04 0C FF FF 04 00 01 00 0A 11              // ............

            Package (0x04)
            {
                0x0004FFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  0C65: 12 0C 04 0C FF FF 04 00 0A 02 00 0A 12           // .............

            Package (0x04)
            {
                0x0004FFFF, 
                0x03, 
                Zero, 
                0x13
            }, 


  0C72: 12 0C 04 0C FF FF 04 00 0A 03 00 0A 13           // .............

            Package (0x04)
            {
                0x001FFFFF, 
                Zero, 
                Zero, 
                0x15
            }, 


  0C7F: 12 0B 04 0C FF FF 1F 00 00 00 0A 15              // ............

            Package (0x04)
            {
                0x001FFFFF, 
                0x03, 
                Zero, 
                0x10
            }, 


  0C8B: 12 0C 04 0C FF FF 1F 00 0A 03 00 0A 10           // .............

            Package (0x04)
            {
                0x0002FFFF, 
                Zero, 
                Zero, 
                0x10
            }
        })

  0C98: 12 0B 04 0C FF FF 02 00 00 00 0A 10              // ............

        Name (PR04, 
  0CA4: 08 50 52 30 34                                   // .PR04

Package (0x04)
        {

  0CA9: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  0CAC: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  0CB8: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  0CC4: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

  0CD1: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR04, 
  0CDE: 08 41 52 30 34                                   // .AR04

Package (0x04)
        {

  0CE3: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  0CE6: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


  0CF0: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  0CFA: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

  0D05: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR05, 
  0D10: 08 50 52 30 35                                   // .PR05

Package (0x04)
        {

  0D15: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


  0D18: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


  0D24: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


  0D30: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

  0D3D: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR05, 
  0D4A: 08 41 52 30 35                                   // .AR05

Package (0x04)
        {

  0D4F: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


  0D52: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


  0D5C: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


  0D66: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

  0D71: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR06, 
  0D7C: 08 50 52 30 36                                   // .PR06

Package (0x04)
        {

  0D81: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


  0D84: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


  0D90: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


  0D9C: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

  0DA9: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR06, 
  0DB6: 08 41 52 30 36                                   // .AR06

Package (0x04)
        {

  0DBB: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


  0DBE: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


  0DC8: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


  0DD2: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

  0DDD: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PR07, 
  0DE8: 08 50 52 30 37                                   // .PR07

Package (0x04)
        {

  0DED: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 


  0DF0: 12 0B 04 0B FF FF 00 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 


  0DFC: 12 0B 04 0B FF FF 01 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 


  0E08: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 42 00           // ........LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })

  0E15: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 43 00           // ........LNKC.

        Name (AR07, 
  0E22: 08 41 52 30 37                                   // .AR07

Package (0x04)
        {

  0E27: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 


  0E2A: 12 09 04 0B FF FF 00 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 


  0E34: 12 09 04 0B FF FF 01 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 


  0E3E: 12 0A 04 0B FF FF 0A 02 00 0A 11                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })

  0E49: 12 0A 04 0B FF FF 0A 03 00 0A 12                 // ...........

        Name (PR08, 
  0E54: 08 50 52 30 38                                   // .PR08

Package (0x04)
        {

  0E59: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  0E5C: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  0E68: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  0E74: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

  0E81: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR08, 
  0E8E: 08 41 52 30 38                                   // .AR08

Package (0x04)
        {

  0E93: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  0E96: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


  0EA0: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  0EAA: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

  0EB5: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR09, 
  0EC0: 08 50 52 30 39                                   // .PR09

Package (0x04)
        {

  0EC5: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


  0EC8: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


  0ED4: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


  0EE0: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

  0EED: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR09, 
  0EFA: 08 41 52 30 39                                   // .AR09

Package (0x04)
        {

  0EFF: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


  0F02: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


  0F0C: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


  0F16: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

  0F21: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR0E, 
  0F2C: 08 50 52 30 45                                   // .PR0E

Package (0x04)
        {

  0F31: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


  0F34: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


  0F40: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


  0F4C: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

  0F59: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR0E, 
  0F66: 08 41 52 30 45                                   // .AR0E

Package (0x04)
        {

  0F6B: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


  0F6E: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


  0F78: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


  0F82: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

  0F8D: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PR0F, 
  0F98: 08 50 52 30 46                                   // .PR0F

Package (0x04)
        {

  0F9D: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKD, 
                Zero
            }, 


  0FA0: 12 0B 04 0B FF FF 00 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKA, 
                Zero
            }, 


  0FAC: 12 0B 04 0B FF FF 01 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKB, 
                Zero
            }, 


  0FB8: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 42 00           // ........LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKC, 
                Zero
            }
        })

  0FC5: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 43 00           // ........LNKC.

        Name (AR0F, 
  0FD2: 08 41 52 30 46                                   // .AR0F

Package (0x04)
        {

  0FD7: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x13
            }, 


  0FDA: 12 09 04 0B FF FF 00 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x10
            }, 


  0FE4: 12 09 04 0B FF FF 01 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x11
            }, 


  0FEE: 12 0A 04 0B FF FF 0A 02 00 0A 11                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x12
            }
        })

  0FF9: 12 0A 04 0B FF FF 0A 03 00 0A 12                 // ...........

        Name (PR02, 
  1004: 08 50 52 30 32                                   // .PR02

Package (0x04)
        {

  1009: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKA, 
                Zero
            }, 


  100C: 12 0B 04 0B FF FF 00 4C 4E 4B 41 00              // .......LNKA.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKB, 
                Zero
            }, 


  1018: 12 0B 04 0B FF FF 01 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKC, 
                Zero
            }, 


  1024: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 43 00           // ........LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKD, 
                Zero
            }
        })

  1031: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 44 00           // ........LNKD.

        Name (AR02, 
  103E: 08 41 52 30 32                                   // .AR02

Package (0x04)
        {

  1043: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x10
            }, 


  1046: 12 09 04 0B FF FF 00 00 0A 10                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x11
            }, 


  1050: 12 09 04 0B FF FF 01 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x12
            }, 


  105A: 12 0A 04 0B FF FF 0A 02 00 0A 12                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x13
            }
        })

  1065: 12 0A 04 0B FF FF 0A 03 00 0A 13                 // ...........

        Name (PR0A, 
  1070: 08 50 52 30 41                                   // .PR0A

Package (0x04)
        {

  1075: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKB, 
                Zero
            }, 


  1078: 12 0B 04 0B FF FF 00 4C 4E 4B 42 00              // .......LNKB.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKC, 
                Zero
            }, 


  1084: 12 0B 04 0B FF FF 01 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKD, 
                Zero
            }, 


  1090: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 44 00           // ........LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKA, 
                Zero
            }
        })

  109D: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 41 00           // ........LNKA.

        Name (AR0A, 
  10AA: 08 41 52 30 41                                   // .AR0A

Package (0x04)
        {

  10AF: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x11
            }, 


  10B2: 12 09 04 0B FF FF 00 00 0A 11                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x12
            }, 


  10BC: 12 09 04 0B FF FF 01 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x13
            }, 


  10C6: 12 0A 04 0B FF FF 0A 02 00 0A 13                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x10
            }
        })

  10D1: 12 0A 04 0B FF FF 0A 03 00 0A 10                 // ...........

        Name (PR0B, 
  10DC: 08 50 52 30 42                                   // .PR0B

Package (0x04)
        {

  10E1: 12 34 04                                         // .4.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                LNKC, 
                Zero
            }, 


  10E4: 12 0B 04 0B FF FF 00 4C 4E 4B 43 00              // .......LNKC.

            Package (0x04)
            {
                0xFFFF, 
                One, 
                LNKD, 
                Zero
            }, 


  10F0: 12 0B 04 0B FF FF 01 4C 4E 4B 44 00              // .......LNKD.

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                LNKA, 
                Zero
            }, 


  10FC: 12 0C 04 0B FF FF 0A 02 4C 4E 4B 41 00           // ........LNKA.

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                LNKB, 
                Zero
            }
        })

  1109: 12 0C 04 0B FF FF 0A 03 4C 4E 4B 42 00           // ........LNKB.

        Name (AR0B, 
  1116: 08 41 52 30 42                                   // .AR0B

Package (0x04)
        {

  111B: 12 2C 04                                         // .,.

            Package (0x04)
            {
                0xFFFF, 
                Zero, 
                Zero, 
                0x12
            }, 


  111E: 12 09 04 0B FF FF 00 00 0A 12                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                One, 
                Zero, 
                0x13
            }, 


  1128: 12 09 04 0B FF FF 01 00 0A 13                    // ..........

            Package (0x04)
            {
                0xFFFF, 
                0x02, 
                Zero, 
                0x10
            }, 


  1132: 12 0A 04 0B FF FF 0A 02 00 0A 10                 // ...........

            Package (0x04)
            {
                0xFFFF, 
                0x03, 
                Zero, 
                0x11
            }
        })

  113D: 12 0A 04 0B FF FF 0A 03 00 0A 11                 // ...........

        Name (PRSA, 
  1148: 08 50 52 53 41                                   // .PRSA

ResourceTemplate ()
        {
            IRQ (Level, ActiveLow, Shared, )
                {3,4,5,6,10,11,12,14,15}
        })

  114D: 11 09 0A 06 23 78 DC 18 79 00                    // ....#x..y.

        Alias (PRSA, PRSB)

  1157: 06 50 52 53 41 50 52 53 42                       // .PRSAPRSB

        Alias (PRSA, PRSC)

  1160: 06 50 52 53 41 50 52 53 43                       // .PRSAPRSC

        Alias (PRSA, PRSD)

  1169: 06 50 52 53 41 50 52 53 44                       // .PRSAPRSD

        Alias (PRSA, PRSE)

  1172: 06 50 52 53 41 50 52 53 45                       // .PRSAPRSE

        Alias (PRSA, PRSF)

  117B: 06 50 52 53 41 50 52 53 46                       // .PRSAPRSF

        Alias (PRSA, PRSG)

  1184: 06 50 52 53 41 50 52 53 47                       // .PRSAPRSG

        Alias (PRSA, PRSH)

  118D: 06 50 52 53 41 50 52 53 48                       // .PRSAPRSH

        Device (PCI0)
        {

  1196: 5B 82 83 7A 02 50 43 49 30                       // [..z.PCI0

            Name (_HID, EisaId ("PNP0A08"))  // _HID: Hardware ID

  119F: 08 5F 48 49 44 0C 41 D0 0A 08                    // ._HID.A...

            Name (_CID, EisaId ("PNP0A03"))  // _CID: Compatible ID

  11A9: 08 5F 43 49 44 0C 41 D0 0A 03                    // ._CID.A...

            Name (_ADR, Zero)  // _ADR: Address

  11B3: 08 5F 41 44 52 00                                // ._ADR.

            Method (^BN00, 0, NotSerialized)
            {

  11B9: 14 09 5E 42 4E 30 30 00                          // ..^BN00.

                Return (Zero)
            }


  11C1: A4 00                                            // ..

            Method (_BBN, 0, NotSerialized)  // _BBN: BIOS Bus Number
            {

  11C3: 14 0B 5F 42 42 4E 00                             // .._BBN.

                Return (BN00 ())
            }


  11CA: A4 42 4E 30 30                                   // .BN00

            Name (_UID, Zero)  // _UID: Unique ID

  11CF: 08 5F 55 49 44 00                                // ._UID.

            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
            {

  11D5: 14 16 5F 50 52 54 00                             // .._PRT.

                If (PICM)
                {

  11DC: A0 0A 50 49 43 4D                                // ..PICM

                    Return (AR00 ())
                }


  11E2: A4 41 52 30 30                                   // .AR00

                Return (PR00 ())
            }


  11E7: A4 50 52 30 30                                   // .PR00

            OperationRegion (HBUS, PCI_Config, Zero, 0x0100)

  11EC: 5B 80 48 42 55 53 02 00 0B 00 01                 // [.HBUS.....

            Field (HBUS, DWordAcc, NoLock, Preserve)
            {
                Offset (0x40), 
                EPEN,   1, 
                    ,   11, 
                EPBR,   20, 
                Offset (0x48), 
                MHEN,   1, 
                    ,   14, 
                MHBR,   17, 
                Offset (0x50), 
                GCLK,   1, 
                Offset (0x54), 
                D0EN,   1, 
                D1F2,   1, 
                D1F1,   1, 
                D1F0,   1, 
                Offset (0x60), 
                PXEN,   1, 
                PXSZ,   2, 
                    ,   23, 
                PXBR,   6, 
                Offset (0x68), 
                DIEN,   1, 
                    ,   11, 
                DIBR,   20, 
                Offset (0x70), 
                    ,   20, 
                MEBR,   12, 
                Offset (0x80), 
                    ,   4, 
                PM0H,   2, 
                Offset (0x81), 
                PM1L,   2, 
                    ,   2, 
                PM1H,   2, 
                Offset (0x82), 
                PM2L,   2, 
                    ,   2, 
                PM2H,   2, 
                Offset (0x83), 
                PM3L,   2, 
                    ,   2, 
                PM3H,   2, 
                Offset (0x84), 
                PM4L,   2, 
                    ,   2, 
                PM4H,   2, 
                Offset (0x85), 
                PM5L,   2, 
                    ,   2, 
                PM5H,   2, 
                Offset (0x86), 
                PM6L,   2, 
                    ,   2, 
                PM6H,   2, 
                Offset (0x87), 
                Offset (0xA8), 
                    ,   20, 
                TUUD,   19, 
                Offset (0xBC), 
                    ,   20, 
                TLUD,   12, 
                Offset (0xC8), 
                    ,   7, 
                HTSE,   1
            }


  11F7: 5B 81 4A 0E 48 42 55 53 03 00 40 20 45 50 45 4E  // [.J.HBUS..@ EPEN
  1207: 01 00 0B 45 50 42 52 14 00 20 4D 48 45 4E 01 00  // ...EPBR.. MHEN..
  1217: 0E 4D 48 42 52 11 00 20 47 43 4C 4B 01 00 1F 44  // .MHBR.. GCLK...D
  1227: 30 45 4E 01 44 31 46 32 01 44 31 46 31 01 44 31  // 0EN.D1F2.D1F1.D1
  1237: 46 30 01 00 4C 05 50 58 45 4E 01 50 58 53 5A 02  // F0..L.PXEN.PXSZ.
  1247: 00 17 50 58 42 52 06 00 20 44 49 45 4E 01 00 0B  // ..PXBR.. DIEN...
  1257: 44 49 42 52 14 00 20 00 14 4D 45 42 52 0C 00 40  // DIBR.. ..MEBR..@
  1267: 06 00 04 50 4D 30 48 02 00 02 50 4D 31 4C 02 00  // ...PM0H...PM1L..
  1277: 02 50 4D 31 48 02 00 02 50 4D 32 4C 02 00 02 50  // .PM1H...PM2L...P
  1287: 4D 32 48 02 00 02 50 4D 33 4C 02 00 02 50 4D 33  // M2H...PM3L...PM3
  1297: 48 02 00 02 50 4D 34 4C 02 00 02 50 4D 34 48 02  // H...PM4L...PM4H.
  12A7: 00 02 50 4D 35 4C 02 00 02 50 4D 35 48 02 00 02  // ..PM5L...PM5H...
  12B7: 50 4D 36 4C 02 00 02 50 4D 36 48 02 00 02 00 48  // PM6L...PM6H....H
  12C7: 10 00 14 54 55 55 44 13 00 49 07 00 14 54 4C 55  // ...TUUD..I...TLU
  12D7: 44 0C 00 40 04 00 07 48 54 53 45 01              // D..@...HTSE.

            OperationRegion (MCHT, SystemMemory, 0xFED10000, 0x1100)

  12E3: 5B 80 4D 43 48 54 00 0C 00 00 D1 FE 0B 00 11     // [.MCHT.........

            Name (BUF0, 
  12F2: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
            {
                WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
                    0x0000,             // Granularity
                    0x0000,             // Range Minimum
                    0x00FF,             // Range Maximum
                    0x0000,             // Translation Offset
                    0x0100,             // Length
                    ,, _Y00)
                DWordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0x00000CF7,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00000CF8,         // Length
                    ,, , TypeStatic, DenseTranslation)
                IO (Decode16,
                    0x0CF8,             // Range Minimum
                    0x0CF8,             // Range Maximum
                    0x01,               // Alignment
                    0x08,               // Length
                    )
                DWordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                    0x00000000,         // Granularity
                    0x00000D00,         // Range Minimum
                    0x0000FFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x0000F300,         // Length
                    ,, , TypeStatic, DenseTranslation)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000A0000,         // Range Minimum
                    0x000BFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00020000,         // Length
                    ,, , AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C0000,         // Range Minimum
                    0x000C3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y01, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C4000,         // Range Minimum
                    0x000C7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y02, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000C8000,         // Range Minimum
                    0x000CBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y03, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000CC000,         // Range Minimum
                    0x000CFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y04, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D0000,         // Range Minimum
                    0x000D3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y05, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D4000,         // Range Minimum
                    0x000D7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y06, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000D8000,         // Range Minimum
                    0x000DBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y07, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000DC000,         // Range Minimum
                    0x000DFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y08, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E0000,         // Range Minimum
                    0x000E3FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y09, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E4000,         // Range Minimum
                    0x000E7FFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0A, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000E8000,         // Range Minimum
                    0x000EBFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0B, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000EC000,         // Range Minimum
                    0x000EFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00004000,         // Length
                    ,, _Y0C, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x000F0000,         // Range Minimum
                    0x000FFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0x00010000,         // Length
                    ,, _Y0D, AddressRangeMemory, TypeStatic)
                DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                    0x00000000,         // Granularity
                    0x00000000,         // Range Minimum
                    0xFEAFFFFF,         // Range Maximum
                    0x00000000,         // Translation Offset
                    0xFEB00000,         // Length
                    ,, _Y0E, AddressRangeMemory, TypeStatic)
            })

  12F7: 11 49 1D 0B D4 01 88 0D 00 02 0C 00 00 00 00 00  // .I..............
  1307: FF 00 00 00 00 01 87 17 00 01 0C 03 00 00 00 00  // ................
  1317: 00 00 00 00 F7 0C 00 00 00 00 00 00 F8 0C 00 00  // ................
  1327: 47 01 F8 0C F8 0C 01 08 87 17 00 01 0C 03 00 00  // G...............
  1337: 00 00 00 0D 00 00 FF FF 00 00 00 00 00 00 00 F3  // ................
  1347: 00 00 87 17 00 00 0C 03 00 00 00 00 00 00 0A 00  // ................
  1357: FF FF 0B 00 00 00 00 00 00 00 02 00 87 17 00 00  // ................
  1367: 0C 03 00 00 00 00 00 00 0C 00 FF 3F 0C 00 00 00  // ...........?....
  1377: 00 00 00 40 00 00 87 17 00 00 0C 03 00 00 00 00  // ...@............
  1387: 00 40 0C 00 FF 7F 0C 00 00 00 00 00 00 40 00 00  // .@...........@..
  1397: 87 17 00 00 0C 03 00 00 00 00 00 80 0C 00 FF BF  // ................
  13A7: 0C 00 00 00 00 00 00 40 00 00 87 17 00 00 0C 03  // .......@........
  13B7: 00 00 00 00 00 C0 0C 00 FF FF 0C 00 00 00 00 00  // ................
  13C7: 00 40 00 00 87 17 00 00 0C 03 00 00 00 00 00 00  // .@..............
  13D7: 0D 00 FF 3F 0D 00 00 00 00 00 00 40 00 00 87 17  // ...?.......@....
  13E7: 00 00 0C 03 00 00 00 00 00 40 0D 00 FF 7F 0D 00  // .........@......
  13F7: 00 00 00 00 00 40 00 00 87 17 00 00 0C 03 00 00  // .....@..........
  1407: 00 00 00 80 0D 00 FF BF 0D 00 00 00 00 00 00 40  // ...............@
  1417: 00 00 87 17 00 00 0C 03 00 00 00 00 00 C0 0D 00  // ................
  1427: FF FF 0D 00 00 00 00 00 00 40 00 00 87 17 00 00  // .........@......
  1437: 0C 03 00 00 00 00 00 00 0E 00 FF 3F 0E 00 00 00  // ...........?....
  1447: 00 00 00 40 00 00 87 17 00 00 0C 03 00 00 00 00  // ...@............
  1457: 00 40 0E 00 FF 7F 0E 00 00 00 00 00 00 40 00 00  // .@...........@..
  1467: 87 17 00 00 0C 03 00 00 00 00 00 80 0E 00 FF BF  // ................
  1477: 0E 00 00 00 00 00 00 40 00 00 87 17 00 00 0C 03  // .......@........
  1487: 00 00 00 00 00 C0 0E 00 FF FF 0E 00 00 00 00 00  // ................
  1497: 00 40 00 00 87 17 00 00 0C 03 00 00 00 00 00 00  // .@..............
  14A7: 0F 00 FF FF 0F 00 00 00 00 00 00 00 01 00 87 17  // ................
  14B7: 00 00 0C 03 00 00 00 00 00 00 00 00 FF FF AF FE  // ................
  14C7: 00 00 00 00 00 00 B0 FE 79 00                    // ........y.

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

  14D1: 14 46 30 5F 43 52 53 08                          // .F0_CRS.

                CreateWordField (BUF0, \_SB.PCI0._Y00._MAX, PBMX)  // _MAX: Maximum Base Address
                Store (Subtract (ShiftRight (PELN, 0x14), 0x02), PBMX)

  14D9: 8B 42 55 46 30 0A 0A 50 42 4D 58 70 74 7A 50 45  // .BUF0..PBMXptzPE
  14E9: 4C 4E 0A 14 00 0A 02 00 50 42 4D 58              // LN......PBMX

                CreateWordField (BUF0, \_SB.PCI0._Y00._LEN, PBLN)  // _LEN: Length
                Store (Subtract (ShiftRight (PELN, 0x14), One), PBLN)

  14F5: 8B 42 55 46 30 0A 0E 50 42 4C 4E 70 74 7A 50 45  // .BUF0..PBLNptzPE
  1505: 4C 4E 0A 14 00 01 00 50 42 4C 4E                 // LN.....PBLN

                If (PM1L)
                {

  1510: A0 16 50 4D 31 4C                                // ..PM1L

                    CreateDWordField (BUF0, \_SB.PCI0._Y01._LEN, C0LN)  // _LEN: Length

  1516: 8A 42 55 46 30 0A 7C 43 30 4C 4E                 // .BUF0.|C0LN

                    Store (Zero, C0LN)
                }


  1521: 70 00 43 30 4C 4E                                // p.C0LN

                If (LEqual (PM1L, One))
                {

  1527: A0 19 93 50 4D 31 4C 01                          // ...PM1L.

                    CreateBitField (BUF0, \_SB.PCI0._Y01._RW, C0RW)  // _RW_: Read-Write Status

  152F: 8D 42 55 46 30 0B 58 03 43 30 52 57              // .BUF0.X.C0RW

                    Store (Zero, C0RW)
                }


  153B: 70 00 43 30 52 57                                // p.C0RW

                If (PM1H)
                {

  1541: A0 16 50 4D 31 48                                // ..PM1H

                    CreateDWordField (BUF0, \_SB.PCI0._Y02._LEN, C4LN)  // _LEN: Length

  1547: 8A 42 55 46 30 0A 96 43 34 4C 4E                 // .BUF0..C4LN

                    Store (Zero, C4LN)
                }


  1552: 70 00 43 34 4C 4E                                // p.C4LN

                If (LEqual (PM1H, One))
                {

  1558: A0 19 93 50 4D 31 48 01                          // ...PM1H.

                    CreateBitField (BUF0, \_SB.PCI0._Y02._RW, C4RW)  // _RW_: Read-Write Status

  1560: 8D 42 55 46 30 0B 28 04 43 34 52 57              // .BUF0.(.C4RW

                    Store (Zero, C4RW)
                }


  156C: 70 00 43 34 52 57                                // p.C4RW

                If (PM2L)
                {

  1572: A0 16 50 4D 32 4C                                // ..PM2L

                    CreateDWordField (BUF0, \_SB.PCI0._Y03._LEN, C8LN)  // _LEN: Length

  1578: 8A 42 55 46 30 0A B0 43 38 4C 4E                 // .BUF0..C8LN

                    Store (Zero, C8LN)
                }


  1583: 70 00 43 38 4C 4E                                // p.C8LN

                If (LEqual (PM2L, One))
                {

  1589: A0 19 93 50 4D 32 4C 01                          // ...PM2L.

                    CreateBitField (BUF0, \_SB.PCI0._Y03._RW, C8RW)  // _RW_: Read-Write Status

  1591: 8D 42 55 46 30 0B F8 04 43 38 52 57              // .BUF0...C8RW

                    Store (Zero, C8RW)
                }


  159D: 70 00 43 38 52 57                                // p.C8RW

                If (PM2H)
                {

  15A3: A0 16 50 4D 32 48                                // ..PM2H

                    CreateDWordField (BUF0, \_SB.PCI0._Y04._LEN, CCLN)  // _LEN: Length

  15A9: 8A 42 55 46 30 0A CA 43 43 4C 4E                 // .BUF0..CCLN

                    Store (Zero, CCLN)
                }


  15B4: 70 00 43 43 4C 4E                                // p.CCLN

                If (LEqual (PM2H, One))
                {

  15BA: A0 19 93 50 4D 32 48 01                          // ...PM2H.

                    CreateBitField (BUF0, \_SB.PCI0._Y04._RW, CCRW)  // _RW_: Read-Write Status

  15C2: 8D 42 55 46 30 0B C8 05 43 43 52 57              // .BUF0...CCRW

                    Store (Zero, CCRW)
                }


  15CE: 70 00 43 43 52 57                                // p.CCRW

                If (PM3L)
                {

  15D4: A0 16 50 4D 33 4C                                // ..PM3L

                    CreateDWordField (BUF0, \_SB.PCI0._Y05._LEN, D0LN)  // _LEN: Length

  15DA: 8A 42 55 46 30 0A E4 44 30 4C 4E                 // .BUF0..D0LN

                    Store (Zero, D0LN)
                }


  15E5: 70 00 44 30 4C 4E                                // p.D0LN

                If (LEqual (PM3L, One))
                {

  15EB: A0 19 93 50 4D 33 4C 01                          // ...PM3L.

                    CreateBitField (BUF0, \_SB.PCI0._Y05._RW, D0RW)  // _RW_: Read-Write Status

  15F3: 8D 42 55 46 30 0B 98 06 44 30 52 57              // .BUF0...D0RW

                    Store (Zero, D0RW)
                }


  15FF: 70 00 44 30 52 57                                // p.D0RW

                If (PM3H)
                {

  1605: A0 16 50 4D 33 48                                // ..PM3H

                    CreateDWordField (BUF0, \_SB.PCI0._Y06._LEN, D4LN)  // _LEN: Length

  160B: 8A 42 55 46 30 0A FE 44 34 4C 4E                 // .BUF0..D4LN

                    Store (Zero, D4LN)
                }


  1616: 70 00 44 34 4C 4E                                // p.D4LN

                If (LEqual (PM3H, One))
                {

  161C: A0 19 93 50 4D 33 48 01                          // ...PM3H.

                    CreateBitField (BUF0, \_SB.PCI0._Y06._RW, D4RW)  // _RW_: Read-Write Status

  1624: 8D 42 55 46 30 0B 68 07 44 34 52 57              // .BUF0.h.D4RW

                    Store (Zero, D4RW)
                }


  1630: 70 00 44 34 52 57                                // p.D4RW

                If (PM4L)
                {

  1636: A0 17 50 4D 34 4C                                // ..PM4L

                    CreateDWordField (BUF0, \_SB.PCI0._Y07._LEN, D8LN)  // _LEN: Length

  163C: 8A 42 55 46 30 0B 18 01 44 38 4C 4E              // .BUF0...D8LN

                    Store (Zero, D8LN)
                }


  1648: 70 00 44 38 4C 4E                                // p.D8LN

                If (LEqual (PM4L, One))
                {

  164E: A0 19 93 50 4D 34 4C 01                          // ...PM4L.

                    CreateBitField (BUF0, \_SB.PCI0._Y07._RW, D8RW)  // _RW_: Read-Write Status

  1656: 8D 42 55 46 30 0B 38 08 44 38 52 57              // .BUF0.8.D8RW

                    Store (Zero, D8RW)
                }


  1662: 70 00 44 38 52 57                                // p.D8RW

                If (PM4H)
                {

  1668: A0 17 50 4D 34 48                                // ..PM4H

                    CreateDWordField (BUF0, \_SB.PCI0._Y08._LEN, DCLN)  // _LEN: Length

  166E: 8A 42 55 46 30 0B 32 01 44 43 4C 4E              // .BUF0.2.DCLN

                    Store (Zero, DCLN)
                }


  167A: 70 00 44 43 4C 4E                                // p.DCLN

                If (LEqual (PM4H, One))
                {

  1680: A0 19 93 50 4D 34 48 01                          // ...PM4H.

                    CreateBitField (BUF0, \_SB.PCI0._Y08._RW, DCRW)  // _RW_: Read-Write Status

  1688: 8D 42 55 46 30 0B 08 09 44 43 52 57              // .BUF0...DCRW

                    Store (Zero, DCRW)
                }


  1694: 70 00 44 43 52 57                                // p.DCRW

                If (PM5L)
                {

  169A: A0 17 50 4D 35 4C                                // ..PM5L

                    CreateDWordField (BUF0, \_SB.PCI0._Y09._LEN, E0LN)  // _LEN: Length

  16A0: 8A 42 55 46 30 0B 4C 01 45 30 4C 4E              // .BUF0.L.E0LN

                    Store (Zero, E0LN)
                }


  16AC: 70 00 45 30 4C 4E                                // p.E0LN

                If (LEqual (PM5L, One))
                {

  16B2: A0 19 93 50 4D 35 4C 01                          // ...PM5L.

                    CreateBitField (BUF0, \_SB.PCI0._Y09._RW, E0RW)  // _RW_: Read-Write Status

  16BA: 8D 42 55 46 30 0B D8 09 45 30 52 57              // .BUF0...E0RW

                    Store (Zero, E0RW)
                }


  16C6: 70 00 45 30 52 57                                // p.E0RW

                If (PM5H)
                {

  16CC: A0 17 50 4D 35 48                                // ..PM5H

                    CreateDWordField (BUF0, \_SB.PCI0._Y0A._LEN, E4LN)  // _LEN: Length

  16D2: 8A 42 55 46 30 0B 66 01 45 34 4C 4E              // .BUF0.f.E4LN

                    Store (Zero, E4LN)
                }


  16DE: 70 00 45 34 4C 4E                                // p.E4LN

                If (LEqual (PM5H, One))
                {

  16E4: A0 19 93 50 4D 35 48 01                          // ...PM5H.

                    CreateBitField (BUF0, \_SB.PCI0._Y0A._RW, E4RW)  // _RW_: Read-Write Status

  16EC: 8D 42 55 46 30 0B A8 0A 45 34 52 57              // .BUF0...E4RW

                    Store (Zero, E4RW)
                }


  16F8: 70 00 45 34 52 57                                // p.E4RW

                If (PM6L)
                {

  16FE: A0 17 50 4D 36 4C                                // ..PM6L

                    CreateDWordField (BUF0, \_SB.PCI0._Y0B._LEN, E8LN)  // _LEN: Length

  1704: 8A 42 55 46 30 0B 80 01 45 38 4C 4E              // .BUF0...E8LN

                    Store (Zero, E8LN)
                }


  1710: 70 00 45 38 4C 4E                                // p.E8LN

                If (LEqual (PM6L, One))
                {

  1716: A0 19 93 50 4D 36 4C 01                          // ...PM6L.

                    CreateBitField (BUF0, \_SB.PCI0._Y0B._RW, E8RW)  // _RW_: Read-Write Status

  171E: 8D 42 55 46 30 0B 78 0B 45 38 52 57              // .BUF0.x.E8RW

                    Store (Zero, E8RW)
                }


  172A: 70 00 45 38 52 57                                // p.E8RW

                If (PM6H)
                {

  1730: A0 17 50 4D 36 48                                // ..PM6H

                    CreateDWordField (BUF0, \_SB.PCI0._Y0C._LEN, ECLN)  // _LEN: Length

  1736: 8A 42 55 46 30 0B 9A 01 45 43 4C 4E              // .BUF0...ECLN

                    Store (Zero, ECLN)
                }


  1742: 70 00 45 43 4C 4E                                // p.ECLN

                If (LEqual (PM6H, One))
                {

  1748: A0 19 93 50 4D 36 48 01                          // ...PM6H.

                    CreateBitField (BUF0, \_SB.PCI0._Y0C._RW, ECRW)  // _RW_: Read-Write Status

  1750: 8D 42 55 46 30 0B 48 0C 45 43 52 57              // .BUF0.H.ECRW

                    Store (Zero, ECRW)
                }


  175C: 70 00 45 43 52 57                                // p.ECRW

                If (PM0H)
                {

  1762: A0 17 50 4D 30 48                                // ..PM0H

                    CreateDWordField (BUF0, \_SB.PCI0._Y0D._LEN, F0LN)  // _LEN: Length

  1768: 8A 42 55 46 30 0B B4 01 46 30 4C 4E              // .BUF0...F0LN

                    Store (Zero, F0LN)
                }


  1774: 70 00 46 30 4C 4E                                // p.F0LN

                If (LEqual (PM0H, One))
                {

  177A: A0 19 93 50 4D 30 48 01                          // ...PM0H.

                    CreateBitField (BUF0, \_SB.PCI0._Y0D._RW, F0RW)  // _RW_: Read-Write Status

  1782: 8D 42 55 46 30 0B 18 0D 46 30 52 57              // .BUF0...F0RW

                    Store (Zero, F0RW)
                }


  178E: 70 00 46 30 52 57                                // p.F0RW

                CreateDWordField (BUF0, \_SB.PCI0._Y0E._MIN, M1MN)  // _MIN: Minimum Base Address

  1794: 8A 42 55 46 30 0B C2 01 4D 31 4D 4E              // .BUF0...M1MN

                CreateDWordField (BUF0, \_SB.PCI0._Y0E._MAX, M1MX)  // _MAX: Maximum Base Address

  17A0: 8A 42 55 46 30 0B C6 01 4D 31 4D 58              // .BUF0...M1MX

                CreateDWordField (BUF0, \_SB.PCI0._Y0E._LEN, M1LN)  // _LEN: Length
                ShiftLeft (TLUD, 0x14, M1MN)
                Add (Subtract (M1MX, M1MN), One, M1LN)

  17AC: 8A 42 55 46 30 0B CE 01 4D 31 4C 4E 79 54 4C 55  // .BUF0...M1LNyTLU
  17BC: 44 0A 14 4D 31 4D 4E 72 74 4D 31 4D 58 4D 31 4D  // D..M1MNrtM1MXM1M
  17CC: 4E 00 01 4D 31 4C 4E                             // N..M1LN

                Return (BUF0)
            }


  17D3: A4 42 55 46 30                                   // .BUF0

            Name (GUID, 
  17D8: 08 47 55 49 44                                   // .GUID

ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */)

  17DD: 11 13 0A 10 5B 4D DB 33 F7 1F 1C 40 96 57 74 41  // ....[M.3...@.WtA
  17ED: C0 3D D7 66                                      // .=.f

            Name (SUPP, Zero)

  17F1: 08 53 55 50 50 00                                // .SUPP.

            Name (CTRL, Zero)

  17F7: 08 43 54 52 4C 00                                // .CTRL.

            Name (XCNT, Zero)

  17FD: 08 58 43 4E 54 00                                // .XCNT.

            Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
            {
                Store (Arg3, Local0)

  1803: 14 48 10 5F 4F 53 43 0C 70 6B 60                 // .H._OSC.pk`

                CreateDWordField (Local0, Zero, CDW1)

  180E: 8A 60 00 43 44 57 31                             // .`.CDW1

                CreateDWordField (Local0, 0x04, CDW2)

  1815: 8A 60 0A 04 43 44 57 32                          // .`..CDW2

                CreateDWordField (Local0, 0x08, CDW3)

  181D: 8A 60 0A 08 43 44 57 33                          // .`..CDW3

                If (^XHC.CUID (Arg0))
                {

  1825: A0 1A 5E 2E 58 48 43 5F 43 55 49 44 68           // ..^.XHC_CUIDh

                    Return (^XHC.POSC (Arg1, Arg2, Arg3))
                }

  1832: A4 5E 2E 58 48 43 5F 50 4F 53 43 69 6A 6B        // .^.XHC_POSCijk

                ElseIf
  1840: A1 23                                            // .#

 (
  1842: A0 21 92                                         // .!.

LGreaterEqual (OSYS, 0x07DC))
                {

  1845: 95 4F 53 59 53 0B DC 07                          // .OSYS...

                    If (LEqual (XCNT, Zero))
                    {
                        ^XHC.XSEL ()

  184D: A0 16 93 58 43 4E 54 00 5E 2E 58 48 43 5F 58 53  // ...XCNT.^.XHC_XS
  185D: 45 4C                                            // EL

                        Increment (XCNT)
                    }
                }


  185F: 75 58 43 4E 54                                   // uXCNT

                If (LEqual (Arg0, GUID))
                {
                    Store (CDW2, SUPP)
                    Store (CDW3, CTRL)

  1864: A0 48 09 93 68 47 55 49 44 70 43 44 57 32 53 55  // .H..hGUIDpCDW2SU
  1874: 50 50 70 43 44 57 33 43 54 52 4C                 // PPpCDW3CTRL

                    If (LEqual (NEXP, Zero))
                    {

  187F: A0 15 93 4E 45 58 50 00                          // ...NEXP.

                        And (CTRL, 0xFFFFFFF8, CTRL)
                    }


  1887: 7B 43 54 52 4C 0C F8 FF FF FF 43 54 52 4C        // {CTRL.....CTRL

                    If (NEXP)
                    {

  1895: A0 2B 4E 45 58 50                                // .+NEXP

                        If (Not (And (CDW1, One)))
                        {

  189B: A0 25 80 7B 43 44 57 31 01 00 00                 // .%.{CDW1...

                            If (And (CTRL, One))
                            {
                                NHPG ()
                            }


  18A6: A0 0C 7B 43 54 52 4C 01 00 4E 48 50 47           // ..{CTRL..NHPG

                            If (And (CTRL, 0x04))
                            {
                                NPME ()
                            }
                        }
                    }


  18B3: A0 0D 7B 43 54 52 4C 0A 04 00 4E 50 4D 45        // ..{CTRL...NPME

                    If (
  18C1: A0 10 92                                         // ...

LNotEqual (Arg1, One))
                    {

  18C4: 93 69 01                                         // .i.

                        Or (CDW1, 0x08, CDW1)
                    }


  18C7: 7D 43 44 57 31 0A 08 43 44 57 31                 // }CDW1..CDW1

                    If (
  18D2: A0 16 92                                         // ...

LNotEqual (CDW3, CTRL))
                    {

  18D5: 93 43 44 57 33 43 54 52 4C                       // .CDW3CTRL

                        Or (CDW1, 0x10, CDW1)
                    }

                    Store (CTRL, CDW3)
                    Store (CTRL, OSCC)

  18DE: 7D 43 44 57 31 0A 10 43 44 57 31 70 43 54 52 4C  // }CDW1..CDW1pCTRL
  18EE: 43 44 57 33 70 43 54 52 4C 4F 53 43 43           // CDW3pCTRLOSCC

                    Return (Local0)
                }

  18FB: A4 60                                            // .`

                Else
                {
                    Or (CDW1, 0x04, CDW1)

  18FD: A1 0E 7D 43 44 57 31 0A 04 43 44 57 31           // ..}CDW1..CDW1

                    Return (Local0)
                }
            }


  190A: A4 60                                            // .`

            Scope (\_SB.PCI0)
            {

  190C: 10 4C 15 5C 2E 5F 53 42 5F 50 43 49 30           // .L.\._SB_PCI0

                Method (AR00, 0, NotSerialized)
                {

  1919: 14 0D 41 52 30 30 00                             // ..AR00.

                    Return (^^AR00)
                }


  1920: A4 5E 5E 41 52 30 30                             // .^^AR00

                Method (PR00, 0, NotSerialized)
                {

  1927: 14 0D 50 52 30 30 00                             // ..PR00.

                    Return (^^PR00)
                }


  192E: A4 5E 5E 50 52 30 30                             // .^^PR00

                Method (AR02, 0, NotSerialized)
                {

  1935: 14 0D 41 52 30 32 00                             // ..AR02.

                    Return (^^AR02)
                }


  193C: A4 5E 5E 41 52 30 32                             // .^^AR02

                Method (PR02, 0, NotSerialized)
                {

  1943: 14 0D 50 52 30 32 00                             // ..PR02.

                    Return (^^PR02)
                }


  194A: A4 5E 5E 50 52 30 32                             // .^^PR02

                Method (AR04, 0, NotSerialized)
                {

  1951: 14 0D 41 52 30 34 00                             // ..AR04.

                    Return (^^AR04)
                }


  1958: A4 5E 5E 41 52 30 34                             // .^^AR04

                Method (PR04, 0, NotSerialized)
                {

  195F: 14 0D 50 52 30 34 00                             // ..PR04.

                    Return (^^PR04)
                }


  1966: A4 5E 5E 50 52 30 34                             // .^^PR04

                Method (AR05, 0, NotSerialized)
                {

  196D: 14 0D 41 52 30 35 00                             // ..AR05.

                    Return (^^AR05)
                }


  1974: A4 5E 5E 41 52 30 35                             // .^^AR05

                Method (PR05, 0, NotSerialized)
                {

  197B: 14 0D 50 52 30 35 00                             // ..PR05.

                    Return (^^PR05)
                }


  1982: A4 5E 5E 50 52 30 35                             // .^^PR05

                Method (AR06, 0, NotSerialized)
                {

  1989: 14 0D 41 52 30 36 00                             // ..AR06.

                    Return (^^AR06)
                }


  1990: A4 5E 5E 41 52 30 36                             // .^^AR06

                Method (PR06, 0, NotSerialized)
                {

  1997: 14 0D 50 52 30 36 00                             // ..PR06.

                    Return (^^PR06)
                }


  199E: A4 5E 5E 50 52 30 36                             // .^^PR06

                Method (AR07, 0, NotSerialized)
                {

  19A5: 14 0D 41 52 30 37 00                             // ..AR07.

                    Return (^^AR07)
                }


  19AC: A4 5E 5E 41 52 30 37                             // .^^AR07

                Method (PR07, 0, NotSerialized)
                {

  19B3: 14 0D 50 52 30 37 00                             // ..PR07.

                    Return (^^PR07)
                }


  19BA: A4 5E 5E 50 52 30 37                             // .^^PR07

                Method (AR08, 0, NotSerialized)
                {

  19C1: 14 0D 41 52 30 38 00                             // ..AR08.

                    Return (^^AR08)
                }


  19C8: A4 5E 5E 41 52 30 38                             // .^^AR08

                Method (PR08, 0, NotSerialized)
                {

  19CF: 14 0D 50 52 30 38 00                             // ..PR08.

                    Return (^^PR08)
                }


  19D6: A4 5E 5E 50 52 30 38                             // .^^PR08

                Method (AR09, 0, NotSerialized)
                {

  19DD: 14 0D 41 52 30 39 00                             // ..AR09.

                    Return (^^AR09)
                }


  19E4: A4 5E 5E 41 52 30 39                             // .^^AR09

                Method (PR09, 0, NotSerialized)
                {

  19EB: 14 0D 50 52 30 39 00                             // ..PR09.

                    Return (^^PR09)
                }


  19F2: A4 5E 5E 50 52 30 39                             // .^^PR09

                Method (AR0E, 0, NotSerialized)
                {

  19F9: 14 0D 41 52 30 45 00                             // ..AR0E.

                    Return (^^AR0E)
                }


  1A00: A4 5E 5E 41 52 30 45                             // .^^AR0E

                Method (PR0E, 0, NotSerialized)
                {

  1A07: 14 0D 50 52 30 45 00                             // ..PR0E.

                    Return (^^PR0E)
                }


  1A0E: A4 5E 5E 50 52 30 45                             // .^^PR0E

                Method (AR0F, 0, NotSerialized)
                {

  1A15: 14 0D 41 52 30 46 00                             // ..AR0F.

                    Return (^^AR0F)
                }


  1A1C: A4 5E 5E 41 52 30 46                             // .^^AR0F

                Method (PR0F, 0, NotSerialized)
                {

  1A23: 14 0D 50 52 30 46 00                             // ..PR0F.

                    Return (^^PR0F)
                }


  1A2A: A4 5E 5E 50 52 30 46                             // .^^PR0F

                Method (AR0A, 0, NotSerialized)
                {

  1A31: 14 0D 41 52 30 41 00                             // ..AR0A.

                    Return (^^AR0A)
                }


  1A38: A4 5E 5E 41 52 30 41                             // .^^AR0A

                Method (PR0A, 0, NotSerialized)
                {

  1A3F: 14 0D 50 52 30 41 00                             // ..PR0A.

                    Return (^^PR0A)
                }


  1A46: A4 5E 5E 50 52 30 41                             // .^^PR0A

                Method (AR0B, 0, NotSerialized)
                {

  1A4D: 14 0D 41 52 30 42 00                             // ..AR0B.

                    Return (^^AR0B)
                }


  1A54: A4 5E 5E 41 52 30 42                             // .^^AR0B

                Method (PR0B, 0, NotSerialized)
                {

  1A5B: 14 0D 50 52 30 42 00                             // ..PR0B.

                    Return (^^PR0B)
                }
            }


  1A62: A4 5E 5E 50 52 30 42                             // .^^PR0B

            Device (TPMX)
            {

  1A69: 5B 82 4B 04 54 50 4D 58                          // [.K.TPMX

                Name (_HID, EisaId ("PNP0C01"))  // _HID: Hardware ID

  1A71: 08 5F 48 49 44 0C 41 D0 0C 01                    // ._HID.A...

                Name (_UID, One)  // _UID: Unique ID

  1A7B: 08 5F 55 49 44 01                                // ._UID.

                Name (CRS, 
  1A81: 08 43 52 53 5F                                   // .CRS_

ResourceTemplate ()
                {
                    Memory32Fixed (ReadOnly,
                        0xFED40000,         // Address Base
                        0x00005000,         // Address Length
                        )
                })

  1A86: 11 11 0A 0E 86 09 00 00 00 00 D4 FE 00 50 00 00  // .............P..
  1A96: 79 00                                            // y.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  1A98: 14 0B 5F 43 52 53 00                             // .._CRS.

                    Return (CRS)
                }


  1A9F: A4 43 52 53 5F                                   // .CRS_

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  1AA4: 14 11 5F 53 54 41 00                             // .._STA.

                    If (TPMF)
                    {

  1AAB: A0 07 54 50 4D 46                                // ..TPMF

                        Return (Zero)
                    }


  1AB1: A4 00                                            // ..

                    Return (0x0F)
                }
            }


  1AB3: A4 0A 0F                                         // ...

            Device (RP01)
            {

  1AB6: 5B 82 41 21 52 50 30 31                          // [.A!RP01

                Name (_ADR, 0x001C0000)  // _ADR: Address

  1ABE: 08 5F 41 44 52 0C 00 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

  1AC8: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


  1AD3: 5B 81 44 08 50 58 43 53 00 56 44 49 44 20 00 40  // [.D.PXCS.VDID .@
  1AE3: 26 4C 30 53 45 01 00 03 4C 44 49 53 01 00 03 00  // &L0SE...LDIS....
  1AF3: 08 00 0D 4C 41 53 58 01 00 02 00 06 48 50 43 45  // ...LASX.....HPCE
  1B03: 01 00 29 41 42 50 58 01 00 02 50 44 43 58 01 00  // ..)ABPX...PDCX..
  1B13: 02 50 44 53 58 01 00 01 00 28 00 10 50 53 50 58  // .PDSX....(..PSPX
  1B23: 01 50 4D 45 50 01 00 4E 20 44 33 48 54 02 00 4E  // .PMEP..N D3HT..N
  1B33: 19 00 1E 48 50 45 58 01 50 4D 45 58 01 00 30 00  // ...HPEX.PMEX..0.
  1B43: 02 4C 32 33 45 01 4C 32 33 52 01 00 8C 20 01 00  // .L23E.L23R... ..
  1B53: 03 4C 45 44 4D 01                                // .LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  1B59: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  1B69: 58 01 50 4D 53 58 01                             // X.PMSX.

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  1B70: 14 19 5F 53 54 41 00                             // .._STA.

                    If (LEqual (VDID, 0xFFFFFFFF))
                    {

  1B77: A0 0D 93 56 44 49 44 0C FF FF FF FF              // ...VDID.....

                        Return (Zero)
                    }

  1B83: A4 00                                            // ..

                    Else
                    {

  1B85: A1 04                                            // ..

                        Return (0x0F)
                    }
                }


  1B87: A4 0A 0F                                         // ...

                Name (LTRV, 
  1B8A: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  1B8F: 12 06 04 00 00 00 00                             // .......

                Name (OPTS, Zero)

  1B96: 08 4F 50 54 53 00                                // .OPTS.

                Name (RPAV, Zero)

  1B9C: 08 52 50 41 56 00                                // .RPAV.

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  1BA2: 14 44 0A 5F 44 53 4D 0C                          // .D._DSM.


  1BAA: 08 5F 54 5F 31 00                                // ._T_1.


  1BB0: 08 5F 54 5F 30 00                                // ._T_0.

                    Switch (ToInteger (Arg0))
                    {

  1BB6: A2 4B 08 01 70 99 68 00 5F 54 5F 30              // .K..p.h._T_0

                        Case (
  1BC2: A0 4E 07 93 5F 54 5F 30                          // .N.._T_0

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */){
  1BCA: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  1BDA: 19 C3 43 4D                                      // ..CM

                            Switch (ToInteger (Arg2))
                            {

  1BDE: A2 42 06 01 70 99 6A 00 5F 54 5F 31              // .B..p.j._T_1

                                Case (Zero)
                                {

  1BEA: A0 1C 93 5F 54 5F 31 00                          // ..._T_1.

                                    If (LEqual (Arg1, 0x02))
                                    {
                                        Store (One, OPTS)

  1BF2: A0 10 93 69 0A 02 70 01 4F 50 54 53              // ...i..p.OPTS

                                        Return (OPTS)
                                    }

  1BFE: A4 4F 50 54 53                                   // .OPTS

                                    Else
                                    {

  1C03: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }

  1C05: A4 00                                            // ..

                                Case
  1C07: A1 38                                            // .8

 (0x04)
                                {

  1C09: A0 23 93 5F 54 5F 31 0A 04                       // .#._T_1..

                                    If (LEqual (Arg1, 0x02))
                                    {

  1C12: A0 1A 93 69 0A 02                                // ...i..

                                        Return (
  1C18: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }

  1C19: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  1C29: 00 00 00 00                                      // ....

                                Case
  1C2D: A1 12                                            // ..

 (0x06)
                                {

  1C2F: A0 10 93 5F 54 5F 31 0A 06                       // ..._T_1..

                                    If (LEqual (Arg1, 0x02))
                                    {

  1C38: A0 07 93 69 0A 02                                // ...i..

                                        Return (Zero)
                                    }
                                }


  1C3E: A4 00                                            // ..

                            }
                        }


  1C40: A5                                               // .

                    }


  1C41: A5                                               // .

                    Return (
  1C42: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  1C43: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  1C47: 5B 82 27 50 58 53 58                             // [.'PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  1C4E: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  1C54: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x09, 0x04))
                    }


  1C5B: A4 47 50 52 57 0A 09 0A 04                       // .GPRW....

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  1C64: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE)
                    }
                }


  1C6B: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {
                    Sleep (0x64)

  1C70: 14 41 04 48 50 4D 45 08 5B 22 0A 64              // .A.HPME.[".d

                    While (
  1C7C: A2 0E 92                                         // ...

LNotEqual (PSPX, Zero))
                    {

  1C7F: 93 50 53 50 58 00                                // .PSPX.

                        Store (One, PSPX)
                    }


  1C85: 70 01 50 53 50 58                                // p.PSPX

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

  1C8B: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX)

  1C95: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

  1C9E: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

  1CA4: 76 60                                            // v`

                            Else
                            {

  1CA6: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


  1CA8: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02)
                    }
                }


  1CAB: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  1CB2: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  1CB9: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR04 ())
                    }


  1CBF: A4 41 52 30 34                                   // .AR04

                    Return (PR04 ())
                }
            }


  1CC4: A4 50 52 30 34                                   // .PR04

            Device (RP02)
            {

  1CC9: 5B 82 41 21 52 50 30 32                          // [.A!RP02

                Name (_ADR, 0x001C0001)  // _ADR: Address

  1CD1: 08 5F 41 44 52 0C 01 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

  1CDB: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


  1CE6: 5B 81 44 08 50 58 43 53 00 56 44 49 44 20 00 40  // [.D.PXCS.VDID .@
  1CF6: 26 4C 30 53 45 01 00 03 4C 44 49 53 01 00 03 00  // &L0SE...LDIS....
  1D06: 08 00 0D 4C 41 53 58 01 00 02 00 06 48 50 43 45  // ...LASX.....HPCE
  1D16: 01 00 29 41 42 50 58 01 00 02 50 44 43 58 01 00  // ..)ABPX...PDCX..
  1D26: 02 50 44 53 58 01 00 01 00 28 00 10 50 53 50 58  // .PDSX....(..PSPX
  1D36: 01 50 4D 45 50 01 00 4E 20 44 33 48 54 02 00 4E  // .PMEP..N D3HT..N
  1D46: 19 00 1E 48 50 45 58 01 50 4D 45 58 01 00 30 00  // ...HPEX.PMEX..0.
  1D56: 02 4C 32 33 45 01 4C 32 33 52 01 00 8C 20 01 00  // .L23E.L23R... ..
  1D66: 03 4C 45 44 4D 01                                // .LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  1D6C: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  1D7C: 58 01 50 4D 53 58 01                             // X.PMSX.

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  1D83: 14 19 5F 53 54 41 00                             // .._STA.

                    If (LEqual (VDID, 0xFFFFFFFF))
                    {

  1D8A: A0 0D 93 56 44 49 44 0C FF FF FF FF              // ...VDID.....

                        Return (Zero)
                    }

  1D96: A4 00                                            // ..

                    Else
                    {

  1D98: A1 04                                            // ..

                        Return (0x0F)
                    }
                }


  1D9A: A4 0A 0F                                         // ...

                Name (LTRV, 
  1D9D: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  1DA2: 12 06 04 00 00 00 00                             // .......

                Name (OPTS, Zero)

  1DA9: 08 4F 50 54 53 00                                // .OPTS.

                Name (RPAV, Zero)

  1DAF: 08 52 50 41 56 00                                // .RPAV.

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  1DB5: 14 44 0A 5F 44 53 4D 0C                          // .D._DSM.


  1DBD: 08 5F 54 5F 31 00                                // ._T_1.


  1DC3: 08 5F 54 5F 30 00                                // ._T_0.

                    Switch (ToInteger (Arg0))
                    {

  1DC9: A2 4B 08 01 70 99 68 00 5F 54 5F 30              // .K..p.h._T_0

                        Case (
  1DD5: A0 4E 07 93 5F 54 5F 30                          // .N.._T_0

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */){
  1DDD: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  1DED: 19 C3 43 4D                                      // ..CM

                            Switch (ToInteger (Arg2))
                            {

  1DF1: A2 42 06 01 70 99 6A 00 5F 54 5F 31              // .B..p.j._T_1

                                Case (Zero)
                                {

  1DFD: A0 1C 93 5F 54 5F 31 00                          // ..._T_1.

                                    If (LEqual (Arg1, 0x02))
                                    {
                                        Store (One, OPTS)

  1E05: A0 10 93 69 0A 02 70 01 4F 50 54 53              // ...i..p.OPTS

                                        Return (OPTS)
                                    }

  1E11: A4 4F 50 54 53                                   // .OPTS

                                    Else
                                    {

  1E16: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }

  1E18: A4 00                                            // ..

                                Case
  1E1A: A1 38                                            // .8

 (0x04)
                                {

  1E1C: A0 23 93 5F 54 5F 31 0A 04                       // .#._T_1..

                                    If (LEqual (Arg1, 0x02))
                                    {

  1E25: A0 1A 93 69 0A 02                                // ...i..

                                        Return (
  1E2B: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }

  1E2C: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  1E3C: 00 00 00 00                                      // ....

                                Case
  1E40: A1 12                                            // ..

 (0x06)
                                {

  1E42: A0 10 93 5F 54 5F 31 0A 06                       // ..._T_1..

                                    If (LEqual (Arg1, 0x02))
                                    {

  1E4B: A0 07 93 69 0A 02                                // ...i..

                                        Return (Zero)
                                    }
                                }


  1E51: A4 00                                            // ..

                            }
                        }


  1E53: A5                                               // .

                    }


  1E54: A5                                               // .

                    Return (
  1E55: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  1E56: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  1E5A: 5B 82 27 50 58 53 58                             // [.'PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  1E61: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  1E67: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x09, 0x04))
                    }


  1E6E: A4 47 50 52 57 0A 09 0A 04                       // .GPRW....

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  1E77: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE)
                    }
                }


  1E7E: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {
                    Sleep (0x64)

  1E83: 14 41 04 48 50 4D 45 08 5B 22 0A 64              // .A.HPME.[".d

                    While (
  1E8F: A2 0E 92                                         // ...

LNotEqual (PSPX, Zero))
                    {

  1E92: 93 50 53 50 58 00                                // .PSPX.

                        Store (One, PSPX)
                    }


  1E98: 70 01 50 53 50 58                                // p.PSPX

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

  1E9E: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX)

  1EA8: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

  1EB1: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

  1EB7: 76 60                                            // v`

                            Else
                            {

  1EB9: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


  1EBB: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02)
                    }
                }


  1EBE: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  1EC5: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  1ECC: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR05 ())
                    }


  1ED2: A4 41 52 30 35                                   // .AR05

                    Return (PR05 ())
                }
            }


  1ED7: A4 50 52 30 35                                   // .PR05

            Device (RP03)
            {

  1EDC: 5B 82 41 21 52 50 30 33                          // [.A!RP03

                Name (_ADR, 0x001C0002)  // _ADR: Address

  1EE4: 08 5F 41 44 52 0C 02 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

  1EEE: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


  1EF9: 5B 81 44 08 50 58 43 53 00 56 44 49 44 20 00 40  // [.D.PXCS.VDID .@
  1F09: 26 4C 30 53 45 01 00 03 4C 44 49 53 01 00 03 00  // &L0SE...LDIS....
  1F19: 08 00 0D 4C 41 53 58 01 00 02 00 06 48 50 43 45  // ...LASX.....HPCE
  1F29: 01 00 29 41 42 50 58 01 00 02 50 44 43 58 01 00  // ..)ABPX...PDCX..
  1F39: 02 50 44 53 58 01 00 01 00 28 00 10 50 53 50 58  // .PDSX....(..PSPX
  1F49: 01 50 4D 45 50 01 00 4E 20 44 33 48 54 02 00 4E  // .PMEP..N D3HT..N
  1F59: 19 00 1E 48 50 45 58 01 50 4D 45 58 01 00 30 00  // ...HPEX.PMEX..0.
  1F69: 02 4C 32 33 45 01 4C 32 33 52 01 00 8C 20 01 00  // .L23E.L23R... ..
  1F79: 03 4C 45 44 4D 01                                // .LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  1F7F: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  1F8F: 58 01 50 4D 53 58 01                             // X.PMSX.

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  1F96: 14 19 5F 53 54 41 00                             // .._STA.

                    If (LEqual (VDID, 0xFFFFFFFF))
                    {

  1F9D: A0 0D 93 56 44 49 44 0C FF FF FF FF              // ...VDID.....

                        Return (Zero)
                    }

  1FA9: A4 00                                            // ..

                    Else
                    {

  1FAB: A1 04                                            // ..

                        Return (0x0F)
                    }
                }


  1FAD: A4 0A 0F                                         // ...

                Name (LTRV, 
  1FB0: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  1FB5: 12 06 04 00 00 00 00                             // .......

                Name (OPTS, Zero)

  1FBC: 08 4F 50 54 53 00                                // .OPTS.

                Name (RPAV, Zero)

  1FC2: 08 52 50 41 56 00                                // .RPAV.

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  1FC8: 14 44 0A 5F 44 53 4D 0C                          // .D._DSM.


  1FD0: 08 5F 54 5F 31 00                                // ._T_1.


  1FD6: 08 5F 54 5F 30 00                                // ._T_0.

                    Switch (ToInteger (Arg0))
                    {

  1FDC: A2 4B 08 01 70 99 68 00 5F 54 5F 30              // .K..p.h._T_0

                        Case (
  1FE8: A0 4E 07 93 5F 54 5F 30                          // .N.._T_0

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */){
  1FF0: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  2000: 19 C3 43 4D                                      // ..CM

                            Switch (ToInteger (Arg2))
                            {

  2004: A2 42 06 01 70 99 6A 00 5F 54 5F 31              // .B..p.j._T_1

                                Case (Zero)
                                {

  2010: A0 1C 93 5F 54 5F 31 00                          // ..._T_1.

                                    If (LEqual (Arg1, 0x02))
                                    {
                                        Store (One, OPTS)

  2018: A0 10 93 69 0A 02 70 01 4F 50 54 53              // ...i..p.OPTS

                                        Return (OPTS)
                                    }

  2024: A4 4F 50 54 53                                   // .OPTS

                                    Else
                                    {

  2029: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }

  202B: A4 00                                            // ..

                                Case
  202D: A1 38                                            // .8

 (0x04)
                                {

  202F: A0 23 93 5F 54 5F 31 0A 04                       // .#._T_1..

                                    If (LEqual (Arg1, 0x02))
                                    {

  2038: A0 1A 93 69 0A 02                                // ...i..

                                        Return (
  203E: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }

  203F: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  204F: 00 00 00 00                                      // ....

                                Case
  2053: A1 12                                            // ..

 (0x06)
                                {

  2055: A0 10 93 5F 54 5F 31 0A 06                       // ..._T_1..

                                    If (LEqual (Arg1, 0x02))
                                    {

  205E: A0 07 93 69 0A 02                                // ...i..

                                        Return (Zero)
                                    }
                                }


  2064: A4 00                                            // ..

                            }
                        }


  2066: A5                                               // .

                    }


  2067: A5                                               // .

                    Return (
  2068: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  2069: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  206D: 5B 82 27 50 58 53 58                             // [.'PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  2074: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  207A: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x09, 0x04))
                    }


  2081: A4 47 50 52 57 0A 09 0A 04                       // .GPRW....

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  208A: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE)
                    }
                }


  2091: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {
                    Sleep (0x64)

  2096: 14 41 04 48 50 4D 45 08 5B 22 0A 64              // .A.HPME.[".d

                    While (
  20A2: A2 0E 92                                         // ...

LNotEqual (PSPX, Zero))
                    {

  20A5: 93 50 53 50 58 00                                // .PSPX.

                        Store (One, PSPX)
                    }


  20AB: 70 01 50 53 50 58                                // p.PSPX

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

  20B1: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX)

  20BB: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

  20C4: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

  20CA: 76 60                                            // v`

                            Else
                            {

  20CC: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


  20CE: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02)
                    }
                }


  20D1: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  20D8: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  20DF: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR06 ())
                    }


  20E5: A4 41 52 30 36                                   // .AR06

                    Return (PR06 ())
                }
            }


  20EA: A4 50 52 30 36                                   // .PR06

            Device (RP04)
            {

  20EF: 5B 82 41 21 52 50 30 34                          // [.A!RP04

                Name (_ADR, 0x001C0003)  // _ADR: Address

  20F7: 08 5F 41 44 52 0C 03 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

  2101: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


  210C: 5B 81 44 08 50 58 43 53 00 56 44 49 44 20 00 40  // [.D.PXCS.VDID .@
  211C: 26 4C 30 53 45 01 00 03 4C 44 49 53 01 00 03 00  // &L0SE...LDIS....
  212C: 08 00 0D 4C 41 53 58 01 00 02 00 06 48 50 43 45  // ...LASX.....HPCE
  213C: 01 00 29 41 42 50 58 01 00 02 50 44 43 58 01 00  // ..)ABPX...PDCX..
  214C: 02 50 44 53 58 01 00 01 00 28 00 10 50 53 50 58  // .PDSX....(..PSPX
  215C: 01 50 4D 45 50 01 00 4E 20 44 33 48 54 02 00 4E  // .PMEP..N D3HT..N
  216C: 19 00 1E 48 50 45 58 01 50 4D 45 58 01 00 30 00  // ...HPEX.PMEX..0.
  217C: 02 4C 32 33 45 01 4C 32 33 52 01 00 8C 20 01 00  // .L23E.L23R... ..
  218C: 03 4C 45 44 4D 01                                // .LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  2192: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  21A2: 58 01 50 4D 53 58 01                             // X.PMSX.

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  21A9: 14 19 5F 53 54 41 00                             // .._STA.

                    If (LEqual (VDID, 0xFFFFFFFF))
                    {

  21B0: A0 0D 93 56 44 49 44 0C FF FF FF FF              // ...VDID.....

                        Return (Zero)
                    }

  21BC: A4 00                                            // ..

                    Else
                    {

  21BE: A1 04                                            // ..

                        Return (0x0F)
                    }
                }


  21C0: A4 0A 0F                                         // ...

                Name (LTRV, 
  21C3: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  21C8: 12 06 04 00 00 00 00                             // .......

                Name (OPTS, Zero)

  21CF: 08 4F 50 54 53 00                                // .OPTS.

                Name (RPAV, Zero)

  21D5: 08 52 50 41 56 00                                // .RPAV.

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  21DB: 14 44 0A 5F 44 53 4D 0C                          // .D._DSM.


  21E3: 08 5F 54 5F 31 00                                // ._T_1.


  21E9: 08 5F 54 5F 30 00                                // ._T_0.

                    Switch (ToInteger (Arg0))
                    {

  21EF: A2 4B 08 01 70 99 68 00 5F 54 5F 30              // .K..p.h._T_0

                        Case (
  21FB: A0 4E 07 93 5F 54 5F 30                          // .N.._T_0

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */){
  2203: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  2213: 19 C3 43 4D                                      // ..CM

                            Switch (ToInteger (Arg2))
                            {

  2217: A2 42 06 01 70 99 6A 00 5F 54 5F 31              // .B..p.j._T_1

                                Case (Zero)
                                {

  2223: A0 1C 93 5F 54 5F 31 00                          // ..._T_1.

                                    If (LEqual (Arg1, 0x02))
                                    {
                                        Store (One, OPTS)

  222B: A0 10 93 69 0A 02 70 01 4F 50 54 53              // ...i..p.OPTS

                                        Return (OPTS)
                                    }

  2237: A4 4F 50 54 53                                   // .OPTS

                                    Else
                                    {

  223C: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }

  223E: A4 00                                            // ..

                                Case
  2240: A1 38                                            // .8

 (0x04)
                                {

  2242: A0 23 93 5F 54 5F 31 0A 04                       // .#._T_1..

                                    If (LEqual (Arg1, 0x02))
                                    {

  224B: A0 1A 93 69 0A 02                                // ...i..

                                        Return (
  2251: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }

  2252: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  2262: 00 00 00 00                                      // ....

                                Case
  2266: A1 12                                            // ..

 (0x06)
                                {

  2268: A0 10 93 5F 54 5F 31 0A 06                       // ..._T_1..

                                    If (LEqual (Arg1, 0x02))
                                    {

  2271: A0 07 93 69 0A 02                                // ...i..

                                        Return (Zero)
                                    }
                                }


  2277: A4 00                                            // ..

                            }
                        }


  2279: A5                                               // .

                    }


  227A: A5                                               // .

                    Return (
  227B: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  227C: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  2280: 5B 82 27 50 58 53 58                             // [.'PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  2287: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  228D: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x09, 0x04))
                    }


  2294: A4 47 50 52 57 0A 09 0A 04                       // .GPRW....

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  229D: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE)
                    }
                }


  22A4: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {
                    Sleep (0x64)

  22A9: 14 41 04 48 50 4D 45 08 5B 22 0A 64              // .A.HPME.[".d

                    While (
  22B5: A2 0E 92                                         // ...

LNotEqual (PSPX, Zero))
                    {

  22B8: 93 50 53 50 58 00                                // .PSPX.

                        Store (One, PSPX)
                    }


  22BE: 70 01 50 53 50 58                                // p.PSPX

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

  22C4: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX)

  22CE: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

  22D7: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

  22DD: 76 60                                            // v`

                            Else
                            {

  22DF: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


  22E1: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02)
                    }
                }


  22E4: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  22EB: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  22F2: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR07 ())
                    }


  22F8: A4 41 52 30 37                                   // .AR07

                    Return (PR07 ())
                }
            }


  22FD: A4 50 52 30 37                                   // .PR07

            Device (RP05)
            {

  2302: 5B 82 41 21 52 50 30 35                          // [.A!RP05

                Name (_ADR, 0x001C0004)  // _ADR: Address

  230A: 08 5F 41 44 52 0C 04 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

  2314: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


  231F: 5B 81 44 08 50 58 43 53 00 56 44 49 44 20 00 40  // [.D.PXCS.VDID .@
  232F: 26 4C 30 53 45 01 00 03 4C 44 49 53 01 00 03 00  // &L0SE...LDIS....
  233F: 08 00 0D 4C 41 53 58 01 00 02 00 06 48 50 43 45  // ...LASX.....HPCE
  234F: 01 00 29 41 42 50 58 01 00 02 50 44 43 58 01 00  // ..)ABPX...PDCX..
  235F: 02 50 44 53 58 01 00 01 00 28 00 10 50 53 50 58  // .PDSX....(..PSPX
  236F: 01 50 4D 45 50 01 00 4E 20 44 33 48 54 02 00 4E  // .PMEP..N D3HT..N
  237F: 19 00 1E 48 50 45 58 01 50 4D 45 58 01 00 30 00  // ...HPEX.PMEX..0.
  238F: 02 4C 32 33 45 01 4C 32 33 52 01 00 8C 20 01 00  // .L23E.L23R... ..
  239F: 03 4C 45 44 4D 01                                // .LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  23A5: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  23B5: 58 01 50 4D 53 58 01                             // X.PMSX.

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  23BC: 14 19 5F 53 54 41 00                             // .._STA.

                    If (LEqual (VDID, 0xFFFFFFFF))
                    {

  23C3: A0 0D 93 56 44 49 44 0C FF FF FF FF              // ...VDID.....

                        Return (Zero)
                    }

  23CF: A4 00                                            // ..

                    Else
                    {

  23D1: A1 04                                            // ..

                        Return (0x0F)
                    }
                }


  23D3: A4 0A 0F                                         // ...

                Name (LTRV, 
  23D6: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  23DB: 12 06 04 00 00 00 00                             // .......

                Name (OPTS, Zero)

  23E2: 08 4F 50 54 53 00                                // .OPTS.

                Name (RPAV, Zero)

  23E8: 08 52 50 41 56 00                                // .RPAV.

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  23EE: 14 44 0A 5F 44 53 4D 0C                          // .D._DSM.


  23F6: 08 5F 54 5F 31 00                                // ._T_1.


  23FC: 08 5F 54 5F 30 00                                // ._T_0.

                    Switch (ToInteger (Arg0))
                    {

  2402: A2 4B 08 01 70 99 68 00 5F 54 5F 30              // .K..p.h._T_0

                        Case (
  240E: A0 4E 07 93 5F 54 5F 30                          // .N.._T_0

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */){
  2416: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  2426: 19 C3 43 4D                                      // ..CM

                            Switch (ToInteger (Arg2))
                            {

  242A: A2 42 06 01 70 99 6A 00 5F 54 5F 31              // .B..p.j._T_1

                                Case (Zero)
                                {

  2436: A0 1C 93 5F 54 5F 31 00                          // ..._T_1.

                                    If (LEqual (Arg1, 0x02))
                                    {
                                        Store (One, OPTS)

  243E: A0 10 93 69 0A 02 70 01 4F 50 54 53              // ...i..p.OPTS

                                        Return (OPTS)
                                    }

  244A: A4 4F 50 54 53                                   // .OPTS

                                    Else
                                    {

  244F: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }

  2451: A4 00                                            // ..

                                Case
  2453: A1 38                                            // .8

 (0x04)
                                {

  2455: A0 23 93 5F 54 5F 31 0A 04                       // .#._T_1..

                                    If (LEqual (Arg1, 0x02))
                                    {

  245E: A0 1A 93 69 0A 02                                // ...i..

                                        Return (
  2464: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }

  2465: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  2475: 00 00 00 00                                      // ....

                                Case
  2479: A1 12                                            // ..

 (0x06)
                                {

  247B: A0 10 93 5F 54 5F 31 0A 06                       // ..._T_1..

                                    If (LEqual (Arg1, 0x02))
                                    {

  2484: A0 07 93 69 0A 02                                // ...i..

                                        Return (Zero)
                                    }
                                }


  248A: A4 00                                            // ..

                            }
                        }


  248C: A5                                               // .

                    }


  248D: A5                                               // .

                    Return (
  248E: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  248F: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  2493: 5B 82 27 50 58 53 58                             // [.'PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  249A: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  24A0: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x09, 0x04))
                    }


  24A7: A4 47 50 52 57 0A 09 0A 04                       // .GPRW....

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  24B0: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE)
                    }
                }


  24B7: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {
                    Sleep (0x64)

  24BC: 14 41 04 48 50 4D 45 08 5B 22 0A 64              // .A.HPME.[".d

                    While (
  24C8: A2 0E 92                                         // ...

LNotEqual (PSPX, Zero))
                    {

  24CB: 93 50 53 50 58 00                                // .PSPX.

                        Store (One, PSPX)
                    }


  24D1: 70 01 50 53 50 58                                // p.PSPX

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

  24D7: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX)

  24E1: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

  24EA: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

  24F0: 76 60                                            // v`

                            Else
                            {

  24F2: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


  24F4: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02)
                    }
                }


  24F7: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  24FE: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  2505: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR08 ())
                    }


  250B: A4 41 52 30 38                                   // .AR08

                    Return (PR08 ())
                }
            }


  2510: A4 50 52 30 38                                   // .PR08

            Device (RP06)
            {

  2515: 5B 82 41 21 52 50 30 36                          // [.A!RP06

                Name (_ADR, 0x001C0005)  // _ADR: Address

  251D: 08 5F 41 44 52 0C 05 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

  2527: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


  2532: 5B 81 44 08 50 58 43 53 00 56 44 49 44 20 00 40  // [.D.PXCS.VDID .@
  2542: 26 4C 30 53 45 01 00 03 4C 44 49 53 01 00 03 00  // &L0SE...LDIS....
  2552: 08 00 0D 4C 41 53 58 01 00 02 00 06 48 50 43 45  // ...LASX.....HPCE
  2562: 01 00 29 41 42 50 58 01 00 02 50 44 43 58 01 00  // ..)ABPX...PDCX..
  2572: 02 50 44 53 58 01 00 01 00 28 00 10 50 53 50 58  // .PDSX....(..PSPX
  2582: 01 50 4D 45 50 01 00 4E 20 44 33 48 54 02 00 4E  // .PMEP..N D3HT..N
  2592: 19 00 1E 48 50 45 58 01 50 4D 45 58 01 00 30 00  // ...HPEX.PMEX..0.
  25A2: 02 4C 32 33 45 01 4C 32 33 52 01 00 8C 20 01 00  // .L23E.L23R... ..
  25B2: 03 4C 45 44 4D 01                                // .LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  25B8: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  25C8: 58 01 50 4D 53 58 01                             // X.PMSX.

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  25CF: 14 19 5F 53 54 41 00                             // .._STA.

                    If (LEqual (VDID, 0xFFFFFFFF))
                    {

  25D6: A0 0D 93 56 44 49 44 0C FF FF FF FF              // ...VDID.....

                        Return (Zero)
                    }

  25E2: A4 00                                            // ..

                    Else
                    {

  25E4: A1 04                                            // ..

                        Return (0x0F)
                    }
                }


  25E6: A4 0A 0F                                         // ...

                Name (LTRV, 
  25E9: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  25EE: 12 06 04 00 00 00 00                             // .......

                Name (OPTS, Zero)

  25F5: 08 4F 50 54 53 00                                // .OPTS.

                Name (RPAV, Zero)

  25FB: 08 52 50 41 56 00                                // .RPAV.

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  2601: 14 44 0A 5F 44 53 4D 0C                          // .D._DSM.


  2609: 08 5F 54 5F 31 00                                // ._T_1.


  260F: 08 5F 54 5F 30 00                                // ._T_0.

                    Switch (ToInteger (Arg0))
                    {

  2615: A2 4B 08 01 70 99 68 00 5F 54 5F 30              // .K..p.h._T_0

                        Case (
  2621: A0 4E 07 93 5F 54 5F 30                          // .N.._T_0

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */){
  2629: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  2639: 19 C3 43 4D                                      // ..CM

                            Switch (ToInteger (Arg2))
                            {

  263D: A2 42 06 01 70 99 6A 00 5F 54 5F 31              // .B..p.j._T_1

                                Case (Zero)
                                {

  2649: A0 1C 93 5F 54 5F 31 00                          // ..._T_1.

                                    If (LEqual (Arg1, 0x02))
                                    {
                                        Store (One, OPTS)

  2651: A0 10 93 69 0A 02 70 01 4F 50 54 53              // ...i..p.OPTS

                                        Return (OPTS)
                                    }

  265D: A4 4F 50 54 53                                   // .OPTS

                                    Else
                                    {

  2662: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }

  2664: A4 00                                            // ..

                                Case
  2666: A1 38                                            // .8

 (0x04)
                                {

  2668: A0 23 93 5F 54 5F 31 0A 04                       // .#._T_1..

                                    If (LEqual (Arg1, 0x02))
                                    {

  2671: A0 1A 93 69 0A 02                                // ...i..

                                        Return (
  2677: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }

  2678: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  2688: 00 00 00 00                                      // ....

                                Case
  268C: A1 12                                            // ..

 (0x06)
                                {

  268E: A0 10 93 5F 54 5F 31 0A 06                       // ..._T_1..

                                    If (LEqual (Arg1, 0x02))
                                    {

  2697: A0 07 93 69 0A 02                                // ...i..

                                        Return (Zero)
                                    }
                                }


  269D: A4 00                                            // ..

                            }
                        }


  269F: A5                                               // .

                    }


  26A0: A5                                               // .

                    Return (
  26A1: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  26A2: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  26A6: 5B 82 27 50 58 53 58                             // [.'PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  26AD: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  26B3: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x09, 0x04))
                    }


  26BA: A4 47 50 52 57 0A 09 0A 04                       // .GPRW....

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  26C3: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE)
                    }
                }


  26CA: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {
                    Sleep (0x64)

  26CF: 14 41 04 48 50 4D 45 08 5B 22 0A 64              // .A.HPME.[".d

                    While (
  26DB: A2 0E 92                                         // ...

LNotEqual (PSPX, Zero))
                    {

  26DE: 93 50 53 50 58 00                                // .PSPX.

                        Store (One, PSPX)
                    }


  26E4: 70 01 50 53 50 58                                // p.PSPX

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

  26EA: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX)

  26F4: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

  26FD: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

  2703: 76 60                                            // v`

                            Else
                            {

  2705: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


  2707: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02)
                    }
                }


  270A: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  2711: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  2718: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR09 ())
                    }


  271E: A4 41 52 30 39                                   // .AR09

                    Return (PR09 ())
                }
            }


  2723: A4 50 52 30 39                                   // .PR09

            Device (RP07)
            {

  2728: 5B 82 41 21 52 50 30 37                          // [.A!RP07

                Name (_ADR, 0x001C0006)  // _ADR: Address

  2730: 08 5F 41 44 52 0C 06 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

  273A: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


  2745: 5B 81 44 08 50 58 43 53 00 56 44 49 44 20 00 40  // [.D.PXCS.VDID .@
  2755: 26 4C 30 53 45 01 00 03 4C 44 49 53 01 00 03 00  // &L0SE...LDIS....
  2765: 08 00 0D 4C 41 53 58 01 00 02 00 06 48 50 43 45  // ...LASX.....HPCE
  2775: 01 00 29 41 42 50 58 01 00 02 50 44 43 58 01 00  // ..)ABPX...PDCX..
  2785: 02 50 44 53 58 01 00 01 00 28 00 10 50 53 50 58  // .PDSX....(..PSPX
  2795: 01 50 4D 45 50 01 00 4E 20 44 33 48 54 02 00 4E  // .PMEP..N D3HT..N
  27A5: 19 00 1E 48 50 45 58 01 50 4D 45 58 01 00 30 00  // ...HPEX.PMEX..0.
  27B5: 02 4C 32 33 45 01 4C 32 33 52 01 00 8C 20 01 00  // .L23E.L23R... ..
  27C5: 03 4C 45 44 4D 01                                // .LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  27CB: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  27DB: 58 01 50 4D 53 58 01                             // X.PMSX.

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  27E2: 14 19 5F 53 54 41 00                             // .._STA.

                    If (LEqual (VDID, 0xFFFFFFFF))
                    {

  27E9: A0 0D 93 56 44 49 44 0C FF FF FF FF              // ...VDID.....

                        Return (Zero)
                    }

  27F5: A4 00                                            // ..

                    Else
                    {

  27F7: A1 04                                            // ..

                        Return (0x0F)
                    }
                }


  27F9: A4 0A 0F                                         // ...

                Name (LTRV, 
  27FC: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  2801: 12 06 04 00 00 00 00                             // .......

                Name (OPTS, Zero)

  2808: 08 4F 50 54 53 00                                // .OPTS.

                Name (RPAV, Zero)

  280E: 08 52 50 41 56 00                                // .RPAV.

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  2814: 14 44 0A 5F 44 53 4D 0C                          // .D._DSM.


  281C: 08 5F 54 5F 31 00                                // ._T_1.


  2822: 08 5F 54 5F 30 00                                // ._T_0.

                    Switch (ToInteger (Arg0))
                    {

  2828: A2 4B 08 01 70 99 68 00 5F 54 5F 30              // .K..p.h._T_0

                        Case (
  2834: A0 4E 07 93 5F 54 5F 30                          // .N.._T_0

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */){
  283C: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  284C: 19 C3 43 4D                                      // ..CM

                            Switch (ToInteger (Arg2))
                            {

  2850: A2 42 06 01 70 99 6A 00 5F 54 5F 31              // .B..p.j._T_1

                                Case (Zero)
                                {

  285C: A0 1C 93 5F 54 5F 31 00                          // ..._T_1.

                                    If (LEqual (Arg1, 0x02))
                                    {
                                        Store (One, OPTS)

  2864: A0 10 93 69 0A 02 70 01 4F 50 54 53              // ...i..p.OPTS

                                        Return (OPTS)
                                    }

  2870: A4 4F 50 54 53                                   // .OPTS

                                    Else
                                    {

  2875: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }

  2877: A4 00                                            // ..

                                Case
  2879: A1 38                                            // .8

 (0x04)
                                {

  287B: A0 23 93 5F 54 5F 31 0A 04                       // .#._T_1..

                                    If (LEqual (Arg1, 0x02))
                                    {

  2884: A0 1A 93 69 0A 02                                // ...i..

                                        Return (
  288A: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }

  288B: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  289B: 00 00 00 00                                      // ....

                                Case
  289F: A1 12                                            // ..

 (0x06)
                                {

  28A1: A0 10 93 5F 54 5F 31 0A 06                       // ..._T_1..

                                    If (LEqual (Arg1, 0x02))
                                    {

  28AA: A0 07 93 69 0A 02                                // ...i..

                                        Return (Zero)
                                    }
                                }


  28B0: A4 00                                            // ..

                            }
                        }


  28B2: A5                                               // .

                    }


  28B3: A5                                               // .

                    Return (
  28B4: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  28B5: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  28B9: 5B 82 27 50 58 53 58                             // [.'PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  28C0: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  28C6: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x09, 0x04))
                    }


  28CD: A4 47 50 52 57 0A 09 0A 04                       // .GPRW....

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  28D6: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE)
                    }
                }


  28DD: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {
                    Sleep (0x64)

  28E2: 14 41 04 48 50 4D 45 08 5B 22 0A 64              // .A.HPME.[".d

                    While (
  28EE: A2 0E 92                                         // ...

LNotEqual (PSPX, Zero))
                    {

  28F1: 93 50 53 50 58 00                                // .PSPX.

                        Store (One, PSPX)
                    }


  28F7: 70 01 50 53 50 58                                // p.PSPX

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

  28FD: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX)

  2907: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

  2910: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

  2916: 76 60                                            // v`

                            Else
                            {

  2918: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


  291A: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02)
                    }
                }


  291D: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  2924: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  292B: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR0E ())
                    }


  2931: A4 41 52 30 45                                   // .AR0E

                    Return (PR0E ())
                }
            }


  2936: A4 50 52 30 45                                   // .PR0E

            Device (RP08)
            {

  293B: 5B 82 41 21 52 50 30 38                          // [.A!RP08

                Name (_ADR, 0x001C0007)  // _ADR: Address

  2943: 08 5F 41 44 52 0C 07 00 1C 00                    // ._ADR.....

                OperationRegion (PXCS, PCI_Config, Zero, 0x0380)

  294D: 5B 80 50 58 43 53 02 00 0B 80 03                 // [.PXCS.....

                Field (PXCS, AnyAcc, NoLock, Preserve)
                {
                    VDID,   32, 
                    Offset (0x50), 
                    L0SE,   1, 
                        ,   3, 
                    LDIS,   1, 
                    Offset (0x51), 
                    Offset (0x52), 
                        ,   13, 
                    LASX,   1, 
                    Offset (0x54), 
                        ,   6, 
                    HPCE,   1, 
                    Offset (0x5A), 
                    ABPX,   1, 
                        ,   2, 
                    PDCX,   1, 
                        ,   2, 
                    PDSX,   1, 
                    Offset (0x5B), 
                    Offset (0x60), 
                    Offset (0x62), 
                    PSPX,   1, 
                    PMEP,   1, 
                    Offset (0xA4), 
                    D3HT,   2, 
                    Offset (0xD8), 
                        ,   30, 
                    HPEX,   1, 
                    PMEX,   1, 
                    Offset (0xE2), 
                        ,   2, 
                    L23E,   1, 
                    L23R,   1, 
                    Offset (0x324), 
                        ,   3, 
                    LEDM,   1
                }


  2958: 5B 81 44 08 50 58 43 53 00 56 44 49 44 20 00 40  // [.D.PXCS.VDID .@
  2968: 26 4C 30 53 45 01 00 03 4C 44 49 53 01 00 03 00  // &L0SE...LDIS....
  2978: 08 00 0D 4C 41 53 58 01 00 02 00 06 48 50 43 45  // ...LASX.....HPCE
  2988: 01 00 29 41 42 50 58 01 00 02 50 44 43 58 01 00  // ..)ABPX...PDCX..
  2998: 02 50 44 53 58 01 00 01 00 28 00 10 50 53 50 58  // .PDSX....(..PSPX
  29A8: 01 50 4D 45 50 01 00 4E 20 44 33 48 54 02 00 4E  // .PMEP..N D3HT..N
  29B8: 19 00 1E 48 50 45 58 01 50 4D 45 58 01 00 30 00  // ...HPEX.PMEX..0.
  29C8: 02 4C 32 33 45 01 4C 32 33 52 01 00 8C 20 01 00  // .L23E.L23R... ..
  29D8: 03 4C 45 44 4D 01                                // .LEDM.

                Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                {
                    Offset (0xDC), 
                        ,   30, 
                    HPSX,   1, 
                    PMSX,   1
                }


  29DE: 5B 81 15 50 58 43 53 40 00 40 6E 00 1E 48 50 53  // [..PXCS@.@n..HPS
  29EE: 58 01 50 4D 53 58 01                             // X.PMSX.

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  29F5: 14 19 5F 53 54 41 00                             // .._STA.

                    If (LEqual (VDID, 0xFFFFFFFF))
                    {

  29FC: A0 0D 93 56 44 49 44 0C FF FF FF FF              // ...VDID.....

                        Return (Zero)
                    }

  2A08: A4 00                                            // ..

                    Else
                    {

  2A0A: A1 04                                            // ..

                        Return (0x0F)
                    }
                }


  2A0C: A4 0A 0F                                         // ...

                Name (LTRV, 
  2A0F: 08 4C 54 52 56                                   // .LTRV

Package (0x04)
                {
                    Zero, 
                    Zero, 
                    Zero, 
                    Zero
                })

  2A14: 12 06 04 00 00 00 00                             // .......

                Name (OPTS, Zero)

  2A1B: 08 4F 50 54 53 00                                // .OPTS.

                Name (RPAV, Zero)

  2A21: 08 52 50 41 56 00                                // .RPAV.

                Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
                {

  2A27: 14 44 0A 5F 44 53 4D 0C                          // .D._DSM.


  2A2F: 08 5F 54 5F 31 00                                // ._T_1.


  2A35: 08 5F 54 5F 30 00                                // ._T_0.

                    Switch (ToInteger (Arg0))
                    {

  2A3B: A2 4B 08 01 70 99 68 00 5F 54 5F 30              // .K..p.h._T_0

                        Case (
  2A47: A0 4E 07 93 5F 54 5F 30                          // .N.._T_0

ToUUID ("e5c937d0-3553-4d7a-9117-ea4d19c3434d") /* Device Labeling Interface */){
  2A4F: 11 13 0A 10 D0 37 C9 E5 53 35 7A 4D 91 17 EA 4D  // .....7..S5zM...M
  2A5F: 19 C3 43 4D                                      // ..CM

                            Switch (ToInteger (Arg2))
                            {

  2A63: A2 42 06 01 70 99 6A 00 5F 54 5F 31              // .B..p.j._T_1

                                Case (Zero)
                                {

  2A6F: A0 1C 93 5F 54 5F 31 00                          // ..._T_1.

                                    If (LEqual (Arg1, 0x02))
                                    {
                                        Store (One, OPTS)

  2A77: A0 10 93 69 0A 02 70 01 4F 50 54 53              // ...i..p.OPTS

                                        Return (OPTS)
                                    }

  2A83: A4 4F 50 54 53                                   // .OPTS

                                    Else
                                    {

  2A88: A1 03                                            // ..

                                        Return (Zero)
                                    }
                                }

  2A8A: A4 00                                            // ..

                                Case
  2A8C: A1 38                                            // .8

 (0x04)
                                {

  2A8E: A0 23 93 5F 54 5F 31 0A 04                       // .#._T_1..

                                    If (LEqual (Arg1, 0x02))
                                    {

  2A97: A0 1A 93 69 0A 02                                // ...i..

                                        Return (
  2A9D: A4                                               // .

Buffer (0x10)
                                        {
                                            /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                            /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                        })
                                    }
                                }

  2A9E: 11 13 0A 10 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  2AAE: 00 00 00 00                                      // ....

                                Case
  2AB2: A1 12                                            // ..

 (0x06)
                                {

  2AB4: A0 10 93 5F 54 5F 31 0A 06                       // ..._T_1..

                                    If (LEqual (Arg1, 0x02))
                                    {

  2ABD: A0 07 93 69 0A 02                                // ...i..

                                        Return (Zero)
                                    }
                                }


  2AC3: A4 00                                            // ..

                            }
                        }


  2AC5: A5                                               // .

                    }


  2AC6: A5                                               // .

                    Return (
  2AC7: A4                                               // .

Buffer (One)
                    {
                         0x00                                           
                    })
                }


  2AC8: 11 03 01 00                                      // ....

                Device (PXSX)
                {

  2ACC: 5B 82 27 50 58 53 58                             // [.'PXSX

                    Name (_ADR, Zero)  // _ADR: Address

  2AD3: 08 5F 41 44 52 00                                // ._ADR.

                    Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                    {

  2AD9: 14 0F 5F 50 52 57 00                             // .._PRW.

                        Return (GPRW (0x09, 0x04))
                    }


  2AE0: A4 47 50 52 57 0A 09 0A 04                       // .GPRW....

                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                    {

  2AE9: 14 0B 5F 52 4D 56 00                             // .._RMV.

                        Return (HPCE)
                    }
                }


  2AF0: A4 48 50 43 45                                   // .HPCE

                Method (HPME, 0, Serialized)
                {
                    Sleep (0x64)

  2AF5: 14 41 04 48 50 4D 45 08 5B 22 0A 64              // .A.HPME.[".d

                    While (
  2B01: A2 0E 92                                         // ...

LNotEqual (PSPX, Zero))
                    {

  2B04: 93 50 53 50 58 00                                // .PSPX.

                        Store (One, PSPX)
                    }


  2B0A: 70 01 50 53 50 58                                // p.PSPX

                    If (PMSX)
                    {
                        Store (0xC8, Local0)

  2B10: A0 26 50 4D 53 58 70 0A C8 60                    // .&PMSXp..`

                        While (Local0)
                        {
                            Store (One, PMSX)

  2B1A: A2 15 60 70 01 50 4D 53 58                       // ..`p.PMSX

                            If (PMSX)
                            {

  2B23: A0 07 50 4D 53 58                                // ..PMSX

                                Decrement (Local0)
                            }

  2B29: 76 60                                            // v`

                            Else
                            {

  2B2B: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }


  2B2D: 70 00 60                                         // p.`

                        Notify (PXSX, 0x02)
                    }
                }


  2B30: 86 50 58 53 58 0A 02                             // .PXSX..

                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
                {

  2B37: 14 16 5F 50 52 54 00                             // .._PRT.

                    If (PICM)
                    {

  2B3E: A0 0A 50 49 43 4D                                // ..PICM

                        Return (AR0F ())
                    }


  2B44: A4 41 52 30 46                                   // .AR0F

                    Return (PR0F ())
                }
            }

            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero
            Zero

  2B49: A4 50 52 30 46 00 00 00 00 00 00 00 00 00 00 00  // .PR0F...........
  2B59: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  2B69: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  2B79: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  2B89: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  2B99: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  2BA9: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  // ................
  2BB9: 00 00 00 00 00 00 00 00 00 00 00 00 00           // .............

            Device (B0D4)
            {

  2BC6: 5B 82 0F 42 30 44 34                             // [..B0D4

                Name (_ADR, 0x00040000)  // _ADR: Address
            }


  2BCD: 08 5F 41 44 52 0C 00 00 04 00                    // ._ADR.....

            Device (LPCB)
            {

  2BD7: 5B 82 42 D6 4C 50 43 42                          // [.B.LPCB

                Name (_ADR, 0x001F0000)  // _ADR: Address

  2BDF: 08 5F 41 44 52 0C 00 00 1F 00                    // ._ADR.....

                Scope (\_SB)
                {

  2BE9: 10 4D 59 5C 5F 53 42 5F                          // .MY\_SB_

                    OperationRegion (PCI0.LPCB.LPC1, PCI_Config, Zero, 0x0100)

  2BF1: 5B 80 2F 03 50 43 49 30 4C 50 43 42 4C 50 43 31  // [./.PCI0LPCBLPC1
  2C01: 02 00 0B 00 01                                   // .....

                    Field (PCI0.LPCB.LPC1, AnyAcc, NoLock, Preserve)
                    {
                        Offset (0x02), 
                        CDID,   16, 
                        Offset (0x08), 
                        CRID,   8, 
                        Offset (0x60), 
                        PARC,   8, 
                        PBRC,   8, 
                        PCRC,   8, 
                        PDRC,   8, 
                        Offset (0x68), 
                        PERC,   8, 
                        PFRC,   8, 
                        PGRC,   8, 
                        PHRC,   8, 
                        Offset (0xAC), 
                        Offset (0xAD), 
                        Offset (0xAE), 
                        XUSB,   1
                    }


  2C06: 5B 81 48 05 2F 03 50 43 49 30 4C 50 43 42 4C 50  // [.H./.PCI0LPCBLP
  2C16: 43 31 00 00 10 43 44 49 44 10 00 20 43 52 49 44  // C1...CDID.. CRID
  2C26: 08 00 48 2B 50 41 52 43 08 50 42 52 43 08 50 43  // ..H+PARC.PBRC.PC
  2C36: 52 43 08 50 44 52 43 08 00 20 50 45 52 43 08 50  // RC.PDRC.. PERC.P
  2C46: 46 52 43 08 50 47 52 43 08 50 48 52 43 08 00 40  // FRC.PGRC.PHRC..@
  2C56: 20 00 08 00 08 58 55 53 42 01                    //  ....XUSB.

                    Device (LNKA)
                    {

  2C60: 5B 82 42 0A 4C 4E 4B 41                          // [.B.LNKA

                        Name (_HID, EisaId ("PNP0C0F"))  // _HID: Hardware ID

  2C68: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

                        Name (_UID, One)  // _UID: Unique ID

  2C72: 08 5F 55 49 44 01                                // ._UID.

                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {

  2C78: 14 11 5F 44 49 53 08                             // .._DIS.

                            Or (PARC, 0x80, PARC)
                        }


  2C7F: 7D 50 41 52 43 0A 80 50 41 52 43                 // }PARC..PARC

                        Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
                        {

  2C8A: 14 0B 5F 50 52 53 08                             // .._PRS.

                            Return (PRSA)
                        }


  2C91: A4 50 52 53 41                                   // .PRSA

                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {

  2C96: 14 38 5F 43 52 53 08                             // .8_CRS.

                            Name (RTLA, 
  2C9D: 08 52 54 4C 41                                   // .RTLA

ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })

  2CA2: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                            CreateWordField (RTLA, One, IRQ0)
                            Store (Zero, IRQ0)
                            ShiftLeft (One, And (PARC, 0x0F), IRQ0)

  2CAC: 8B 52 54 4C 41 01 49 52 51 30 70 00 49 52 51 30  // .RTLA.IRQ0p.IRQ0
  2CBC: 79 01 7B 50 41 52 43 0A 0F 00 49 52 51 30        // y.{PARC...IRQ0

                            Return (RTLA)
                        }


  2CCA: A4 52 54 4C 41                                   // .RTLA

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {

  2CCF: 14 1B 5F 53 52 53 09                             // .._SRS.

                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Decrement (Local0)

  2CD6: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                            Store (Local0, PARC)
                        }


  2CE5: 70 60 50 41 52 43                                // p`PARC

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {

  2CEB: 14 18 5F 53 54 41 08                             // .._STA.

                            If (And (PARC, 0x80))
                            {

  2CF2: A0 0C 7B 50 41 52 43 0A 80 00                    // ..{PARC...

                                Return (0x09)
                            }

  2CFC: A4 0A 09                                         // ...

                            Else
                            {

  2CFF: A1 04                                            // ..

                                Return (0x0B)
                            }
                        }
                    }


  2D01: A4 0A 0B                                         // ...

                    Device (LNKB)
                    {

  2D04: 5B 82 43 0A 4C 4E 4B 42                          // [.C.LNKB

                        Name (_HID, EisaId ("PNP0C0F"))  // _HID: Hardware ID

  2D0C: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

                        Name (_UID, 0x02)  // _UID: Unique ID

  2D16: 08 5F 55 49 44 0A 02                             // ._UID..

                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {

  2D1D: 14 11 5F 44 49 53 08                             // .._DIS.

                            Or (PBRC, 0x80, PBRC)
                        }


  2D24: 7D 50 42 52 43 0A 80 50 42 52 43                 // }PBRC..PBRC

                        Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
                        {

  2D2F: 14 0B 5F 50 52 53 08                             // .._PRS.

                            Return (PRSB)
                        }


  2D36: A4 50 52 53 42                                   // .PRSB

                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {

  2D3B: 14 38 5F 43 52 53 08                             // .8_CRS.

                            Name (RTLB, 
  2D42: 08 52 54 4C 42                                   // .RTLB

ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })

  2D47: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                            CreateWordField (RTLB, One, IRQ0)
                            Store (Zero, IRQ0)
                            ShiftLeft (One, And (PBRC, 0x0F), IRQ0)

  2D51: 8B 52 54 4C 42 01 49 52 51 30 70 00 49 52 51 30  // .RTLB.IRQ0p.IRQ0
  2D61: 79 01 7B 50 42 52 43 0A 0F 00 49 52 51 30        // y.{PBRC...IRQ0

                            Return (RTLB)
                        }


  2D6F: A4 52 54 4C 42                                   // .RTLB

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {

  2D74: 14 1B 5F 53 52 53 09                             // .._SRS.

                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Decrement (Local0)

  2D7B: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                            Store (Local0, PBRC)
                        }


  2D8A: 70 60 50 42 52 43                                // p`PBRC

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {

  2D90: 14 18 5F 53 54 41 08                             // .._STA.

                            If (And (PBRC, 0x80))
                            {

  2D97: A0 0C 7B 50 42 52 43 0A 80 00                    // ..{PBRC...

                                Return (0x09)
                            }

  2DA1: A4 0A 09                                         // ...

                            Else
                            {

  2DA4: A1 04                                            // ..

                                Return (0x0B)
                            }
                        }
                    }


  2DA6: A4 0A 0B                                         // ...

                    Device (LNKC)
                    {

  2DA9: 5B 82 43 0A 4C 4E 4B 43                          // [.C.LNKC

                        Name (_HID, EisaId ("PNP0C0F"))  // _HID: Hardware ID

  2DB1: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

                        Name (_UID, 0x03)  // _UID: Unique ID

  2DBB: 08 5F 55 49 44 0A 03                             // ._UID..

                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {

  2DC2: 14 11 5F 44 49 53 08                             // .._DIS.

                            Or (PCRC, 0x80, PCRC)
                        }


  2DC9: 7D 50 43 52 43 0A 80 50 43 52 43                 // }PCRC..PCRC

                        Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
                        {

  2DD4: 14 0B 5F 50 52 53 08                             // .._PRS.

                            Return (PRSC)
                        }


  2DDB: A4 50 52 53 43                                   // .PRSC

                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {

  2DE0: 14 38 5F 43 52 53 08                             // .8_CRS.

                            Name (RTLC, 
  2DE7: 08 52 54 4C 43                                   // .RTLC

ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })

  2DEC: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                            CreateWordField (RTLC, One, IRQ0)
                            Store (Zero, IRQ0)
                            ShiftLeft (One, And (PCRC, 0x0F), IRQ0)

  2DF6: 8B 52 54 4C 43 01 49 52 51 30 70 00 49 52 51 30  // .RTLC.IRQ0p.IRQ0
  2E06: 79 01 7B 50 43 52 43 0A 0F 00 49 52 51 30        // y.{PCRC...IRQ0

                            Return (RTLC)
                        }


  2E14: A4 52 54 4C 43                                   // .RTLC

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {

  2E19: 14 1B 5F 53 52 53 09                             // .._SRS.

                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Decrement (Local0)

  2E20: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                            Store (Local0, PCRC)
                        }


  2E2F: 70 60 50 43 52 43                                // p`PCRC

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {

  2E35: 14 18 5F 53 54 41 08                             // .._STA.

                            If (And (PCRC, 0x80))
                            {

  2E3C: A0 0C 7B 50 43 52 43 0A 80 00                    // ..{PCRC...

                                Return (0x09)
                            }

  2E46: A4 0A 09                                         // ...

                            Else
                            {

  2E49: A1 04                                            // ..

                                Return (0x0B)
                            }
                        }
                    }


  2E4B: A4 0A 0B                                         // ...

                    Device (LNKD)
                    {

  2E4E: 5B 82 43 0A 4C 4E 4B 44                          // [.C.LNKD

                        Name (_HID, EisaId ("PNP0C0F"))  // _HID: Hardware ID

  2E56: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

                        Name (_UID, 0x04)  // _UID: Unique ID

  2E60: 08 5F 55 49 44 0A 04                             // ._UID..

                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {

  2E67: 14 11 5F 44 49 53 08                             // .._DIS.

                            Or (PDRC, 0x80, PDRC)
                        }


  2E6E: 7D 50 44 52 43 0A 80 50 44 52 43                 // }PDRC..PDRC

                        Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
                        {

  2E79: 14 0B 5F 50 52 53 08                             // .._PRS.

                            Return (PRSD)
                        }


  2E80: A4 50 52 53 44                                   // .PRSD

                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {

  2E85: 14 38 5F 43 52 53 08                             // .8_CRS.

                            Name (RTLD, 
  2E8C: 08 52 54 4C 44                                   // .RTLD

ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })

  2E91: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                            CreateWordField (RTLD, One, IRQ0)
                            Store (Zero, IRQ0)
                            ShiftLeft (One, And (PDRC, 0x0F), IRQ0)

  2E9B: 8B 52 54 4C 44 01 49 52 51 30 70 00 49 52 51 30  // .RTLD.IRQ0p.IRQ0
  2EAB: 79 01 7B 50 44 52 43 0A 0F 00 49 52 51 30        // y.{PDRC...IRQ0

                            Return (RTLD)
                        }


  2EB9: A4 52 54 4C 44                                   // .RTLD

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {

  2EBE: 14 1B 5F 53 52 53 09                             // .._SRS.

                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Decrement (Local0)

  2EC5: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                            Store (Local0, PDRC)
                        }


  2ED4: 70 60 50 44 52 43                                // p`PDRC

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {

  2EDA: 14 18 5F 53 54 41 08                             // .._STA.

                            If (And (PDRC, 0x80))
                            {

  2EE1: A0 0C 7B 50 44 52 43 0A 80 00                    // ..{PDRC...

                                Return (0x09)
                            }

  2EEB: A4 0A 09                                         // ...

                            Else
                            {

  2EEE: A1 04                                            // ..

                                Return (0x0B)
                            }
                        }
                    }


  2EF0: A4 0A 0B                                         // ...

                    Device (LNKE)
                    {

  2EF3: 5B 82 43 0A 4C 4E 4B 45                          // [.C.LNKE

                        Name (_HID, EisaId ("PNP0C0F"))  // _HID: Hardware ID

  2EFB: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

                        Name (_UID, 0x05)  // _UID: Unique ID

  2F05: 08 5F 55 49 44 0A 05                             // ._UID..

                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {

  2F0C: 14 11 5F 44 49 53 08                             // .._DIS.

                            Or (PERC, 0x80, PERC)
                        }


  2F13: 7D 50 45 52 43 0A 80 50 45 52 43                 // }PERC..PERC

                        Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
                        {

  2F1E: 14 0B 5F 50 52 53 08                             // .._PRS.

                            Return (PRSE)
                        }


  2F25: A4 50 52 53 45                                   // .PRSE

                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {

  2F2A: 14 38 5F 43 52 53 08                             // .8_CRS.

                            Name (RTLE, 
  2F31: 08 52 54 4C 45                                   // .RTLE

ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })

  2F36: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                            CreateWordField (RTLE, One, IRQ0)
                            Store (Zero, IRQ0)
                            ShiftLeft (One, And (PERC, 0x0F), IRQ0)

  2F40: 8B 52 54 4C 45 01 49 52 51 30 70 00 49 52 51 30  // .RTLE.IRQ0p.IRQ0
  2F50: 79 01 7B 50 45 52 43 0A 0F 00 49 52 51 30        // y.{PERC...IRQ0

                            Return (RTLE)
                        }


  2F5E: A4 52 54 4C 45                                   // .RTLE

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {

  2F63: 14 1B 5F 53 52 53 09                             // .._SRS.

                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Decrement (Local0)

  2F6A: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                            Store (Local0, PERC)
                        }


  2F79: 70 60 50 45 52 43                                // p`PERC

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {

  2F7F: 14 18 5F 53 54 41 08                             // .._STA.

                            If (And (PERC, 0x80))
                            {

  2F86: A0 0C 7B 50 45 52 43 0A 80 00                    // ..{PERC...

                                Return (0x09)
                            }

  2F90: A4 0A 09                                         // ...

                            Else
                            {

  2F93: A1 04                                            // ..

                                Return (0x0B)
                            }
                        }
                    }


  2F95: A4 0A 0B                                         // ...

                    Device (LNKF)
                    {

  2F98: 5B 82 43 0A 4C 4E 4B 46                          // [.C.LNKF

                        Name (_HID, EisaId ("PNP0C0F"))  // _HID: Hardware ID

  2FA0: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

                        Name (_UID, 0x06)  // _UID: Unique ID

  2FAA: 08 5F 55 49 44 0A 06                             // ._UID..

                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {

  2FB1: 14 11 5F 44 49 53 08                             // .._DIS.

                            Or (PFRC, 0x80, PFRC)
                        }


  2FB8: 7D 50 46 52 43 0A 80 50 46 52 43                 // }PFRC..PFRC

                        Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
                        {

  2FC3: 14 0B 5F 50 52 53 08                             // .._PRS.

                            Return (PRSF)
                        }


  2FCA: A4 50 52 53 46                                   // .PRSF

                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {

  2FCF: 14 38 5F 43 52 53 08                             // .8_CRS.

                            Name (RTLF, 
  2FD6: 08 52 54 4C 46                                   // .RTLF

ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })

  2FDB: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                            CreateWordField (RTLF, One, IRQ0)
                            Store (Zero, IRQ0)
                            ShiftLeft (One, And (PFRC, 0x0F), IRQ0)

  2FE5: 8B 52 54 4C 46 01 49 52 51 30 70 00 49 52 51 30  // .RTLF.IRQ0p.IRQ0
  2FF5: 79 01 7B 50 46 52 43 0A 0F 00 49 52 51 30        // y.{PFRC...IRQ0

                            Return (RTLF)
                        }


  3003: A4 52 54 4C 46                                   // .RTLF

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {

  3008: 14 1B 5F 53 52 53 09                             // .._SRS.

                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Decrement (Local0)

  300F: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                            Store (Local0, PFRC)
                        }


  301E: 70 60 50 46 52 43                                // p`PFRC

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {

  3024: 14 18 5F 53 54 41 08                             // .._STA.

                            If (And (PFRC, 0x80))
                            {

  302B: A0 0C 7B 50 46 52 43 0A 80 00                    // ..{PFRC...

                                Return (0x09)
                            }

  3035: A4 0A 09                                         // ...

                            Else
                            {

  3038: A1 04                                            // ..

                                Return (0x0B)
                            }
                        }
                    }


  303A: A4 0A 0B                                         // ...

                    Device (LNKG)
                    {

  303D: 5B 82 43 0A 4C 4E 4B 47                          // [.C.LNKG

                        Name (_HID, EisaId ("PNP0C0F"))  // _HID: Hardware ID

  3045: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

                        Name (_UID, 0x07)  // _UID: Unique ID

  304F: 08 5F 55 49 44 0A 07                             // ._UID..

                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {

  3056: 14 11 5F 44 49 53 08                             // .._DIS.

                            Or (PGRC, 0x80, PGRC)
                        }


  305D: 7D 50 47 52 43 0A 80 50 47 52 43                 // }PGRC..PGRC

                        Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
                        {

  3068: 14 0B 5F 50 52 53 08                             // .._PRS.

                            Return (PRSG)
                        }


  306F: A4 50 52 53 47                                   // .PRSG

                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {

  3074: 14 38 5F 43 52 53 08                             // .8_CRS.

                            Name (RTLG, 
  307B: 08 52 54 4C 47                                   // .RTLG

ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })

  3080: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                            CreateWordField (RTLG, One, IRQ0)
                            Store (Zero, IRQ0)
                            ShiftLeft (One, And (PGRC, 0x0F), IRQ0)

  308A: 8B 52 54 4C 47 01 49 52 51 30 70 00 49 52 51 30  // .RTLG.IRQ0p.IRQ0
  309A: 79 01 7B 50 47 52 43 0A 0F 00 49 52 51 30        // y.{PGRC...IRQ0

                            Return (RTLG)
                        }


  30A8: A4 52 54 4C 47                                   // .RTLG

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {

  30AD: 14 1B 5F 53 52 53 09                             // .._SRS.

                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Decrement (Local0)

  30B4: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                            Store (Local0, PGRC)
                        }


  30C3: 70 60 50 47 52 43                                // p`PGRC

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {

  30C9: 14 18 5F 53 54 41 08                             // .._STA.

                            If (And (PGRC, 0x80))
                            {

  30D0: A0 0C 7B 50 47 52 43 0A 80 00                    // ..{PGRC...

                                Return (0x09)
                            }

  30DA: A4 0A 09                                         // ...

                            Else
                            {

  30DD: A1 04                                            // ..

                                Return (0x0B)
                            }
                        }
                    }


  30DF: A4 0A 0B                                         // ...

                    Device (LNKH)
                    {

  30E2: 5B 82 43 0A 4C 4E 4B 48                          // [.C.LNKH

                        Name (_HID, EisaId ("PNP0C0F"))  // _HID: Hardware ID

  30EA: 08 5F 48 49 44 0C 41 D0 0C 0F                    // ._HID.A...

                        Name (_UID, 0x08)  // _UID: Unique ID

  30F4: 08 5F 55 49 44 0A 08                             // ._UID..

                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
                        {

  30FB: 14 11 5F 44 49 53 08                             // .._DIS.

                            Or (PHRC, 0x80, PHRC)
                        }


  3102: 7D 50 48 52 43 0A 80 50 48 52 43                 // }PHRC..PHRC

                        Method (_PRS, 0, Serialized)  // _PRS: Possible Resource Settings
                        {

  310D: 14 0B 5F 50 52 53 08                             // .._PRS.

                            Return (PRSH)
                        }


  3114: A4 50 52 53 48                                   // .PRSH

                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                        {

  3119: 14 38 5F 43 52 53 08                             // .8_CRS.

                            Name (RTLH, 
  3120: 08 52 54 4C 48                                   // .RTLH

ResourceTemplate ()
                            {
                                IRQ (Level, ActiveLow, Shared, )
                                    {}
                            })

  3125: 11 09 0A 06 23 00 00 18 79 00                    // ....#...y.

                            CreateWordField (RTLH, One, IRQ0)
                            Store (Zero, IRQ0)
                            ShiftLeft (One, And (PHRC, 0x0F), IRQ0)

  312F: 8B 52 54 4C 48 01 49 52 51 30 70 00 49 52 51 30  // .RTLH.IRQ0p.IRQ0
  313F: 79 01 7B 50 48 52 43 0A 0F 00 49 52 51 30        // y.{PHRC...IRQ0

                            Return (RTLH)
                        }


  314D: A4 52 54 4C 48                                   // .RTLH

                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                        {

  3152: 14 1B 5F 53 52 53 09                             // .._SRS.

                            CreateWordField (Arg0, One, IRQ0)
                            FindSetRightBit (IRQ0, Local0)
                            Decrement (Local0)

  3159: 8B 68 01 49 52 51 30 82 49 52 51 30 60 76 60     // .h.IRQ0.IRQ0`v`

                            Store (Local0, PHRC)
                        }


  3168: 70 60 50 48 52 43                                // p`PHRC

                        Method (_STA, 0, Serialized)  // _STA: Status
                        {

  316E: 14 18 5F 53 54 41 08                             // .._STA.

                            If (And (PHRC, 0x80))
                            {

  3175: A0 0C 7B 50 48 52 43 0A 80 00                    // ..{PHRC...

                                Return (0x09)
                            }

  317F: A4 0A 09                                         // ...

                            Else
                            {

  3182: A1 04                                            // ..

                                Return (0x0B)
                            }
                        }
                    }
                }


  3184: A4 0A 0B                                         // ...

                OperationRegion (LPC0, PCI_Config, 0x40, 0xC0)

  3187: 5B 80 4C 50 43 30 02 0A 40 0A C0                 // [.LPC0..@..

                Field (LPC0, AnyAcc, NoLock, Preserve)
                {
                    Offset (0x40), 
                    IOD0,   8, 
                    IOD1,   8, 
                    Offset (0x78), 
                        ,   6, 
                    GR03,   2, 
                    Offset (0x7A), 
                    GR08,   2, 
                    GR09,   2, 
                    GR0A,   2, 
                    GR0B,   2, 
                    Offset (0x7C), 
                        ,   2, 
                    GR19,   2, 
                    Offset (0x80), 
                    Offset (0xB0), 
                    RAEN,   1, 
                        ,   13, 
                    RCBA,   18
                }


  3192: 5B 81 4E 04 4C 50 43 30 00 00 40 20 49 4F 44 30  // [.N.LPC0..@ IOD0
  31A2: 08 49 4F 44 31 08 00 40 1B 00 06 47 52 30 33 02  // .IOD1..@...GR03.
  31B2: 00 08 47 52 30 38 02 47 52 30 39 02 47 52 30 41  // ..GR08.GR09.GR0A
  31C2: 02 47 52 30 42 02 00 08 00 02 47 52 31 39 02 00  // .GR0B.....GR19..
  31D2: 1C 00 40 18 52 41 45 4E 01 00 0D 52 43 42 41 12  // ..@.RAEN...RCBA.

                Device (DMAC)
                {

  31E2: 5B 82 3D 44 4D 41 43                             // [.=DMAC

                    Name (_HID, EisaId ("PNP0200"))  // _HID: Hardware ID

  31E9: 08 5F 48 49 44 0C 41 D0 02 00                    // ._HID.A...

                    Name (_CRS, 
  31F3: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0000,             // Range Minimum
                            0x0000,             // Range Maximum
                            0x01,               // Alignment
                            0x20,               // Length
                            )
                        IO (Decode16,
                            0x0081,             // Range Minimum
                            0x0081,             // Range Maximum
                            0x01,               // Alignment
                            0x11,               // Length
                            )
                        IO (Decode16,
                            0x0093,             // Range Minimum
                            0x0093,             // Range Maximum
                            0x01,               // Alignment
                            0x0D,               // Length
                            )
                        IO (Decode16,
                            0x00C0,             // Range Minimum
                            0x00C0,             // Range Maximum
                            0x01,               // Alignment
                            0x20,               // Length
                            )
                        DMA (Compatibility, NotBusMaster, Transfer8_16, )
                            {4}
                    })
                }


  31F8: 11 28 0A 25 47 01 00 00 00 00 01 20 47 01 81 00  // .(.%G...... G...
  3208: 81 00 01 11 47 01 93 00 93 00 01 0D 47 01 C0 00  // ....G.......G...
  3218: C0 00 01 20 2A 10 01 79 00                       // ... *..y.

                Device (FWHD)
                {

  3221: 5B 82 26 46 57 48 44                             // [.&FWHD

                    Name (_HID, EisaId ("INT0800"))  // _HID: Hardware ID

  3228: 08 5F 48 49 44 0C 25 D4 08 00                    // ._HID.%...

                    Name (_CRS, 
  3232: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        Memory32Fixed (ReadOnly,
                            0xFF000000,         // Address Base
                            0x01000000,         // Address Length
                            )
                    })
                }


  3237: 11 11 0A 0E 86 09 00 00 00 00 00 FF 00 00 00 01  // ................
  3247: 79 00                                            // y.

                Device (HPET)
                {

  3249: 5B 82 4C 0A 48 50 45 54                          // [.L.HPET

                    Name (_HID, EisaId ("PNP0103"))  // _HID: Hardware ID

  3251: 08 5F 48 49 44 0C 41 D0 01 03                    // ._HID.A...

                    Name (_UID, Zero)  // _UID: Unique ID

  325B: 08 5F 55 49 44 00                                // ._UID.

                    Name (BUF0, 
  3261: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
                    {
                        Memory32Fixed (ReadWrite,
                            0xFED00000,         // Address Base
                            0x00000400,         // Address Length
                            _Y0F)
                    })

  3266: 11 11 0A 0E 86 09 00 01 00 00 D0 FE 00 04 00 00  // ................
  3276: 79 00                                            // y.

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {

  3278: 14 27 5F 53 54 41 00                             // .'_STA.

                        If (
  327F: A0 13 92                                         // ...

LGreaterEqual (OSYS, 0x07D1))
                        {

  3282: 95 4F 53 59 53 0B D1 07                          // .OSYS...

                            If (HPAE)
                            {

  328A: A0 08 48 50 41 45                                // ..HPAE

                                Return (0x0F)
                            }
                        }

  3290: A4 0A 0F                                         // ...

                        ElseIf
  3293: A1 0A                                            // ..

 (HPAE)
                        {

  3295: A0 08 48 50 41 45                                // ..HPAE

                            Return (0x0B)
                        }


  329B: A4 0A 0B                                         // ...

                        Return (Zero)
                    }


  329E: A4 00                                            // ..

                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {

  32A0: 14 46 05 5F 43 52 53 08                          // .F._CRS.

                        If (HPAE)
                        {

  32A8: A0 49 04 48 50 41 45                             // .I.HPAE

                            CreateDWordField (BUF0, \_SB.PCI0.LPCB.HPET._Y0F._BAS, HPT0)  // _BAS: Base Address

  32AF: 8A 42 55 46 30 0A 04 48 50 54 30                 // .BUF0..HPT0

                            If (LEqual (HPAS, One))
                            {

  32BA: A0 11 93 48 50 41 53 01                          // ...HPAS.

                                Store (0xFED01000, HPT0)
                            }


  32C2: 70 0C 00 10 D0 FE 48 50 54 30                    // p.....HPT0

                            If (LEqual (HPAS, 0x02))
                            {

  32CC: A0 12 93 48 50 41 53 0A 02                       // ...HPAS..

                                Store (0xFED02000, HPT0)
                            }


  32D5: 70 0C 00 20 D0 FE 48 50 54 30                    // p.. ..HPT0

                            If (LEqual (HPAS, 0x03))
                            {

  32DF: A0 12 93 48 50 41 53 0A 03                       // ...HPAS..

                                Store (0xFED03000, HPT0)
                            }
                        }


  32E8: 70 0C 00 30 D0 FE 48 50 54 30                    // p..0..HPT0

                        Return (BUF0)
                    }
                }


  32F2: A4 42 55 46 30                                   // .BUF0

                Device (IPIC)
                {

  32F7: 5B 82 45 0A 49 50 49 43                          // [.E.IPIC

                    Name (_HID, EisaId ("PNP0000"))  // _HID: Hardware ID

  32FF: 08 5F 48 49 44 0B 41 D0                          // ._HID.A.

                    Name (_CRS, 
  3307: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0020,             // Range Minimum
                            0x0020,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0024,             // Range Minimum
                            0x0024,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0028,             // Range Minimum
                            0x0028,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x002C,             // Range Minimum
                            0x002C,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0030,             // Range Minimum
                            0x0030,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0034,             // Range Minimum
                            0x0034,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0038,             // Range Minimum
                            0x0038,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x003C,             // Range Minimum
                            0x003C,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A0,             // Range Minimum
                            0x00A0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A4,             // Range Minimum
                            0x00A4,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00A8,             // Range Minimum
                            0x00A8,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00AC,             // Range Minimum
                            0x00AC,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00B0,             // Range Minimum
                            0x00B0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00B4,             // Range Minimum
                            0x00B4,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00B8,             // Range Minimum
                            0x00B8,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x00BC,             // Range Minimum
                            0x00BC,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x04D0,             // Range Minimum
                            0x04D0,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IRQNoFlags ()
                            {2}
                    })
                }


  330C: 11 41 09 0A 8D 47 01 20 00 20 00 01 02 47 01 24  // .A...G. . ...G.$
  331C: 00 24 00 01 02 47 01 28 00 28 00 01 02 47 01 2C  // .$...G.(.(...G.,
  332C: 00 2C 00 01 02 47 01 30 00 30 00 01 02 47 01 34  // .,...G.0.0...G.4
  333C: 00 34 00 01 02 47 01 38 00 38 00 01 02 47 01 3C  // .4...G.8.8...G.<
  334C: 00 3C 00 01 02 47 01 A0 00 A0 00 01 02 47 01 A4  // .<...G.......G..
  335C: 00 A4 00 01 02 47 01 A8 00 A8 00 01 02 47 01 AC  // .....G.......G..
  336C: 00 AC 00 01 02 47 01 B0 00 B0 00 01 02 47 01 B4  // .....G.......G..
  337C: 00 B4 00 01 02 47 01 B8 00 B8 00 01 02 47 01 BC  // .....G.......G..
  338C: 00 BC 00 01 02 47 01 D0 04 D0 04 01 02 22 04 00  // .....G......."..
  339C: 79 00                                            // y.

                Device (MATH)
                {

  339E: 5B 82 43 04 4D 41 54 48                          // [.C.MATH

                    Name (_HID, EisaId ("PNP0C04"))  // _HID: Hardware ID

  33A6: 08 5F 48 49 44 0C 41 D0 0C 04                    // ._HID.A...

                    Name (_CRS, 
  33B0: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x00F0,             // Range Minimum
                            0x00F0,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IRQNoFlags ()
                            {13}
                    })

  33B5: 11 10 0A 0D 47 01 F0 00 F0 00 01 01 22 00 20 79  // ....G.......". y
  33C5: 00                                               // .

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {

  33C6: 14 1C 5F 53 54 41 00                             // .._STA.

                        If (LEqual (And (CDID, 0xF000), 0x8000))
                        {

  33CD: A0 11 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                            Return (0x1F)
                        }

  33DC: A4 0A 1F                                         // ...

                        Else
                        {

  33DF: A1 03                                            // ..

                            Return (Zero)
                        }
                    }
                }


  33E1: A4 00                                            // ..

                Device (LDRC)
                {

  33E3: 5B 82 46 1A 4C 44 52 43                          // [.F.LDRC

                    Name (_HID, EisaId ("PNP0C02"))  // _HID: Hardware ID

  33EB: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

                    Name (_UID, 0x02)  // _UID: Unique ID

  33F5: 08 5F 55 49 44 0A 02                             // ._UID..

                    Name (BUF0, 
  33FC: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x002E,             // Range Minimum
                            0x002E,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x004E,             // Range Minimum
                            0x004E,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0061,             // Range Minimum
                            0x0061,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0063,             // Range Minimum
                            0x0063,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0065,             // Range Minimum
                            0x0065,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0067,             // Range Minimum
                            0x0067,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0068,             // Range Minimum
                            0x0068,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x006C,             // Range Minimum
                            0x006C,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0080,             // Range Minimum
                            0x0080,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0092,             // Range Minimum
                            0x0092,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x00B2,             // Range Minimum
                            0x00B2,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0680,             // Range Minimum
                            0x0680,             // Range Maximum
                            0x01,               // Alignment
                            0x20,               // Length
                            )
                        IO (Decode16,
                            0xFFFF,             // Range Minimum
                            0xFFFF,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0xFFFF,             // Range Minimum
                            0xFFFF,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0xFFFF,             // Range Minimum
                            0xFFFF,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0800,             // Range Minimum
                            0x0800,             // Range Maximum
                            0x01,               // Alignment
                            0xFF,               // Length
                            _Y10)
                        IO (Decode16,
                            0x0900,             // Range Minimum
                            0x0900,             // Range Maximum
                            0x01,               // Alignment
                            0xFF,               // Length
                            _Y11)
                        IO (Decode16,
                            0x0A00,             // Range Minimum
                            0x0A00,             // Range Maximum
                            0x01,               // Alignment
                            0xFF,               // Length
                            _Y12)
                        IO (Decode16,
                            0x0B00,             // Range Minimum
                            0x0B00,             // Range Maximum
                            0x01,               // Alignment
                            0xFF,               // Length
                            _Y13)
                        IO (Decode16,
                            0x1800,             // Range Minimum
                            0x1800,             // Range Maximum
                            0x01,               // Alignment
                            0xFF,               // Length
                            )
                        IO (Decode16,
                            0x164E,             // Range Minimum
                            0x164E,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x3322,             // Range Minimum
                            0x3322,             // Range Maximum
                            0x01,               // Alignment
                            0x02,               // Length
                            )
                    })

  3401: 11 4E 0B 0A BA 47 01 2E 00 2E 00 01 02 47 01 4E  // .N...G.......G.N
  3411: 00 4E 00 01 02 47 01 61 00 61 00 01 01 47 01 63  // .N...G.a.a...G.c
  3421: 00 63 00 01 01 47 01 65 00 65 00 01 01 47 01 67  // .c...G.e.e...G.g
  3431: 00 67 00 01 01 47 01 68 00 68 00 01 01 47 01 6C  // .g...G.h.h...G.l
  3441: 00 6C 00 01 01 47 01 70 00 70 00 01 01 47 01 80  // .l...G.p.p...G..
  3451: 00 80 00 01 01 47 01 92 00 92 00 01 01 47 01 B2  // .....G.......G..
  3461: 00 B2 00 01 02 47 01 80 06 80 06 01 20 47 01 FF  // .....G...... G..
  3471: FF FF FF 01 01 47 01 FF FF FF FF 01 01 47 01 FF  // .....G.......G..
  3481: FF FF FF 01 01 47 01 00 08 00 08 01 FF 47 01 00  // .....G.......G..
  3491: 09 00 09 01 FF 47 01 00 0A 00 0A 01 FF 47 01 00  // .....G.......G..
  34A1: 0B 00 0B 01 FF 47 01 00 18 00 18 01 FF 47 01 4E  // .....G.......G.N
  34B1: 16 4E 16 01 02 47 01 22 33 22 33 01 02 79 00     // .N...G."3"3..y.

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {

  34C0: 14 4A 0C 5F 43 52 53 00                          // .J._CRS.

                        CreateWordField (BUF0, \_SB.PCI0.LPCB.LDRC._Y10._MIN, IO0M)  // _MIN: Minimum Base Address

  34C8: 8B 42 55 46 30 0A 82 49 4F 30 4D                 // .BUF0..IO0M

                        CreateWordField (BUF0, \_SB.PCI0.LPCB.LDRC._Y10._MAX, IO0X)  // _MAX: Maximum Base Address
                        Store (GPBS, IO0M)
                        Store (GPBS, IO0X)

  34D3: 8B 42 55 46 30 0A 84 49 4F 30 58 70 47 50 42 53  // .BUF0..IO0XpGPBS
  34E3: 49 4F 30 4D 70 47 50 42 53 49 4F 30 58           // IO0MpGPBSIO0X

                        CreateWordField (BUF0, \_SB.PCI0.LPCB.LDRC._Y11._MIN, IO1M)  // _MIN: Minimum Base Address

  34F0: 8B 42 55 46 30 0A 8A 49 4F 31 4D                 // .BUF0..IO1M

                        CreateWordField (BUF0, \_SB.PCI0.LPCB.LDRC._Y11._MAX, IO1X)  // _MAX: Maximum Base Address
                        Store (Add (GPBS, 0x0100), IO1M)
                        Store (Add (GPBS, 0x0100), IO1X)

  34FB: 8B 42 55 46 30 0A 8C 49 4F 31 58 70 72 47 50 42  // .BUF0..IO1XprGPB
  350B: 53 0B 00 01 00 49 4F 31 4D 70 72 47 50 42 53 0B  // S....IO1MprGPBS.
  351B: 00 01 00 49 4F 31 58                             // ...IO1X

                        CreateWordField (BUF0, \_SB.PCI0.LPCB.LDRC._Y12._MIN, IO2M)  // _MIN: Minimum Base Address

  3522: 8B 42 55 46 30 0A 92 49 4F 32 4D                 // .BUF0..IO2M

                        CreateWordField (BUF0, \_SB.PCI0.LPCB.LDRC._Y12._MAX, IO2X)  // _MAX: Maximum Base Address
                        Store (Add (GPBS, 0x0200), IO2M)
                        Store (Add (GPBS, 0x0200), IO2X)

  352D: 8B 42 55 46 30 0A 94 49 4F 32 58 70 72 47 50 42  // .BUF0..IO2XprGPB
  353D: 53 0B 00 02 00 49 4F 32 4D 70 72 47 50 42 53 0B  // S....IO2MprGPBS.
  354D: 00 02 00 49 4F 32 58                             // ...IO2X

                        CreateWordField (BUF0, \_SB.PCI0.LPCB.LDRC._Y13._MIN, IO3M)  // _MIN: Minimum Base Address

  3554: 8B 42 55 46 30 0A 9A 49 4F 33 4D                 // .BUF0..IO3M

                        CreateWordField (BUF0, \_SB.PCI0.LPCB.LDRC._Y13._MAX, IO3X)  // _MAX: Maximum Base Address
                        Store (Add (GPBS, 0x0300), IO3M)
                        Store (Add (GPBS, 0x0300), IO3X)

  355F: 8B 42 55 46 30 0A 9C 49 4F 33 58 70 72 47 50 42  // .BUF0..IO3XprGPB
  356F: 53 0B 00 03 00 49 4F 33 4D 70 72 47 50 42 53 0B  // S....IO3MprGPBS.
  357F: 00 03 00 49 4F 33 58                             // ...IO3X

                        Return (BUF0)
                    }
                }


  3586: A4 42 55 46 30                                   // .BUF0

                Device (RTC)
                {

  358B: 5B 82 25 52 54 43 5F                             // [.%RTC_

                    Name (_HID, EisaId ("PNP0B00"))  // _HID: Hardware ID

  3592: 08 5F 48 49 44 0C 41 D0 0B 00                    // ._HID.A...

                    Name (_CRS, 
  359C: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0070,             // Range Minimum
                            0x0070,             // Range Maximum
                            0x01,               // Alignment
                            0x08,               // Length
                            )
                        IRQNoFlags ()
                            {8}
                    })
                }


  35A1: 11 10 0A 0D 47 01 70 00 70 00 01 08 22 00 01 79  // ....G.p.p..."..y
  35B1: 00                                               // .

                Device (TIMR)
                {

  35B2: 5B 82 2D 54 49 4D 52                             // [.-TIMR

                    Name (_HID, EisaId ("PNP0100"))  // _HID: Hardware ID

  35B9: 08 5F 48 49 44 0C 41 D0 01 00                    // ._HID.A...

                    Name (_CRS, 
  35C3: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0040,             // Range Minimum
                            0x0040,             // Range Maximum
                            0x01,               // Alignment
                            0x04,               // Length
                            )
                        IO (Decode16,
                            0x0050,             // Range Minimum
                            0x0050,             // Range Maximum
                            0x10,               // Alignment
                            0x04,               // Length
                            )
                        IRQNoFlags ()
                            {0}
                    })
                }


  35C8: 11 18 0A 15 47 01 40 00 40 00 01 04 47 01 50 00  // ....G.@.@...G.P.
  35D8: 50 00 10 04 22 01 00 79 00                       // P..."..y.

                Device (CWDT)
                {

  35E1: 5B 82 4F 04 43 57 44 54                          // [.O.CWDT

                    Name (_HID, EisaId ("INT3F0D"))  // _HID: Hardware ID

  35E9: 08 5F 48 49 44 0C 25 D4 3F 0D                    // ._HID.%.?.

                    Name (_CID, EisaId ("PNP0C02"))  // _CID: Compatible ID

  35F3: 08 5F 43 49 44 0C 41 D0 0C 02                    // ._CID.A...

                    Name (BUF0, 
  35FD: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x1854,             // Range Minimum
                            0x1854,             // Range Maximum
                            0x04,               // Alignment
                            0x04,               // Length
                            )
                    })

  3602: 11 0D 0A 0A 47 01 54 18 54 18 04 04 79 00        // ....G.T.T...y.

                    Method (_STA, 0, Serialized)  // _STA: Status
                    {

  3610: 14 15 5F 53 54 41 08                             // .._STA.

                        If (LEqual (WDTE, One))
                        {

  3617: A0 0A 93 57 44 54 45 01                          // ...WDTE.

                            Return (0x0F)
                        }

  361F: A4 0A 0F                                         // ...

                        Else
                        {

  3622: A1 03                                            // ..

                            Return (Zero)
                        }
                    }


  3624: A4 00                                            // ..

                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                    {

  3626: 14 0B 5F 43 52 53 08                             // .._CRS.

                        Return (BUF0)
                    }
                }


  362D: A4 42 55 46 30                                   // .BUF0

                Device (PS2K)
                {

  3632: 5B 82 41 06 50 53 32 4B                          // [.A.PS2K

                    Name (_HID, "MSFT0001")  // _HID: Hardware ID

  363A: 08 5F 48 49 44 0D 4D 53 46 54 30 30 30 31 00     // ._HID.MSFT0001.

                    Name (_CID, EisaId ("PNP0303"))  // _CID: Compatible ID

  3649: 08 5F 43 49 44 0C 41 D0 03 03                    // ._CID.A...

                    Name (_CRS, 
  3653: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IO (Decode16,
                            0x0060,             // Range Minimum
                            0x0060,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0064,             // Range Minimum
                            0x0064,             // Range Maximum
                            0x01,               // Alignment
                            0x01,               // Length
                            )
                        IRQ (Edge, ActiveHigh, Exclusive, )
                            {1}
                    })

  3658: 11 19 0A 16 47 01 60 00 60 00 01 01 47 01 64 00  // ....G.`.`...G.d.
  3668: 64 00 01 01 23 02 00 01 79 00                    // d...#...y.

                    Name (_PRS, 
  3672: 08 5F 50 52 53                                   // ._PRS

ResourceTemplate ()  // _PRS: Possible Resource Settings
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            FixedIO (
                                0x0060,             // Address
                                0x01,               // Length
                                )
                            FixedIO (
                                0x0064,             // Address
                                0x01,               // Length
                                )
                            IRQNoFlags ()
                                {1}
                        }
                        EndDependentFn ()
                    })

  3677: 11 13 0A 10 31 00 4B 60 00 01 4B 64 00 01 22 02  // ....1.K`..Kd..".
  3687: 00 38 79 00                                      // .8y.

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {

  368B: 14 09 5F 53 54 41 00                             // .._STA.

                        Return (0x0F)
                    }
                }


  3692: A4 0A 0F                                         // ...

                Device (PS2M)
                {

  3695: 5B 82 4C 05 50 53 32 4D                          // [.L.PS2M

                    Name (_HID, "MSFT0003")  // _HID: Hardware ID

  369D: 08 5F 48 49 44 0D 4D 53 46 54 30 30 30 33 00     // ._HID.MSFT0003.

                    Name (_CID, EisaId ("PNP0F13"))  // _CID: Compatible ID

  36AC: 08 5F 43 49 44 0C 41 D0 0F 13                    // ._CID.A...

                    Name (_UID, Zero)  // _UID: Unique ID

  36B6: 08 5F 55 49 44 00                                // ._UID.

                    Name (_CRS, 
  36BC: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IRQ (Edge, ActiveHigh, Exclusive, )
                            {12}
                    })

  36C1: 11 09 0A 06 23 00 10 01 79 00                    // ....#...y.

                    Name (_PRS, 
  36CB: 08 5F 50 52 53                                   // ._PRS

ResourceTemplate ()  // _PRS: Possible Resource Settings
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IRQNoFlags ()
                                {12}
                        }
                        EndDependentFn ()
                    })

  36D0: 11 0B 0A 08 31 00 22 00 10 38 79 00              // ....1."..8y.

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {

  36DC: 14 16 5F 53 54 41 00                             // .._STA.

                        If (And (OEMF, 0x0180))
                        {

  36E3: A0 0C 7B 4F 45 4D 46 0B 80 01 00                 // ..{OEMF....

                            Return (Zero)
                        }


  36EE: A4 00                                            // ..

                        Return (0x0F)
                    }
                }


  36F0: A4 0A 0F                                         // ...

                Device (SENM)
                {

  36F3: 5B 82 4B 06 53 45 4E 4D                          // [.K.SENM

                    Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
                    {

  36FB: 14 1A 5F 48 49 44 00                             // .._HID.

                        If (TPID)
                        {

  3702: A0 0B 54 50 49 44                                // ..TPID

                            Return (0x0506954E)
                        }

  3708: A4 0C 4E 95 06 05                                // ..N...

                        Else
                        {

  370E: A1 07                                            // ..

                            Return (0x0406954E)
                        }
                    }


  3710: A4 0C 4E 95 06 04                                // ..N...

                    Name (_CID, EisaId ("PNP0F13"))  // _CID: Compatible ID

  3716: 08 5F 43 49 44 0C 41 D0 0F 13                    // ._CID.A...

                    Name (_UID, One)  // _UID: Unique ID

  3720: 08 5F 55 49 44 01                                // ._UID.

                    Name (_CRS, 
  3726: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IRQ (Edge, ActiveHigh, Exclusive, )
                            {12}
                    })

  372B: 11 09 0A 06 23 00 10 01 79 00                    // ....#...y.

                    Name (_PRS, 
  3735: 08 5F 50 52 53                                   // ._PRS

ResourceTemplate ()  // _PRS: Possible Resource Settings
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IRQNoFlags ()
                                {12}
                        }
                        EndDependentFn ()
                    })

  373A: 11 0B 0A 08 31 00 22 00 10 38 79 00              // ....1."..8y.

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {

  3746: 14 19 5F 53 54 41 00                             // .._STA.

                        If (LEqual (And (OEMF, 0x0180), 0x80))
                        {

  374D: A0 10 93 7B 4F 45 4D 46 0B 80 01 00 0A 80        // ...{OEMF......

                            Return (0x0F)
                        }


  375B: A4 0A 0F                                         // ...

                        Return (Zero)
                    }
                }


  375E: A4 00                                            // ..

                Device (ELNM)
                {

  3760: 5B 82 4C 05 45 4C 4E 4D                          // [.L.ELNM

                    Name (_HID, EisaId ("ETD0403"))  // _HID: Hardware ID

  3768: 08 5F 48 49 44 0C 16 84 04 03                    // ._HID.....

                    Name (_CID, EisaId ("PNP0F13"))  // _CID: Compatible ID

  3772: 08 5F 43 49 44 0C 41 D0 0F 13                    // ._CID.A...

                    Name (_UID, 0x02)  // _UID: Unique ID

  377C: 08 5F 55 49 44 0A 02                             // ._UID..

                    Name (_CRS, 
  3783: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IRQ (Edge, ActiveHigh, Exclusive, )
                            {12}
                    })

  3788: 11 09 0A 06 23 00 10 01 79 00                    // ....#...y.

                    Name (_PRS, 
  3792: 08 5F 50 52 53                                   // ._PRS

ResourceTemplate ()  // _PRS: Possible Resource Settings
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IRQNoFlags ()
                                {12}
                        }
                        EndDependentFn ()
                    })

  3797: 11 0B 0A 08 31 00 22 00 10 38 79 00              // ....1."..8y.

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {

  37A3: 14 1A 5F 53 54 41 00                             // .._STA.

                        If (LEqual (And (OEMF, 0x0180), 0x0100))
                        {

  37AA: A0 11 93 7B 4F 45 4D 46 0B 80 01 00 0B 00 01     // ...{OEMF.......

                            Return (0x0F)
                        }


  37B9: A4 0A 0F                                         // ...

                        Return (Zero)
                    }
                }


  37BC: A4 00                                            // ..

                Device (SYNM)
                {

  37BE: 5B 82 4C 05 53 59 4E 4D                          // [.L.SYNM

                    Name (_HID, EisaId ("SYN1214"))  // _HID: Hardware ID

  37C6: 08 5F 48 49 44 0C 4F 2E 12 14                    // ._HID.O...

                    Name (_CID, EisaId ("PNP0F13"))  // _CID: Compatible ID

  37D0: 08 5F 43 49 44 0C 41 D0 0F 13                    // ._CID.A...

                    Name (_UID, 0x03)  // _UID: Unique ID

  37DA: 08 5F 55 49 44 0A 03                             // ._UID..

                    Name (_CRS, 
  37E1: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
                    {
                        IRQ (Edge, ActiveHigh, Exclusive, )
                            {12}
                    })

  37E6: 11 09 0A 06 23 00 10 01 79 00                    // ....#...y.

                    Name (_PRS, 
  37F0: 08 5F 50 52 53                                   // ._PRS

ResourceTemplate ()  // _PRS: Possible Resource Settings
                    {
                        StartDependentFn (0x00, 0x00)
                        {
                            IRQNoFlags ()
                                {12}
                        }
                        EndDependentFn ()
                    })

  37F5: 11 0B 0A 08 31 00 22 00 10 38 79 00              // ....1."..8y.

                    Method (_STA, 0, NotSerialized)  // _STA: Status
                    {

  3801: 14 1A 5F 53 54 41 00                             // .._STA.

                        If (LEqual (And (OEMF, 0x0180), 0x0180))
                        {

  3808: A0 11 93 7B 4F 45 4D 46 0B 80 01 00 0B 80 01     // ...{OEMF.......

                            Return (0x0F)
                        }


  3817: A4 0A 0F                                         // ...

                        Return (Zero)
                    }
                }


  381A: A4 00                                            // ..

                Device (RMSC)
                {

  381C: 5B 82 4D 11 52 4D 53 43                          // [.M.RMSC

                    Name (_HID, EisaId ("PNP0C02"))  // _HID: Hardware ID

  3824: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

                    Name (_UID, 0x10)  // _UID: Unique ID

  382E: 08 5F 55 49 44 0A 10                             // ._UID..

                    Name (CRS1, 
  3835: 08 43 52 53 31                                   // .CRS1

ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0010,             // Range Minimum
                            0x0010,             // Range Maximum
                            0x00,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x0022,             // Range Minimum
                            0x0022,             // Range Maximum
                            0x00,               // Alignment
                            0x1E,               // Length
                            )
                        IO (Decode16,
                            0x0044,             // Range Minimum
                            0x0044,             // Range Maximum
                            0x00,               // Alignment
                            0x1C,               // Length
                            )
                        IO (Decode16,
                            0x0062,             // Range Minimum
                            0x0062,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                        IO (Decode16,
                            0x0065,             // Range Minimum
                            0x0065,             // Range Maximum
                            0x00,               // Alignment
                            0x0B,               // Length
                            )
                        IO (Decode16,
                            0x0072,             // Range Minimum
                            0x0072,             // Range Maximum
                            0x00,               // Alignment
                            0x0E,               // Length
                            )
                        IO (Decode16,
                            0x0080,             // Range Minimum
                            0x0080,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0084,             // Range Minimum
                            0x0084,             // Range Maximum
                            0x00,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x0088,             // Range Minimum
                            0x0088,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x008C,             // Range Minimum
                            0x008C,             // Range Maximum
                            0x00,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x0090,             // Range Minimum
                            0x0090,             // Range Maximum
                            0x00,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x00A2,             // Range Minimum
                            0x00A2,             // Range Maximum
                            0x00,               // Alignment
                            0x1E,               // Length
                            )
                        IO (Decode16,
                            0x00E0,             // Range Minimum
                            0x00E0,             // Range Maximum
                            0x00,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x04D0,             // Range Minimum
                            0x04D0,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                    })

  383A: 11 46 07 0A 72 47 01 10 00 10 00 00 10 47 01 22  // .F..rG.......G."
  384A: 00 22 00 00 1E 47 01 44 00 44 00 00 1C 47 01 62  // ."...G.D.D...G.b
  385A: 00 62 00 00 02 47 01 65 00 65 00 00 0B 47 01 72  // .b...G.e.e...G.r
  386A: 00 72 00 00 0E 47 01 80 00 80 00 00 01 47 01 84  // .r...G.......G..
  387A: 00 84 00 00 03 47 01 88 00 88 00 00 01 47 01 8C  // .....G.......G..
  388A: 00 8C 00 00 03 47 01 90 00 90 00 00 10 47 01 A2  // .....G.......G..
  389A: 00 A2 00 00 1E 47 01 E0 00 E0 00 00 10 47 01 D0  // .....G.......G..
  38AA: 04 D0 04 00 02 79 00                             // .....y.

                    Name (CRS2, 
  38B1: 08 43 52 53 32                                   // .CRS2

ResourceTemplate ()
                    {
                        IO (Decode16,
                            0x0010,             // Range Minimum
                            0x0010,             // Range Maximum
                            0x00,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x0022,             // Range Minimum
                            0x0022,             // Range Maximum
                            0x00,               // Alignment
                            0x1E,               // Length
                            )
                        IO (Decode16,
                            0x0044,             // Range Minimum
                            0x0044,             // Range Maximum
                            0x00,               // Alignment
                            0x1C,               // Length
                            )
                        IO (Decode16,
                            0x0072,             // Range Minimum
                            0x0072,             // Range Maximum
                            0x00,               // Alignment
                            0x0E,               // Length
                            )
                        IO (Decode16,
                            0x0080,             // Range Minimum
                            0x0080,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x0084,             // Range Minimum
                            0x0084,             // Range Maximum
                            0x00,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x0088,             // Range Minimum
                            0x0088,             // Range Maximum
                            0x00,               // Alignment
                            0x01,               // Length
                            )
                        IO (Decode16,
                            0x008C,             // Range Minimum
                            0x008C,             // Range Maximum
                            0x00,               // Alignment
                            0x03,               // Length
                            )
                        IO (Decode16,
                            0x0090,             // Range Minimum
                            0x0090,             // Range Maximum
                            0x00,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x00A2,             // Range Minimum
                            0x00A2,             // Range Maximum
                            0x00,               // Alignment
                            0x1E,               // Length
                            )
                        IO (Decode16,
                            0x00E0,             // Range Minimum
                            0x00E0,             // Range Maximum
                            0x00,               // Alignment
                            0x10,               // Length
                            )
                        IO (Decode16,
                            0x04D0,             // Range Minimum
                            0x04D0,             // Range Maximum
                            0x00,               // Alignment
                            0x02,               // Length
                            )
                    })

  38B6: 11 46 06 0A 62 47 01 10 00 10 00 00 10 47 01 22  // .F..bG.......G."
  38C6: 00 22 00 00 1E 47 01 44 00 44 00 00 1C 47 01 72  // ."...G.D.D...G.r
  38D6: 00 72 00 00 0E 47 01 80 00 80 00 00 01 47 01 84  // .r...G.......G..
  38E6: 00 84 00 00 03 47 01 88 00 88 00 00 01 47 01 8C  // .....G.......G..
  38F6: 00 8C 00 00 03 47 01 90 00 90 00 00 10 47 01 A2  // .....G.......G..
  3906: 00 A2 00 00 1E 47 01 E0 00 E0 00 00 10 47 01 D0  // .....G.......G..
  3916: 04 D0 04 00 02 79 00                             // .....y.

                    Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                    {

  391D: 14 1D 5F 43 52 53 00                             // .._CRS.

                        If (And (MBEC, 0xFFFF))
                        {

  3924: A0 0F 7B 4D 42 45 43 0B FF FF 00                 // ..{MBEC....

                            Return (CRS1)
                        }

  392F: A4 43 52 53 31                                   // .CRS1

                        Else
                        {

  3934: A1 06                                            // ..

                            Return (CRS2)
                        }
                    }
                }
            }
        }
    }


  3936: A4 43 52 53 32                                   // .CRS2

    Name (RPA0, 0x001C0000)

  393B: 08 52 50 41 30 0C 00 00 1C 00                    // .RPA0.....

    Name (RPA1, 0x001C0001)

  3945: 08 52 50 41 31 0C 01 00 1C 00                    // .RPA1.....

    Name (RPA2, 0x001C0002)

  394F: 08 52 50 41 32 0C 02 00 1C 00                    // .RPA2.....

    Name (RPA3, 0x001C0003)

  3959: 08 52 50 41 33 0C 03 00 1C 00                    // .RPA3.....

    Name (RPA4, 0x001C0004)

  3963: 08 52 50 41 34 0C 04 00 1C 00                    // .RPA4.....

    Name (RPA5, 0x001C0005)

  396D: 08 52 50 41 35 0C 05 00 1C 00                    // .RPA5.....

    Name (RPA6, 0x001C0006)

  3977: 08 52 50 41 36 0C 06 00 1C 00                    // .RPA6.....

    Name (RPA7, 0x001C0007)

  3981: 08 52 50 41 37 0C 07 00 1C 00                    // .RPA7.....

    Name (PCHS, 0x00000001)

  398B: 08 50 43 48 53 0C 01 00 00 00                    // .PCHS.....

    Name (SRMB, 0xF7FD0000)

  3995: 08 53 52 4D 42 0C 00 00 FD F7                    // .SRMB.....

    Name (PML1, 0x00000846)

  399F: 08 50 4D 4C 31 0C 46 08 00 00                    // .PML1.F...

    Name (PML2, 0x00000846)

  39A9: 08 50 4D 4C 32 0C 46 08 00 00                    // .PML2.F...

    Name (PML3, 0x00000846)

  39B3: 08 50 4D 4C 33 0C 46 08 00 00                    // .PML3.F...

    Name (PML4, 0x00000846)

  39BD: 08 50 4D 4C 34 0C 46 08 00 00                    // .PML4.F...

    Name (PML5, 0x00000846)

  39C7: 08 50 4D 4C 35 0C 46 08 00 00                    // .PML5.F...

    Name (PML6, 0x00000846)

  39D1: 08 50 4D 4C 36 0C 46 08 00 00                    // .PML6.F...

    Name (PML7, 0x00000846)

  39DB: 08 50 4D 4C 37 0C 46 08 00 00                    // .PML7.F...

    Name (PML8, 0x00000846)

  39E5: 08 50 4D 4C 38 0C 46 08 00 00                    // .PML8.F...

    Name (PNL1, 0x00000846)

  39EF: 08 50 4E 4C 31 0C 46 08 00 00                    // .PNL1.F...

    Name (PNL2, 0x00000846)

  39F9: 08 50 4E 4C 32 0C 46 08 00 00                    // .PNL2.F...

    Name (PNL3, 0x00000846)

  3A03: 08 50 4E 4C 33 0C 46 08 00 00                    // .PNL3.F...

    Name (PNL4, 0x00000846)

  3A0D: 08 50 4E 4C 34 0C 46 08 00 00                    // .PNL4.F...

    Name (PNL5, 0x00000846)

  3A17: 08 50 4E 4C 35 0C 46 08 00 00                    // .PNL5.F...

    Name (PNL6, 0x00000846)

  3A21: 08 50 4E 4C 36 0C 46 08 00 00                    // .PNL6.F...

    Name (PNL7, 0x00000846)

  3A2B: 08 50 4E 4C 37 0C 46 08 00 00                    // .PNL7.F...

    Name (PNL8, 0x00000846)

  3A35: 08 50 4E 4C 38 0C 46 08 00 00                    // .PNL8.F...

    Scope (\)
    {

  3A3F: 10 4E 35 5C 00                                   // .N5\.

        OperationRegion (IO_D, SystemIO, 0x0810, 0x04)

  3A44: 5B 80 49 4F 5F 44 01 0B 10 08 0A 04              // [.IO_D......

        Field (IO_D, ByteAcc, NoLock, Preserve)
        {
            TRPD,   8
        }


  3A50: 5B 81 0B 49 4F 5F 44 01 54 52 50 44 08           // [..IO_D.TRPD.

        OperationRegion (IO_H, SystemIO, 0x1000, 0x04)

  3A5D: 5B 80 49 4F 5F 48 01 0B 00 10 0A 04              // [.IO_H......

        Field (IO_H, ByteAcc, NoLock, Preserve)
        {
            TRPH,   8
        }


  3A69: 5B 81 0B 49 4F 5F 48 01 54 52 50 48 08           // [..IO_H.TRPH.

        OperationRegion (PMIO, SystemIO, PMBS, 0x80)

  3A76: 5B 80 50 4D 49 4F 01 50 4D 42 53 0A 80           // [.PMIO.PMBS..

        Field (PMIO, ByteAcc, NoLock, Preserve)
        {
            Offset (0x28), 
            Offset (0x2A), 
                ,   3, 
            GPE3,   1, 
                ,   7, 
            GPEB,   1, 
            Offset (0x3C), 
                ,   1, 
            UPRW,   1, 
            Offset (0x42), 
                ,   1, 
            GPEC,   1
        }


  3A83: 5B 81 2C 50 4D 49 4F 01 00 40 14 00 10 00 03 47  // [.,PMIO..@.....G
  3A93: 50 45 33 01 00 07 47 50 45 42 01 00 44 08 00 01  // PE3...GPEB..D...
  3AA3: 55 50 52 57 01 00 2E 00 01 47 50 45 43 01        // UPRW.....GPEC.

        Field (PMIO, ByteAcc, NoLock, WriteAsZeros)
        {
            Offset (0x20), 
            Offset (0x22), 
                ,   3, 
            GPS3,   1, 
                ,   7, 
            GPSB,   1, 
            Offset (0x64), 
                ,   9, 
            SCIS,   1, 
            Offset (0x66)
        }


  3AB1: 5B 81 25 50 4D 49 4F 41 00 40 10 00 10 00 03 47  // [.%PMIOA.@.....G
  3AC1: 50 53 33 01 00 07 47 50 53 42 01 00 44 20 00 09  // PS3...GPSB..D ..
  3AD1: 53 43 49 53 01 00 06                             // SCIS...

        OperationRegion (PMLP, SystemIO, Add (PMBS, 0x80), 0x20)

  3AD8: 5B 80 50 4D 4C 50 01 72 50 4D 42 53 0A 80 00 0A  // [.PMLP.rPMBS....
  3AE8: 20                                               //  

        Field (PMLP, ByteAcc, NoLock, Preserve)
        {
            Offset (0x10), 
            Offset (0x11), 
            GE08,   1, 
                ,   8, 
            GE17,   1, 
                ,   27, 
            GE45,   1, 
                ,   5, 
            GE51,   1, 
            Offset (0x20)
        }


  3AE9: 5B 81 28 50 4D 4C 50 01 00 40 08 00 08 47 45 30  // [.(PMLP..@...GE0
  3AF9: 38 01 00 08 47 45 31 37 01 00 1B 47 45 34 35 01  // 8...GE17...GE45.
  3B09: 00 05 47 45 35 31 01 00 4C 04                    // ..GE51..L.

        Field (PMLP, ByteAcc, NoLock, WriteAsZeros)
        {
            Offset (0x01), 
            GS08,   1, 
                ,   8, 
            GS17,   1, 
                ,   27, 
            GS45,   1, 
                ,   5, 
            GS51,   1, 
            Offset (0x10)
        }


  3B13: 5B 81 25 50 4D 4C 50 41 00 08 47 53 30 38 01 00  // [.%PMLPA..GS08..
  3B23: 08 47 53 31 37 01 00 1B 47 53 34 35 01 00 05 47  // .GS17...GS45...G
  3B33: 53 35 31 01 00 4C 04                             // S51..L.

        OperationRegion (GPR, SystemIO, GPBS, 0x0400)

  3B3A: 5B 80 47 50 52 5F 01 47 50 42 53 0B 00 04        // [.GPR_.GPBS...

        Field (GPR, ByteAcc, NoLock, Preserve)
        {
            GU00,   8, 
            GU01,   8, 
            GU02,   8, 
            GU03,   8, 
            GIO0,   8, 
            GIO1,   8, 
            GIO2,   8, 
            GIO3,   8, 
            Offset (0x0C), 
            GL00,   8, 
            GL01,   8, 
            GL02,   8, 
            GP24,   1, 
                ,   2, 
            GP27,   1, 
            GP28,   1, 
            Offset (0x10), 
            Offset (0x18), 
            GB00,   8, 
            GB01,   8, 
            GB02,   8, 
            GB03,   8, 
            Offset (0x2C), 
            GIV0,   8, 
            GIV1,   8, 
            GIV2,   8, 
            GIV3,   8, 
            GU04,   8, 
            GU05,   8, 
            GU06,   8, 
            GU07,   8, 
            GIO4,   8, 
            GIO5,   8, 
            GIO6,   8, 
            GIO7,   8, 
            GL04,   8, 
            GL05,   8, 
            GL06,   8, 
            GL07,   8, 
            Offset (0x40), 
            GU08,   8, 
            GU09,   8, 
            GU0A,   8, 
            GU0B,   8, 
            GIO8,   8, 
            GIO9,   8, 
            GIOA,   8, 
            GIOB,   8, 
            GL08,   8, 
            GL09,   8, 
            GL0A,   8, 
            GL0B,   8
        }


  3B48: 5B 81 4B 0F 47 50 52 5F 01 47 55 30 30 08 47 55  // [.K.GPR_.GU00.GU
  3B58: 30 31 08 47 55 30 32 08 47 55 30 33 08 47 49 4F  // 01.GU02.GU03.GIO
  3B68: 30 08 47 49 4F 31 08 47 49 4F 32 08 47 49 4F 33  // 0.GIO1.GIO2.GIO3
  3B78: 08 00 20 47 4C 30 30 08 47 4C 30 31 08 47 4C 30  // .. GL00.GL01.GL0
  3B88: 32 08 47 50 32 34 01 00 02 47 50 32 37 01 47 50  // 2.GP24...GP27.GP
  3B98: 32 38 01 00 03 00 40 04 47 42 30 30 08 47 42 30  // 28....@.GB00.GB0
  3BA8: 31 08 47 42 30 32 08 47 42 30 33 08 00 40 08 47  // 1.GB02.GB03..@.G
  3BB8: 49 56 30 08 47 49 56 31 08 47 49 56 32 08 47 49  // IV0.GIV1.GIV2.GI
  3BC8: 56 33 08 47 55 30 34 08 47 55 30 35 08 47 55 30  // V3.GU04.GU05.GU0
  3BD8: 36 08 47 55 30 37 08 47 49 4F 34 08 47 49 4F 35  // 6.GU07.GIO4.GIO5
  3BE8: 08 47 49 4F 36 08 47 49 4F 37 08 47 4C 30 34 08  // .GIO6.GIO7.GL04.
  3BF8: 47 4C 30 35 08 47 4C 30 36 08 47 4C 30 37 08 00  // GL05.GL06.GL07..
  3C08: 20 47 55 30 38 08 47 55 30 39 08 47 55 30 41 08  //  GU08.GU09.GU0A.
  3C18: 47 55 30 42 08 47 49 4F 38 08 47 49 4F 39 08 47  // GU0B.GIO8.GIO9.G
  3C28: 49 4F 41 08 47 49 4F 42 08 47 4C 30 38 08 47 4C  // IOA.GIOB.GL08.GL
  3C38: 30 39 08 47 4C 30 41 08 47 4C 30 42 08           // 09.GL0A.GL0B.

        OperationRegion (GPRL, SystemIO, GPBS, 0x40)

  3C45: 5B 80 47 50 52 4C 01 47 50 42 53 0A 40           // [.GPRL.GPBS.@

        Field (GPRL, ByteAcc, NoLock, Preserve)
        {
            Offset (0x01), 
            GO08,   1, 
            GO09,   1, 
                ,   3, 
            GO13,   1, 
            GO14,   1, 
                ,   2, 
            GO17,   1, 
                ,   27, 
            GO45,   1, 
                ,   5, 
            GO51,   1, 
            Offset (0x10), 
            Offset (0x30), 
            GR00,   32, 
            GR01,   32, 
            GR02,   32
        }


  3C52: 5B 81 49 04 47 50 52 4C 01 00 08 47 4F 30 38 01  // [.I.GPRL...GO08.
  3C62: 47 4F 30 39 01 00 03 47 4F 31 33 01 47 4F 31 34  // GO09...GO13.GO14
  3C72: 01 00 02 47 4F 31 37 01 00 1B 47 4F 34 35 01 00  // ...GO17...GO45..
  3C82: 05 47 4F 35 31 01 00 4C 04 00 40 10 47 52 30 30  // .GO51..L..@.GR00
  3C92: 20 47 52 30 31 20 47 52 30 32 20                 //  GR01 GR02 

        OperationRegion (RCRB, SystemMemory, SRCB, 0x4000)

  3C9D: 5B 80 52 43 52 42 00 53 52 43 42 0B 00 40        // [.RCRB.SRCB..@

        Field (RCRB, DWordAcc, Lock, Preserve)
        {
            Offset (0x1000), 
            Offset (0x2330), 
            AFEA,   32, 
            AFED,   32, 
            AFES,   16, 
            AFER,   16, 
            Offset (0x3000), 
            Offset (0x331C), 
            Offset (0x331F), 
            PMFS,   1, 
            Offset (0x3320), 
            CKEN,   32, 
            Offset (0x3404), 
            HPAS,   2, 
                ,   5, 
            HPAE,   1, 
            Offset (0x3418), 
                ,   1, 
            ADSD,   1, 
            SATD,   1, 
            SMBD,   1, 
            HDAD,   1, 
            Offset (0x341A), 
            RP1D,   1, 
            RP2D,   1, 
            RP3D,   1, 
            RP4D,   1, 
            RP5D,   1, 
            RP6D,   1, 
            RP7D,   1, 
            RP8D,   1, 
            Offset (0x359C), 
            UP0D,   1, 
            UP1D,   1, 
            UP2D,   1, 
            UP3D,   1, 
            UP4D,   1, 
            UP5D,   1, 
            UP6D,   1, 
            UP7D,   1, 
            UP8D,   1, 
            UP9D,   1, 
            UPAD,   1, 
            UPBD,   1, 
            UPCD,   1, 
            UPDD,   1, 
                ,   1, 
            Offset (0x359E)
        }


  3CAB: 5B 81 48 0D 52 43 52 42 13 00 80 00 08 00 80 98  // [.H.RCRB........
  3CBB: 09 41 46 45 41 20 41 46 45 44 20 41 46 45 53 10  // .AFEA AFED AFES.
  3CCB: 41 46 45 52 10 00 80 62 06 00 80 8E 01 00 18 50  // AFER...b.......P
  3CDB: 4D 46 53 01 00 07 43 4B 45 4E 20 00 40 70 48 50  // MFS...CKEN .@pHP
  3CEB: 41 53 02 00 05 48 50 41 45 01 00 48 09 00 01 41  // AS...HPAE..H...A
  3CFB: 44 53 44 01 53 41 54 44 01 53 4D 42 44 01 48 44  // DSD.SATD.SMBD.HD
  3D0B: 41 44 01 00 0B 52 50 31 44 01 52 50 32 44 01 52  // AD...RP1D.RP2D.R
  3D1B: 50 33 44 01 52 50 34 44 01 52 50 35 44 01 52 50  // P3D.RP4D.RP5D.RP
  3D2B: 36 44 01 52 50 37 44 01 52 50 38 44 01 00 48 C0  // 6D.RP7D.RP8D..H.
  3D3B: 55 50 30 44 01 55 50 31 44 01 55 50 32 44 01 55  // UP0D.UP1D.UP2D.U
  3D4B: 50 33 44 01 55 50 34 44 01 55 50 35 44 01 55 50  // P3D.UP4D.UP5D.UP
  3D5B: 36 44 01 55 50 37 44 01 55 50 38 44 01 55 50 39  // 6D.UP7D.UP8D.UP9
  3D6B: 44 01 55 50 41 44 01 55 50 42 44 01 55 50 43 44  // D.UPAD.UPBD.UPCD
  3D7B: 01 55 50 44 44 01 00 01 00 01                    // .UPDD.....

        OperationRegion (IO_P, SystemIO, 0x1000, 0x04)

  3D85: 5B 80 49 4F 5F 50 01 0B 00 10 0A 04              // [.IO_P......

        Field (IO_P, ByteAcc, NoLock, Preserve)
        {
            TRPF,   8
        }
    }


  3D91: 5B 81 0B 49 4F 5F 50 01 54 52 50 46 08           // [..IO_P.TRPF.

    Scope (_SB)
    {

  3D9E: 10 42 2B 5F 53 42 5F                             // .B+_SB_

        Method (RDGI, 1, Serialized)
        {

  3DA5: 14 3F 52 44 47 49 09                             // .?RDGI.

            If (
  3DAC: A0 36 92                                         // .6.

LLessEqual (Arg0, 0x5E))
            {
                Store (Add (Add (GPBS, 0x0100), Multiply (Arg0, 0x08)), Local0)

  3DAF: 94 68 0A 5E 70 72 72 47 50 42 53 0B 00 01 00 77  // .h.^prrGPBS....w
  3DBF: 68 0A 08 00 00 60                                // h....`

                OperationRegion (LGPI, SystemIO, Local0, 0x04)

  3DC5: 5B 80 4C 47 50 49 01 60 0A 04                    // [.LGPI.`..

                Field (LGPI, AnyAcc, NoLock, Preserve)
                {
                        ,   30, 
                    TEMP,   1
                }


  3DCF: 5B 81 0D 4C 47 50 49 00 00 1E 54 45 4D 50 01     // [..LGPI...TEMP.

                Return (TEMP)
            }


  3DDE: A4 54 45 4D 50                                   // .TEMP

            Return (Zero)
        }


  3DE3: A4 00                                            // ..

        Method (RDGP, 1, Serialized)
        {

  3DE5: 14 3F 52 44 47 50 09                             // .?RDGP.

            If (
  3DEC: A0 36 92                                         // .6.

LLessEqual (Arg0, 0x5E))
            {
                Store (Add (Add (GPBS, 0x0100), Multiply (Arg0, 0x08)), Local0)

  3DEF: 94 68 0A 5E 70 72 72 47 50 42 53 0B 00 01 00 77  // .h.^prrGPBS....w
  3DFF: 68 0A 08 00 00 60                                // h....`

                OperationRegion (LGPI, SystemIO, Local0, 0x04)

  3E05: 5B 80 4C 47 50 49 01 60 0A 04                    // [.LGPI.`..

                Field (LGPI, AnyAcc, NoLock, Preserve)
                {
                        ,   31, 
                    TEMP,   1
                }


  3E0F: 5B 81 0D 4C 47 50 49 00 00 1F 54 45 4D 50 01     // [..LGPI...TEMP.

                Return (TEMP)
            }


  3E1E: A4 54 45 4D 50                                   // .TEMP

            Return (Zero)
        }


  3E23: A4 00                                            // ..

        Method (WTGP, 2, Serialized)
        {

  3E25: 14 3E 57 54 47 50 0A                             // .>WTGP.

            If (
  3E2C: A0 37 92                                         // .7.

LLessEqual (Arg0, 0x5E))
            {
                Store (Add (Add (GPBS, 0x0100), Multiply (Arg0, 0x08)), Local0)

  3E2F: 94 68 0A 5E 70 72 72 47 50 42 53 0B 00 01 00 77  // .h.^prrGPBS....w
  3E3F: 68 0A 08 00 00 60                                // h....`

                OperationRegion (LGPI, SystemIO, Local0, 0x04)

  3E45: 5B 80 4C 47 50 49 01 60 0A 04                    // [.LGPI.`..

                Field (LGPI, AnyAcc, NoLock, Preserve)
                {
                        ,   31, 
                    TEMP,   1
                }


  3E4F: 5B 81 0D 4C 47 50 49 00 00 1F 54 45 4D 50 01     // [..LGPI...TEMP.

                Store (Arg1, TEMP)
            }
        }


  3E5E: 70 69 54 45 4D 50                                // piTEMP

        Method (WTIN, 2, Serialized)
        {

  3E64: 14 3E 57 54 49 4E 0A                             // .>WTIN.

            If (
  3E6B: A0 37 92                                         // .7.

LLessEqual (Arg0, 0x5E))
            {
                Store (Add (Add (GPBS, 0x0100), Multiply (Arg0, 0x08)), Local0)

  3E6E: 94 68 0A 5E 70 72 72 47 50 42 53 0B 00 01 00 77  // .h.^prrGPBS....w
  3E7E: 68 0A 08 00 00 60                                // h....`

                OperationRegion (LGPI, SystemIO, Local0, 0x04)

  3E84: 5B 80 4C 47 50 49 01 60 0A 04                    // [.LGPI.`..

                Field (LGPI, ByteAcc, NoLock, Preserve)
                {
                        ,   3, 
                    TEMP,   1
                }


  3E8E: 5B 81 0D 4C 47 50 49 01 00 03 54 45 4D 50 01     // [..LGPI...TEMP.

                Store (Arg1, TEMP)
            }
        }


  3E9D: 70 69 54 45 4D 50                                // piTEMP

        Method (WPGP, 2, Serialized)
        {

  3EA3: 14 3C 57 50 47 50 0A                             // .<WPGP.

            If (
  3EAA: A0 35 92                                         // .5.

LLessEqual (Arg0, 0x5E))
            {
                Store (Add (Add (GPBS, 0x0104), Multiply (Arg0, 0x08)), Local0)

  3EAD: 94 68 0A 5E 70 72 72 47 50 42 53 0B 04 01 00 77  // .h.^prrGPBS....w
  3EBD: 68 0A 08 00 00 60                                // h....`

                OperationRegion (LGPI, SystemIO, Local0, 0x04)

  3EC3: 5B 80 4C 47 50 49 01 60 0A 04                    // [.LGPI.`..

                Field (LGPI, AnyAcc, NoLock, Preserve)
                {
                    TEMP,   2
                }


  3ECD: 5B 81 0B 4C 47 50 49 00 54 45 4D 50 02           // [..LGPI.TEMP.

                Store (Arg1, TEMP)
            }
        }


  3EDA: 70 69 54 45 4D 50                                // piTEMP

        Method (GP2N, 2, Serialized)
        {

  3EE0: 14 3C 47 50 32 4E 0A                             // .<GP2N.

            If (
  3EE7: A0 35 92                                         // .5.

LLessEqual (Arg0, 0x5E))
            {
                Store (Add (Add (GPBS, 0x0100), Multiply (Arg0, 0x08)), Local0)

  3EEA: 94 68 0A 5E 70 72 72 47 50 42 53 0B 00 01 00 77  // .h.^prrGPBS....w
  3EFA: 68 0A 08 00 00 60                                // h....`

                OperationRegion (LGPI, SystemIO, Local0, 0x04)

  3F00: 5B 80 4C 47 50 49 01 60 0A 04                    // [.LGPI.`..

                Field (LGPI, AnyAcc, NoLock, Preserve)
                {
                    TEMP,   1
                }


  3F0A: 5B 81 0B 4C 47 50 49 00 54 45 4D 50 01           // [..LGPI.TEMP.

                Store (Arg1, TEMP)
            }
        }


  3F17: 70 69 54 45 4D 50                                // piTEMP

        Method (GP2A, 2, Serialized)
        {

  3F1D: 14 40 0C 47 50 32 41 0A                          // .@.GP2A.

            If (
  3F25: A0 48 0B 92                                      // .H..

LLessEqual (Arg0, 0x5E))
            {
                Store (Add (Add (GPBS, 0x0104), Multiply (Arg0, 0x08)), Local0)

  3F29: 94 68 0A 5E 70 72 72 47 50 42 53 0B 04 01 00 77  // .h.^prrGPBS....w
  3F39: 68 0A 08 00 00 60                                // h....`

                OperationRegion (LGP2, SystemIO, Local0, 0x04)

  3F3F: 5B 80 4C 47 50 32 01 60 0A 04                    // [.LGP2.`..

                Field (LGP2, AnyAcc, NoLock, Preserve)
                {
                    GPWP,   2, 
                    GPIS,   1
                }


  3F49: 5B 81 10 4C 47 50 32 00 47 50 57 50 02 47 50 49  // [..LGP2.GPWP.GPI
  3F59: 53 01                                            // S.

                If (LEqual (Arg1, One))
                {
                    Store (Zero, GPIS)

  3F5B: A0 10 93 69 01 70 00 47 50 49 53                 // ...i.p.GPIS

                    Store (Zero, GPWP)
                }

  3F66: 70 00 47 50 57 50                                // p.GPWP

                Else
                {
                    Store (0x02, GPWP)

  3F6C: A1 0E 70 0A 02 47 50 57 50                       // ..p..GPWP

                    Store (One, GPIS)
                }

                Store (Add (GPBS, 0x10), Local0)

  3F75: 70 01 47 50 49 53 70 72 47 50 42 53 0A 10 00 60  // p.GPISprGPBS...`

                OperationRegion (LGPI, SystemIO, Local0, 0x02)

  3F85: 5B 80 4C 47 50 49 01 60 0A 02                    // [.LGPI.`..

                Field (LGPI, AnyAcc, NoLock, Preserve)
                {
                    TEMP,   16
                }


  3F8F: 5B 81 0B 4C 47 50 49 00 54 45 4D 50 10           // [..LGPI.TEMP.

                If (
  3F9C: A0 0B 92                                         // ...

LGreaterEqual (Arg0, 0x2D))
                {

  3F9F: 95 68 0A 2D                                      // .h.-

                    Subtract (Arg0, 0x28, Local1)
                }

  3FA3: 74 68 0A 28 61                                   // th.(a

                ElseIf
  3FA8: A1 14                                            // ..

 (
  3FAA: A0 0B 92                                         // ...

LLessEqual (Arg0, 0x0A))
                {

  3FAD: 94 68 0A 0A                                      // .h..

                    Subtract (Arg0, 0x08, Local1)
                }

  3FB1: 74 68 0A 08 61                                   // th..a

                Else
                {

  3FB6: A1 06                                            // ..

                    Subtract (Arg0, 0x0A, Local1)
                }

                Store (ShiftLeft (One, Local1), Local2)

  3FB8: 74 68 0A 0A 61 70 79 01 61 00 62                 // th..apy.a.b

                If (Arg1)
                {

  3FC3: A0 0C 69                                         // ..i

                    Or (TEMP, Local2, TEMP)
                }

  3FC6: 7D 54 45 4D 50 62 54 45 4D 50                    // }TEMPbTEMP

                Else
                {

  3FD0: A1 0D                                            // ..

                    And (TEMP, Not (Local2), TEMP)
                }
            }
        }


  3FD2: 7B 54 45 4D 50 80 62 00 54 45 4D 50              // {TEMP.b.TEMP

        Method (GP2B, 2, Serialized)
        {

  3FDE: 14 42 07 47 50 32 42 0A                          // .B.GP2B.

            If (
  3FE6: A0 4A 06 92                                      // .J..

LLessEqual (Arg0, 0x5E))
            {
                Store (Add (GPBS, 0x10), Local0)

  3FEA: 94 68 0A 5E 70 72 47 50 42 53 0A 10 00 60        // .h.^prGPBS...`

                OperationRegion (LGPI, SystemIO, Local0, 0x02)

  3FF8: 5B 80 4C 47 50 49 01 60 0A 02                    // [.LGPI.`..

                Field (LGPI, AnyAcc, NoLock, Preserve)
                {
                    TEMP,   16
                }


  4002: 5B 81 0B 4C 47 50 49 00 54 45 4D 50 10           // [..LGPI.TEMP.

                If (
  400F: A0 0B 92                                         // ...

LGreaterEqual (Arg0, 0x2D))
                {

  4012: 95 68 0A 2D                                      // .h.-

                    Subtract (Arg0, 0x28, Local1)
                }

  4016: 74 68 0A 28 61                                   // th.(a

                ElseIf
  401B: A1 14                                            // ..

 (
  401D: A0 0B 92                                         // ...

LLessEqual (Arg0, 0x0A))
                {

  4020: 94 68 0A 0A                                      // .h..

                    Subtract (Arg0, 0x08, Local1)
                }

  4024: 74 68 0A 08 61                                   // th..a

                Else
                {

  4029: A1 06                                            // ..

                    Subtract (Arg0, 0x0A, Local1)
                }

                Store (ShiftLeft (One, Local1), Local2)

  402B: 74 68 0A 0A 61 70 79 01 61 00 62                 // th..apy.a.b

                If (Arg1)
                {

  4036: A0 0C 69                                         // ..i

                    Or (TEMP, Local2, TEMP)
                }

  4039: 7D 54 45 4D 50 62 54 45 4D 50                    // }TEMPbTEMP

                Else
                {

  4043: A1 0D                                            // ..

                    And (TEMP, Not (Local2), TEMP)
                }
            }
        }
    }


  4045: 7B 54 45 4D 50 80 62 00 54 45 4D 50              // {TEMP.b.TEMP

    Scope (_SB.PCI0)
    {

  4051: 10 87 1B 05 2E 5F 53 42 5F 50 43 49 30           // ....._SB_PCI0

        Name (LTRE, Zero)

  405E: 08 4C 54 52 45 00                                // .LTRE.

        Name (OBFF, Zero)

  4064: 08 4F 42 46 46 00                                // .OBFF.

        Name (LMSL, Zero)

  406A: 08 4C 4D 53 4C 00                                // .LMSL.

        Name (LNSL, Zero)

  4070: 08 4C 4E 53 4C 00                                // .LNSL.

        Device (GLAN)
        {

  4076: 5B 82 1F 47 4C 41 4E                             // [..GLAN

            Name (_ADR, 0x00190000)  // _ADR: Address

  407D: 08 5F 41 44 52 0C 00 00 19 00                    // ._ADR.....

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

  4087: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x0D, 0x04))
            }
        }


  408E: A4 47 50 52 57 0A 0D 0A 04                       // .GPRW....

        Device (EHC1)
        {

  4097: 5B 82 48 3E 45 48 43 31                          // [.H>EHC1

            Name (_ADR, 0x001D0000)  // _ADR: Address

  409F: 08 5F 41 44 52 0C 00 00 1D 00                    // ._ADR.....

            OperationRegion (PWKE, PCI_Config, 0x54, 0x12)

  40A9: 5B 80 50 57 4B 45 02 0A 54 0A 12                 // [.PWKE..T..

            Field (PWKE, DWordAcc, NoLock, Preserve)
            {
                Offset (0x01), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1, 
                Offset (0x0E), 
                    ,   1, 
                PWUC,   8
            }


  40B4: 5B 81 1E 50 57 4B 45 03 00 08 50 4D 45 45 01 00  // [..PWKE...PMEE..
  40C4: 06 50 4D 45 53 01 00 40 06 00 01 50 57 55 43 08  // .PMES..@...PWUC.

            Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
            {

  40D4: 14 17 5F 50 53 57 01                             // .._PSW.

                If (Arg0)
                {

  40DB: A0 08 68                                         // ..h

                    Store (Ones, PWUC)
                }

  40DE: 70 FF 50 57 55 43                                // p.PWUC

                Else
                {

  40E4: A1 07                                            // ..

                    Store (Zero, PWUC)
                }
            }


  40E6: 70 00 50 57 55 43                                // p.PWUC

            Method (_S3D, 0, NotSerialized)  // _S3D: S3 Device State
            {

  40EC: 14 09 5F 53 33 44 00                             // .._S3D.

                Return (0x02)
            }


  40F3: A4 0A 02                                         // ...

            Method (_S4D, 0, NotSerialized)  // _S4D: S4 Device State
            {

  40F6: 14 09 5F 53 34 44 00                             // .._S4D.

                Return (0x02)
            }


  40FD: A4 0A 02                                         // ...

            Device (HUBN)
            {

  4100: 5B 82 4F 36 48 55 42 4E                          // [.O6HUBN

                Name (_ADR, Zero)  // _ADR: Address

  4108: 08 5F 41 44 52 00                                // ._ADR.

                Device (PR01)
                {

  410E: 5B 82 41 36 50 52 30 31                          // [.A6PR01

                    Name (_ADR, One)  // _ADR: Address

  4116: 08 5F 41 44 52 01                                // ._ADR.

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  411C: 14 18 5F 55 50 43 08                             // .._UPC.

                        Name (UPCA, 
  4123: 08 55 50 43 41                                   // .UPCA

Package (0x04)
                        {
                            0xFF, 
                            Zero, 
                            Zero, 
                            Zero
                        })

  4128: 12 07 04 0A FF 00 00 00                          // ........

                        Return (UPCA)
                    }


  4130: A4 55 50 43 41                                   // .UPCA

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  4135: 14 27 5F 50 4C 44 08                             // .'_PLD.

                        Name (PLDP, 
  413C: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  4141: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x30, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  4144: 11 13 0A 10 81 00 00 00 00 00 00 00 30 1C 00 00  // ............0...
  4154: 00 00 00 00                                      // ....

                        Return (PLDP)
                    }


  4158: A4 50 4C 44 50                                   // .PLDP

                    Device (PR11)
                    {

  415D: 5B 82 4E 04 50 52 31 31                          // [.N.PR11

                        Name (_ADR, One)  // _ADR: Address

  4165: 08 5F 41 44 52 01                                // ._ADR.

                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {

  416B: 14 19 5F 55 50 43 08                             // .._UPC.

                            Name (UPCP, 
  4172: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                            {
                                0xFF, 
                                0xFF, 
                                Zero, 
                                Zero
                            })

  4177: 12 08 04 0A FF 0A FF 00 00                       // .........

                            Return (UPCP)
                        }


  4180: A4 55 50 43 50                                   // .UPCP

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {

  4185: 14 27 5F 50 4C 44 08                             // .'_PLD.

                            Name (PLDP, 
  418C: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                            {

  4191: 12 16 01                                         // ...

                                Buffer (0x10)
                                {
                                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    /* 0008 */  0xE1, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                }
                            })

  4194: 11 13 0A 10 81 00 00 00 00 00 00 00 E1 1C 00 00  // ................
  41A4: 00 00 00 00                                      // ....

                            Return (PLDP)
                        }
                    }


  41A8: A4 50 4C 44 50                                   // .PLDP

                    Device (PR12)
                    {

  41AD: 5B 82 4F 04 50 52 31 32                          // [.O.PR12

                        Name (_ADR, 0x02)  // _ADR: Address

  41B5: 08 5F 41 44 52 0A 02                             // ._ADR..

                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {

  41BC: 14 19 5F 55 50 43 08                             // .._UPC.

                            Name (UPCP, 
  41C3: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                            {
                                0xFF, 
                                0xFF, 
                                Zero, 
                                Zero
                            })

  41C8: 12 08 04 0A FF 0A FF 00 00                       // .........

                            Return (UPCP)
                        }


  41D1: A4 55 50 43 50                                   // .UPCP

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {

  41D6: 14 27 5F 50 4C 44 08                             // .'_PLD.

                            Name (PLDP, 
  41DD: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                            {

  41E2: 12 16 01                                         // ...

                                Buffer (0x10)
                                {
                                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    /* 0008 */  0xE1, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                }
                            })

  41E5: 11 13 0A 10 81 00 00 00 00 00 00 00 E1 1D 00 00  // ................
  41F5: 00 00 00 00                                      // ....

                            Return (PLDP)
                        }
                    }


  41F9: A4 50 4C 44 50                                   // .PLDP

                    Device (PR13)
                    {

  41FE: 5B 82 47 07 50 52 31 33                          // [.G.PR13

                        Name (_ADR, 0x03)  // _ADR: Address

  4206: 08 5F 41 44 52 0A 03                             // ._ADR..

                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {

  420D: 14 19 5F 55 50 43 08                             // .._UPC.

                            Name (UPCP, 
  4214: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                            {
                                0xFF, 
                                0xFF, 
                                Zero, 
                                Zero
                            })

  4219: 12 08 04 0A FF 0A FF 00 00                       // .........

                            Return (UPCP)
                        }


  4222: A4 55 50 43 50                                   // .UPCP

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {

  4227: 14 4F 04 5F 50 4C 44 08                          // .O._PLD.

                            If (LEqual (^^^^^LPCB.EC.ECOS, 0x02))
                            {

  422F: A0 2F 93 5E 5E 5E 5E 5E 2F 03 4C 50 43 42 45 43  // ./.^^^^^/.LPCBEC
  423F: 5F 5F 45 43 4F 53 0A 02                          // __ECOS..

                                Return (
  4247: A4                                               // .

Package (0x01)
                                {

  4248: 12 16 01                                         // ...

                                    Buffer (0x10)
                                    {
                                        /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                        /* 0008 */  0xE1, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                    }
                                })
                            }


  424B: 11 13 0A 10 81 00 00 00 00 00 00 00 E1 1D 00 00  // ................
  425B: 00 00 00 00                                      // ....

                            Return (
  425F: A4                                               // .

Package (0x01)
                            {

  4260: 12 16 01                                         // ...

                                Buffer (0x10)
                                {
                                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    /* 0008 */  0xE1, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                }
                            })
                        }
                    }


  4263: 11 13 0A 10 81 00 00 00 00 00 00 00 E1 1D 00 00  // ................
  4273: 00 00 00 00                                      // ....

                    Device (PR14)
                    {

  4277: 5B 82 47 07 50 52 31 34                          // [.G.PR14

                        Name (_ADR, 0x04)  // _ADR: Address

  427F: 08 5F 41 44 52 0A 04                             // ._ADR..

                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {

  4286: 14 19 5F 55 50 43 08                             // .._UPC.

                            Name (UPCP, 
  428D: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                            {
                                0xFF, 
                                0xFF, 
                                Zero, 
                                Zero
                            })

  4292: 12 08 04 0A FF 0A FF 00 00                       // .........

                            Return (UPCP)
                        }


  429B: A4 55 50 43 50                                   // .UPCP

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {

  42A0: 14 4F 04 5F 50 4C 44 08                          // .O._PLD.

                            If (LEqual (^^^^^LPCB.EC.ECOS, 0x02))
                            {

  42A8: A0 2F 93 5E 5E 5E 5E 5E 2F 03 4C 50 43 42 45 43  // ./.^^^^^/.LPCBEC
  42B8: 5F 5F 45 43 4F 53 0A 02                          // __ECOS..

                                Return (
  42C0: A4                                               // .

Package (0x01)
                                {

  42C1: 12 16 01                                         // ...

                                    Buffer (0x10)
                                    {
                                        /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                        /* 0008 */  0xE0, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                    }
                                })
                            }


  42C4: 11 13 0A 10 81 00 00 00 00 00 00 00 E0 1E 00 00  // ................
  42D4: 00 00 00 00                                      // ....

                            Return (
  42D8: A4                                               // .

Package (0x01)
                            {

  42D9: 12 16 01                                         // ...

                                Buffer (0x10)
                                {
                                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    /* 0008 */  0xE1, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                }
                            })
                        }
                    }


  42DC: 11 13 0A 10 81 00 00 00 00 00 00 00 E1 1E 00 00  // ................
  42EC: 00 00 00 00                                      // ....

                    Device (PR15)
                    {

  42F0: 5B 82 4F 04 50 52 31 35                          // [.O.PR15

                        Name (_ADR, 0x05)  // _ADR: Address

  42F8: 08 5F 41 44 52 0A 05                             // ._ADR..

                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {

  42FF: 14 19 5F 55 50 43 08                             // .._UPC.

                            Name (UPCP, 
  4306: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                            {
                                0xFF, 
                                0xFF, 
                                Zero, 
                                Zero
                            })

  430B: 12 08 04 0A FF 0A FF 00 00                       // .........

                            Return (UPCP)
                        }


  4314: A4 55 50 43 50                                   // .UPCP

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {

  4319: 14 27 5F 50 4C 44 08                             // .'_PLD.

                            Name (PLDP, 
  4320: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                            {

  4325: 12 16 01                                         // ...

                                Buffer (0x10)
                                {
                                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    /* 0008 */  0xB1, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                }
                            })

  4328: 11 13 0A 10 81 00 00 00 00 00 00 00 B1 1E 00 00  // ................
  4338: 00 00 00 00                                      // ....

                            Return (PLDP)
                        }
                    }


  433C: A4 50 4C 44 50                                   // .PLDP

                    Device (PR16)
                    {

  4341: 5B 82 47 07 50 52 31 36                          // [.G.PR16

                        Name (_ADR, 0x06)  // _ADR: Address

  4349: 08 5F 41 44 52 0A 06                             // ._ADR..

                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {

  4350: 14 19 5F 55 50 43 08                             // .._UPC.

                            Name (UPCP, 
  4357: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                            {
                                0xFF, 
                                0xFF, 
                                Zero, 
                                Zero
                            })

  435C: 12 08 04 0A FF 0A FF 00 00                       // .........

                            Return (UPCP)
                        }


  4365: A4 55 50 43 50                                   // .UPCP

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {

  436A: 14 4F 04 5F 50 4C 44 08                          // .O._PLD.

                            If (LEqual (^^^^^LPCB.EC.ECOS, 0x02))
                            {

  4372: A0 2F 93 5E 5E 5E 5E 5E 2F 03 4C 50 43 42 45 43  // ./.^^^^^/.LPCBEC
  4382: 5F 5F 45 43 4F 53 0A 02                          // __ECOS..

                                Return (
  438A: A4                                               // .

Package (0x01)
                                {

  438B: 12 16 01                                         // ...

                                    Buffer (0x10)
                                    {
                                        /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                        /* 0008 */  0xB0, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                    }
                                })
                            }


  438E: 11 13 0A 10 81 00 00 00 00 00 00 00 B0 1E 00 00  // ................
  439E: 00 00 00 00                                      // ....

                            Return (
  43A2: A4                                               // .

Package (0x01)
                            {

  43A3: 12 16 01                                         // ...

                                Buffer (0x10)
                                {
                                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    /* 0008 */  0xB1, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                }
                            })
                        }
                    }


  43A6: 11 13 0A 10 81 00 00 00 00 00 00 00 B1 1E 00 00  // ................
  43B6: 00 00 00 00                                      // ....

                    Device (PR17)
                    {

  43BA: 5B 82 4F 04 50 52 31 37                          // [.O.PR17

                        Name (_ADR, 0x07)  // _ADR: Address

  43C2: 08 5F 41 44 52 0A 07                             // ._ADR..

                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {

  43C9: 14 19 5F 55 50 43 08                             // .._UPC.

                            Name (UPCP, 
  43D0: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                            {
                                0xFF, 
                                0xFF, 
                                Zero, 
                                Zero
                            })

  43D5: 12 08 04 0A FF 0A FF 00 00                       // .........

                            Return (UPCP)
                        }


  43DE: A4 55 50 43 50                                   // .UPCP

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {

  43E3: 14 27 5F 50 4C 44 08                             // .'_PLD.

                            Name (PLDP, 
  43EA: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                            {

  43EF: 12 16 01                                         // ...

                                Buffer (0x10)
                                {
                                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    /* 0008 */  0xB1, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                }
                            })

  43F2: 11 13 0A 10 81 00 00 00 00 00 00 00 B1 1E 00 00  // ................
  4402: 00 00 00 00                                      // ....

                            Return (PLDP)
                        }
                    }


  4406: A4 50 4C 44 50                                   // .PLDP

                    Device (PR18)
                    {

  440B: 5B 82 44 06 50 52 31 38                          // [.D.PR18

                        Name (_ADR, 0x08)  // _ADR: Address

  4413: 08 5F 41 44 52 0A 08                             // ._ADR..

                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {

  441A: 14 19 5F 55 50 43 08                             // .._UPC.

                            Name (UPCP, 
  4421: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                            {
                                0xFF, 
                                0xFF, 
                                Zero, 
                                Zero
                            })

  4426: 12 08 04 0A FF 0A FF 00 00                       // .........

                            Return (UPCP)
                        }


  442F: A4 55 50 43 50                                   // .UPCP

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {

  4434: 14 3C 5F 50 4C 44 08                             // .<_PLD.

                            Name (PLDP, 
  443B: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                            {

  4440: 12 16 01                                         // ...

                                Buffer (0x10)
                                {
                                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    /* 0008 */  0xB1, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                }
                            })

  4443: 11 13 0A 10 81 00 00 00 00 00 00 00 B1 1E 00 00  // ................
  4453: 00 00 00 00                                      // ....

                            CreateBitField (DerefOf (
  4457: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)
                            Store (Zero, VIS)

  4459: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F 70 00 56  // .PLDP...@VIS_p.V
  4469: 49 53 5F                                         // IS_

                            Return (PLDP)
                        }
                    }
                }
            }


  446C: A4 50 4C 44 50                                   // .PLDP

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

  4471: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x0D, 0x03))
            }
        }


  4478: A4 47 50 52 57 0A 0D 0A 03                       // .GPRW....

        Device (EHC2)
        {

  4481: 5B 82 45 32 45 48 43 32                          // [.E2EHC2

            Name (_ADR, 0x001A0000)  // _ADR: Address

  4489: 08 5F 41 44 52 0C 00 00 1A 00                    // ._ADR.....

            OperationRegion (PWKE, PCI_Config, 0x54, 0x12)

  4493: 5B 80 50 57 4B 45 02 0A 54 0A 12                 // [.PWKE..T..

            Field (PWKE, DWordAcc, NoLock, Preserve)
            {
                Offset (0x01), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1, 
                Offset (0x0E), 
                    ,   1, 
                PWUC,   6
            }


  449E: 5B 81 1E 50 57 4B 45 03 00 08 50 4D 45 45 01 00  // [..PWKE...PMEE..
  44AE: 06 50 4D 45 53 01 00 40 06 00 01 50 57 55 43 06  // .PMES..@...PWUC.

            Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
            {

  44BE: 14 17 5F 50 53 57 01                             // .._PSW.

                If (Arg0)
                {

  44C5: A0 08 68                                         // ..h

                    Store (Ones, PWUC)
                }

  44C8: 70 FF 50 57 55 43                                // p.PWUC

                Else
                {

  44CE: A1 07                                            // ..

                    Store (Zero, PWUC)
                }
            }


  44D0: 70 00 50 57 55 43                                // p.PWUC

            Method (_S3D, 0, NotSerialized)  // _S3D: S3 Device State
            {

  44D6: 14 09 5F 53 33 44 00                             // .._S3D.

                Return (0x02)
            }


  44DD: A4 0A 02                                         // ...

            Method (_S4D, 0, NotSerialized)  // _S4D: S4 Device State
            {

  44E0: 14 09 5F 53 34 44 00                             // .._S4D.

                Return (0x02)
            }


  44E7: A4 0A 02                                         // ...

            Device (HUBN)
            {

  44EA: 5B 82 4C 2A 48 55 42 4E                          // [.L*HUBN

                Name (_ADR, Zero)  // _ADR: Address

  44F2: 08 5F 41 44 52 00                                // ._ADR.

                Device (PR01)
                {

  44F8: 5B 82 4E 29 50 52 30 31                          // [.N)PR01

                    Name (_ADR, One)  // _ADR: Address

  4500: 08 5F 41 44 52 01                                // ._ADR.

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  4506: 14 18 5F 55 50 43 08                             // .._UPC.

                        Name (UPCA, 
  450D: 08 55 50 43 41                                   // .UPCA

Package (0x04)
                        {
                            0xFF, 
                            Zero, 
                            Zero, 
                            Zero
                        })

  4512: 12 07 04 0A FF 00 00 00                          // ........

                        Return (UPCA)
                    }


  451A: A4 55 50 43 41                                   // .UPCA

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  451F: 14 27 5F 50 4C 44 08                             // .'_PLD.

                        Name (PLDP, 
  4526: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  452B: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x30, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  452E: 11 13 0A 10 81 00 00 00 00 00 00 00 30 1C 00 00  // ............0...
  453E: 00 00 00 00                                      // ....

                        Return (PLDP)
                    }


  4542: A4 50 4C 44 50                                   // .PLDP

                    Device (PR11)
                    {

  4547: 5B 82 4E 04 50 52 31 31                          // [.N.PR11

                        Name (_ADR, One)  // _ADR: Address

  454F: 08 5F 41 44 52 01                                // ._ADR.

                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {

  4555: 14 19 5F 55 50 43 08                             // .._UPC.

                            Name (UPCP, 
  455C: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                            {
                                0xFF, 
                                0xFF, 
                                Zero, 
                                Zero
                            })

  4561: 12 08 04 0A FF 0A FF 00 00                       // .........

                            Return (UPCP)
                        }


  456A: A4 55 50 43 50                                   // .UPCP

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {

  456F: 14 27 5F 50 4C 44 08                             // .'_PLD.

                            Name (PLDP, 
  4576: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                            {

  457B: 12 16 01                                         // ...

                                Buffer (0x10)
                                {
                                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    /* 0008 */  0xE1, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                }
                            })

  457E: 11 13 0A 10 81 00 00 00 00 00 00 00 E1 1C 00 00  // ................
  458E: 00 00 00 00                                      // ....

                            Return (PLDP)
                        }
                    }


  4592: A4 50 4C 44 50                                   // .PLDP

                    Device (PR12)
                    {

  4597: 5B 82 4F 04 50 52 31 32                          // [.O.PR12

                        Name (_ADR, 0x02)  // _ADR: Address

  459F: 08 5F 41 44 52 0A 02                             // ._ADR..

                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {

  45A6: 14 19 5F 55 50 43 08                             // .._UPC.

                            Name (UPCP, 
  45AD: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                            {
                                0xFF, 
                                0xFF, 
                                Zero, 
                                Zero
                            })

  45B2: 12 08 04 0A FF 0A FF 00 00                       // .........

                            Return (UPCP)
                        }


  45BB: A4 55 50 43 50                                   // .UPCP

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {

  45C0: 14 27 5F 50 4C 44 08                             // .'_PLD.

                            Name (PLDP, 
  45C7: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                            {

  45CC: 12 16 01                                         // ...

                                Buffer (0x10)
                                {
                                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    /* 0008 */  0xE1, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                }
                            })

  45CF: 11 13 0A 10 81 00 00 00 00 00 00 00 E1 1D 00 00  // ................
  45DF: 00 00 00 00                                      // ....

                            Return (PLDP)
                        }
                    }


  45E3: A4 50 4C 44 50                                   // .PLDP

                    Device (PR13)
                    {

  45E8: 5B 82 44 06 50 52 31 33                          // [.D.PR13

                        Name (_ADR, 0x03)  // _ADR: Address

  45F0: 08 5F 41 44 52 0A 03                             // ._ADR..

                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {

  45F7: 14 19 5F 55 50 43 08                             // .._UPC.

                            Name (UPCP, 
  45FE: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                            {
                                0xFF, 
                                0xFF, 
                                Zero, 
                                Zero
                            })

  4603: 12 08 04 0A FF 0A FF 00 00                       // .........

                            Return (UPCP)
                        }


  460C: A4 55 50 43 50                                   // .UPCP

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {

  4611: 14 3C 5F 50 4C 44 08                             // .<_PLD.

                            Name (PLDP, 
  4618: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                            {

  461D: 12 16 01                                         // ...

                                Buffer (0x10)
                                {
                                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    /* 0008 */  0xE1, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                }
                            })

  4620: 11 13 0A 10 81 00 00 00 00 00 00 00 E1 1D 00 00  // ................
  4630: 00 00 00 00                                      // ....

                            CreateBitField (DerefOf (
  4634: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)
                            Store (Zero, VIS)

  4636: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F 70 00 56  // .PLDP...@VIS_p.V
  4646: 49 53 5F                                         // IS_

                            Return (PLDP)
                        }
                    }


  4649: A4 50 4C 44 50                                   // .PLDP

                    Device (PR14)
                    {

  464E: 5B 82 46 0A 50 52 31 34                          // [.F.PR14

                        Name (_ADR, 0x04)  // _ADR: Address

  4656: 08 5F 41 44 52 0A 04                             // ._ADR..

                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {

  465D: 14 19 5F 55 50 43 08                             // .._UPC.

                            Name (UPCP, 
  4664: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                            {
                                0xFF, 
                                0xFF, 
                                Zero, 
                                Zero
                            })

  4669: 12 08 04 0A FF 0A FF 00 00                       // .........

                            Return (UPCP)
                        }


  4672: A4 55 50 43 50                                   // .UPCP

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {

  4677: 14 40 05 5F 50 4C 44 08                          // .@._PLD.

                            Name (PLDP, 
  467F: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                            {

  4684: 12 16 01                                         // ...

                                Buffer (0x10)
                                {
                                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    /* 0008 */  0xE1, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                }
                            })

  4687: 11 13 0A 10 81 00 00 00 00 00 00 00 E1 1E 00 00  // ................
  4697: 00 00 00 00                                      // ....

                            CreateBitField (DerefOf (
  469B: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

  469D: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

                            If (
  46AA: A0 10 92                                         // ...

LGreaterEqual (OSYS, 0x07DC))
                            {

  46AD: 95 4F 53 59 53 0B DC 07                          // .OSYS...

                                Store (Zero, VIS)
                            }

  46B5: 70 00 56 49 53 5F                                // p.VIS_

                            Else
                            {

  46BB: A1 07                                            // ..

                                Store (Zero, VIS)
                            }


  46BD: 70 00 56 49 53 5F                                // p.VIS_

                            Return (PLDP)
                        }


  46C3: A4 50 4C 44 50                                   // .PLDP

                        Device (CAM0)
                        {

  46C8: 5B 82 2C 43 41 4D 30                             // [.,CAM0

                            Name (_ADR, 0x04)  // _ADR: Address

  46CF: 08 5F 41 44 52 0A 04                             // ._ADR..

                            Name (_PLD, 
  46D6: 08 5F 50 4C 44                                   // ._PLD

Package (0x01)  // _PLD: Physical Location of Device
                            {

  46DB: 12 1A 01                                         // ...

                                Buffer (0x14)
                                {
                                    /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    /* 0008 */  0x24, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                         
                                }
                            })
                        }
                    }


  46DE: 11 17 0A 14 82 00 00 00 00 00 00 00 24 1D 00 00  // ............$...
  46EE: 00 00 00 00 FF FF FF FF                          // ........

                    Device (PR15)
                    {

  46F6: 5B 82 4F 04 50 52 31 35                          // [.O.PR15

                        Name (_ADR, 0x05)  // _ADR: Address

  46FE: 08 5F 41 44 52 0A 05                             // ._ADR..

                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {

  4705: 14 19 5F 55 50 43 08                             // .._UPC.

                            Name (UPCP, 
  470C: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                            {
                                0xFF, 
                                0xFF, 
                                Zero, 
                                Zero
                            })

  4711: 12 08 04 0A FF 0A FF 00 00                       // .........

                            Return (UPCP)
                        }


  471A: A4 55 50 43 50                                   // .UPCP

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {

  471F: 14 27 5F 50 4C 44 08                             // .'_PLD.

                            Name (PLDP, 
  4726: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                            {

  472B: 12 16 01                                         // ...

                                Buffer (0x10)
                                {
                                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    /* 0008 */  0xB1, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                }
                            })

  472E: 11 13 0A 10 81 00 00 00 00 00 00 00 B1 1E 00 00  // ................
  473E: 00 00 00 00                                      // ....

                            Return (PLDP)
                        }
                    }


  4742: A4 50 4C 44 50                                   // .PLDP

                    Device (PR16)
                    {

  4747: 5B 82 4F 04 50 52 31 36                          // [.O.PR16

                        Name (_ADR, 0x06)  // _ADR: Address

  474F: 08 5F 41 44 52 0A 06                             // ._ADR..

                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                        {

  4756: 14 19 5F 55 50 43 08                             // .._UPC.

                            Name (UPCP, 
  475D: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                            {
                                0xFF, 
                                0xFF, 
                                Zero, 
                                Zero
                            })

  4762: 12 08 04 0A FF 0A FF 00 00                       // .........

                            Return (UPCP)
                        }


  476B: A4 55 50 43 50                                   // .UPCP

                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                        {

  4770: 14 27 5F 50 4C 44 08                             // .'_PLD.

                            Name (PLDP, 
  4777: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                            {

  477C: 12 16 01                                         // ...

                                Buffer (0x10)
                                {
                                    /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                    /* 0008 */  0xB1, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                                }
                            })

  477F: 11 13 0A 10 81 00 00 00 00 00 00 00 B1 1E 00 00  // ................
  478F: 00 00 00 00                                      // ....

                            Return (PLDP)
                        }
                    }
                }
            }


  4793: A4 50 4C 44 50                                   // .PLDP

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

  4798: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x0D, 0x03))
            }
        }


  479F: A4 47 50 52 57 0A 0D 0A 03                       // .GPRW....

        Device (XHC)
        {

  47A8: 5B 82 8D 54 01 58 48 43 5F                       // [..T.XHC_

            Name (_ADR, 0x00140000)  // _ADR: Address

  47B1: 08 5F 41 44 52 0C 00 00 14 00                    // ._ADR.....

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {

  47BB: 14 1C 5F 44 45 50 00                             // .._DEP.

                If (LEqual (S0ID, One))
                {

  47C2: A0 0F 93 53 30 49 44 01                          // ...S0ID.

                    Return (
  47CA: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }

  47CB: 12 06 01 50 45 50 44                             // ...PEPD

                Else
                {

  47D2: A1 05                                            // ..

                    Return (
  47D4: A4                                               // .

Package (0x00){})
                }
            }


  47D5: 12 02 00                                         // ...

            OperationRegion (XPRT, PCI_Config, Zero, 0x0100)

  47D8: 5B 80 58 50 52 54 02 00 0B 00 01                 // [.XPRT.....

            Field (XPRT, AnyAcc, NoLock, Preserve)
            {
                DVID,   16, 
                Offset (0x74), 
                D0D3,   2, 
                Offset (0x75), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1, 
                Offset (0xB0), 
                    ,   13, 
                MB13,   1, 
                MB14,   1, 
                Offset (0xB4), 
                Offset (0xD0), 
                PR2,    32, 
                PR2M,   32, 
                PR3,    32, 
                PR3M,   32
            }


  47E3: 5B 81 4A 04 58 50 52 54 00 44 56 49 44 10 00 40  // [.J.XPRT.DVID..@
  47F3: 39 44 30 44 33 02 00 06 50 4D 45 45 01 00 06 50  // 9D0D3...PMEE...P
  4803: 4D 45 53 01 00 40 1D 00 0D 4D 42 31 33 01 4D 42  // MES..@...MB13.MB
  4813: 31 34 01 00 11 00 40 0E 50 52 32 5F 20 50 52 32  // 14....@.PR2_ PR2
  4823: 4D 20 50 52 33 5F 20 50 52 33 4D 20              // M PR3_ PR3M 

            OperationRegion (XHCP, SystemMemory, Add (PEBS, 0x000A0000), 0x0100)

  482F: 5B 80 58 48 43 50 00 72 50 45 42 53 0C 00 00 0A  // [.XHCP.rPEBS....
  483F: 00 00 0B 00 01                                   // .....

            Field (XHCP, AnyAcc, Lock, Preserve)
            {
                Offset (0x04), 
                PDBM,   16, 
                Offset (0x10), 
                MEMB,   64
            }


  4844: 5B 81 16 58 48 43 50 10 00 20 50 44 42 4D 10 00  // [..XHCP.. PDBM..
  4854: 40 05 4D 45 4D 42 40 04                          // @.MEMB@.

            Method (PR2S, 1, Serialized)
            {

  485C: 14 4A 19 50 52 32 53 09                          // .J.PR2S.


  4864: 08 5F 54 5F 31 00                                // ._T_1.


  486A: 08 5F 54 5F 30 00                                // ._T_0.

                If (LEqual (And (CDID, 0xF000), 0x8000))
                {

  4870: A0 49 0F 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80  // .I..{CDID.......

                    Switch (Arg0)
                    {

  4880: A2 49 0E 01 70 68 5F 54 5F 30                    // .I..ph_T_0

                        Case (One)
                        {

  488A: A0 09 93 5F 54 5F 30 01                          // ..._T_0.

                            Return (One)
                        }

  4892: A4 01                                            // ..

                        Case
  4894: A1 44 0D                                         // .D.

 (0x02)
                        {

  4897: A0 0B 93 5F 54 5F 30 0A 02                       // ..._T_0..

                            Return (0x02)
                        }

  48A0: A4 0A 02                                         // ...

                        Case
  48A3: A1 45 0C                                         // .E.

 (0x03)
                        {

  48A6: A0 0B 93 5F 54 5F 30 0A 03                       // ..._T_0..

                            Return (0x04)
                        }

  48AF: A4 0A 04                                         // ...

                        Case
  48B2: A1 46 0B                                         // .F.

 (0x04)
                        {

  48B5: A0 0B 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            Return (0x08)
                        }

  48BE: A4 0A 08                                         // ...

                        Case
  48C1: A1 47 0A                                         // .G.

 (0x05)
                        {

  48C4: A0 0C 93 5F 54 5F 30 0A 05                       // ..._T_0..

                            Return (0x0100)
                        }

  48CD: A4 0B 00 01                                      // ....

                        Case
  48D1: A1 47 09                                         // .G.

 (0x06)
                        {

  48D4: A0 0C 93 5F 54 5F 30 0A 06                       // ..._T_0..

                            Return (0x0200)
                        }

  48DD: A4 0B 00 02                                      // ....

                        Case
  48E1: A1 47 08                                         // .G.

 (0x07)
                        {

  48E4: A0 0C 93 5F 54 5F 30 0A 07                       // ..._T_0..

                            Return (0x0400)
                        }

  48ED: A4 0B 00 04                                      // ....

                        Case
  48F1: A1 47 07                                         // .G.

 (0x08)
                        {

  48F4: A0 0C 93 5F 54 5F 30 0A 08                       // ..._T_0..

                            Return (0x0800)
                        }

  48FD: A4 0B 00 08                                      // ....

                        Case
  4901: A1 47 06                                         // .G.

 (0x09)
                        {

  4904: A0 0B 93 5F 54 5F 30 0A 09                       // ..._T_0..

                            Return (0x10)
                        }

  490D: A4 0A 10                                         // ...

                        Case
  4910: A1 48 05                                         // .H.

 (0x0A)
                        {

  4913: A0 0B 93 5F 54 5F 30 0A 0A                       // ..._T_0..

                            Return (0x20)
                        }

  491C: A4 0A 20                                         // .. 

                        Case
  491F: A1 49 04                                         // .I.

 (0x0B)
                        {

  4922: A0 0C 93 5F 54 5F 30 0A 0B                       // ..._T_0..

                            Return (0x1000)
                        }

  492B: A4 0B 00 10                                      // ....

                        Case
  492F: A1 39                                            // .9

 (0x0C)
                        {

  4931: A0 0C 93 5F 54 5F 30 0A 0C                       // ..._T_0..

                            Return (0x2000)
                        }

  493A: A4 0B 00 20                                      // ... 

                        Case
  493E: A1 2A                                            // .*

 (0x0D)
                        {

  4940: A0 0B 93 5F 54 5F 30 0A 0D                       // ..._T_0..

                            Return (0x40)
                        }

  4949: A4 0A 40                                         // ..@

                        Case
  494C: A1 1C                                            // ..

 (0x0E)
                        {

  494E: A0 0B 93 5F 54 5F 30 0A 0E                       // ..._T_0..

                            Return (0x80)
                        }

  4957: A4 0A 80                                         // ...

                        Case
  495A: A1 0E                                            // ..

 (0x0F)
                        {

  495C: A0 0C 93 5F 54 5F 30 0A 0F                       // ..._T_0..

                            Return (0x4000)
                        }


  4965: A4 0B 00 40                                      // ...@

                    }
                }

  4969: A5                                               // .

                Else
                {

  496A: A1 4C 08                                         // .L.

                    Switch (Arg0)
                    {

  496D: A2 49 08 01 70 68 5F 54 5F 31                    // .I..ph_T_1

                        Case (One)
                        {

  4977: A0 09 93 5F 54 5F 31 01                          // ..._T_1.

                            Return (One)
                        }

  497F: A4 01                                            // ..

                        Case
  4981: A1 44 07                                         // .D.

 (0x02)
                        {

  4984: A0 0B 93 5F 54 5F 31 0A 02                       // ..._T_1..

                            Return (0x02)
                        }

  498D: A4 0A 02                                         // ...

                        Case
  4990: A1 45 06                                         // .E.

 (0x03)
                        {

  4993: A0 0B 93 5F 54 5F 31 0A 03                       // ..._T_1..

                            Return (0x04)
                        }

  499C: A4 0A 04                                         // ...

                        Case
  499F: A1 46 05                                         // .F.

 (0x04)
                        {

  49A2: A0 0B 93 5F 54 5F 31 0A 04                       // ..._T_1..

                            Return (0x08)
                        }

  49AB: A4 0A 08                                         // ...

                        Case
  49AE: A1 47 04                                         // .G.

 (0x05)
                        {

  49B1: A0 0B 93 5F 54 5F 31 0A 05                       // ..._T_1..

                            Return (0x10)
                        }

  49BA: A4 0A 10                                         // ...

                        Case
  49BD: A1 38                                            // .8

 (0x06)
                        {

  49BF: A0 0B 93 5F 54 5F 31 0A 06                       // ..._T_1..

                            Return (0x20)
                        }

  49C8: A4 0A 20                                         // .. 

                        Case
  49CB: A1 2A                                            // .*

 (0x07)
                        {

  49CD: A0 0B 93 5F 54 5F 31 0A 07                       // ..._T_1..

                            Return (0x40)
                        }

  49D6: A4 0A 40                                         // ..@

                        Case
  49D9: A1 1C                                            // ..

 (0x08)
                        {

  49DB: A0 0B 93 5F 54 5F 31 0A 08                       // ..._T_1..

                            Return (0x80)
                        }

  49E4: A4 0A 80                                         // ...

                        Case
  49E7: A1 0E                                            // ..

 (0x09)
                        {

  49E9: A0 0C 93 5F 54 5F 31 0A 09                       // ..._T_1..

                            Return (0x0100)
                        }


  49F2: A4 0B 00 01                                      // ....

                    }
                }
            }


  49F6: A5                                               // .

            Name (XRST, Zero)

  49F7: 08 58 52 53 54 00                                // .XRST.

            Method (_PS0, 0, Serialized)  // _PS0: Power State 0
            {

  49FD: 14 4B 29 5F 50 53 30 08                          // .K)_PS0.

                If (LEqual (DVID, 0xFFFF))
                {

  4A05: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                    Return (Zero)
                }

                Store (MEMB, Local2)
                Store (PDBM, Local1)
                And (PDBM, 0xFFFFFFFFFFFFFFF9, PDBM)
                Store (D0D3, Local3)
                Store (Zero, D0D3)
                Store (SRMB, MEMB)
                Or (Local1, 0x02, PDBM)

  4A0F: A4 00 70 4D 45 4D 42 62 70 50 44 42 4D 61 7B 50  // ..pMEMBbpPDBMa{P
  4A1F: 44 42 4D 0E F9 FF FF FF FF FF FF FF 50 44 42 4D  // DBM.........PDBM
  4A2F: 70 44 30 44 33 63 70 00 44 30 44 33 70 53 52 4D  // pD0D3cp.D0D3pSRM
  4A3F: 42 4D 45 4D 42 7D 61 0A 02 50 44 42 4D           // BMEMB}a..PDBM

                OperationRegion (MCA1, SystemMemory, SRMB, 0x9000)

  4A4C: 5B 80 4D 43 41 31 00 53 52 4D 42 0B 00 90        // [.MCA1.SRMB...

                Field (MCA1, DWordAcc, Lock, Preserve)
                {
                    Offset (0x510), 
                    PSC1,   32, 
                    Offset (0x520), 
                    PSC2,   32, 
                    Offset (0x530), 
                    PSC3,   32, 
                    Offset (0x540), 
                    PSC4,   32, 
                    Offset (0x80E0), 
                        ,   15, 
                    AX15,   1, 
                    Offset (0x8154), 
                        ,   31, 
                    CLK2,   1, 
                    Offset (0x816C), 
                        ,   2, 
                    CLK0,   1, 
                        ,   11, 
                    CLK1,   1
                }


  4A5A: 5B 81 4E 04 4D 43 41 31 13 00 80 88 02 50 53 43  // [.N.MCA1.....PSC
  4A6A: 31 20 00 40 06 50 53 43 32 20 00 40 06 50 53 43  // 1 .@.PSC2 .@.PSC
  4A7A: 33 20 00 40 06 50 53 43 34 20 00 80 CE 3D 00 0F  // 3 .@.PSC4 ...=..
  4A8A: 41 58 31 35 01 00 40 39 00 1F 43 4C 4B 32 01 00  // AX15..@9..CLK2..
  4A9A: 40 0A 00 02 43 4C 4B 30 01 00 0B 43 4C 4B 31 01  // @...CLK0...CLK1.

                If (LEqual (PCHS, 0x02))
                {
                    Store (Zero, MB13)
                    Store (Zero, MB14)
                    Store (Zero, CLK0)

  4AAA: A0 20 93 50 43 48 53 0A 02 70 00 4D 42 31 33 70  // . .PCHS..p.MB13p
  4ABA: 00 4D 42 31 34 70 00 43 4C 4B 30                 // .MB14p.CLK0

                    Store (Zero, CLK1)
                }

                Store (One, CLK2)

  4AC5: 70 00 43 4C 4B 31 70 01 43 4C 4B 32              // p.CLK1p.CLK2

                If (LEqual (PCHS, 0x02))
                {

  4AD1: A0 4D 18 93 50 43 48 53 0A 02                    // .M..PCHS..

                    While (LOr (LOr (LEqual (And (PSC1, 0x03F8), 0x02E0), 
  4ADB: A2 3C 91 91 93 7B 50 53 43 31 0B F8 03 00 0B E0  // .<...{PSC1......
  4AEB: 02                                               // .

LEqual (And (PSC2, 0x03F8), 0x02E0)), 
  4AEC: 93 7B 50 53 43 32 0B F8 03 00 0B E0 02           // .{PSC2.......

LOr (LEqual (And (PSC3, 0x03F8), 0x02E0), 
  4AF9: 91 93 7B 50 53 43 33 0B F8 03 00 0B E0 02        // ..{PSC3.......

LEqual (And (PSC4, 0x03F8), 0x02E0))))
                    {

  4B07: 93 7B 50 53 43 34 0B F8 03 00 0B E0 02           // .{PSC4.......

                        Stall (0x0A)
                    }

                    Store (Zero, Local4)
                    And (PSC1, 0xFFFFFFFFFFFFFFFD, Local0)

  4B14: 5B 21 0A 0A 70 00 64 7B 50 53 43 31 0E FD FF FF  // [!..p.d{PSC1....
  4B24: FF FF FF FF FF 60                                // .....`

                    If (LEqual (And (Local0, 0x000203F9), 0x02A0))
                    {
                        Or (Local0, 0x80000000, PSC1)

  4B2A: A0 1C 93 7B 60 0C F9 03 02 00 00 0B A0 02 7D 60  // ...{`.........}`
  4B3A: 0C 00 00 00 80 50 53 43 31                       // .....PSC1

                        Or (Local4, One, Local4)
                    }

                    And (PSC2, 0xFFFFFFFFFFFFFFFD, Local0)

  4B43: 7D 64 01 64 7B 50 53 43 32 0E FD FF FF FF FF FF  // }d.d{PSC2.......
  4B53: FF FF 60                                         // ..`

                    If (LEqual (And (Local0, 0x000203F9), 0x02A0))
                    {
                        Or (Local0, 0x80000000, PSC2)

  4B56: A0 1D 93 7B 60 0C F9 03 02 00 00 0B A0 02 7D 60  // ...{`.........}`
  4B66: 0C 00 00 00 80 50 53 43 32                       // .....PSC2

                        Or (Local4, 0x02, Local4)
                    }

                    And (PSC3, 0xFFFFFFFFFFFFFFFD, Local0)

  4B6F: 7D 64 0A 02 64 7B 50 53 43 33 0E FD FF FF FF FF  // }d..d{PSC3......
  4B7F: FF FF FF 60                                      // ...`

                    If (LEqual (And (Local0, 0x000203F9), 0x02A0))
                    {
                        Or (Local0, 0x80000000, PSC3)

  4B83: A0 1D 93 7B 60 0C F9 03 02 00 00 0B A0 02 7D 60  // ...{`.........}`
  4B93: 0C 00 00 00 80 50 53 43 33                       // .....PSC3

                        Or (Local4, 0x04, Local4)
                    }

                    And (PSC4, 0xFFFFFFFFFFFFFFFD, Local0)

  4B9C: 7D 64 0A 04 64 7B 50 53 43 34 0E FD FF FF FF FF  // }d..d{PSC4......
  4BAC: FF FF FF 60                                      // ...`

                    If (LEqual (And (Local0, 0x000203F9), 0x02A0))
                    {
                        Or (Local0, 0x80000000, PSC4)

  4BB0: A0 1D 93 7B 60 0C F9 03 02 00 00 0B A0 02 7D 60  // ...{`.........}`
  4BC0: 0C 00 00 00 80 50 53 43 34                       // .....PSC4

                        Or (Local4, 0x08, Local4)
                    }


  4BC9: 7D 64 0A 08 64                                   // }d..d

                    If (Local4)
                    {
                        Sleep (0x65)

  4BCE: A0 4A 08 64 5B 22 0A 65                          // .J.d[".e

                        If (And (Local4, One))
                        {
                            And (PSC1, 0xFFFFFFFFFFFFFFFD, Local0)

  4BD6: A0 1F 7B 64 01 00 7B 50 53 43 31 0E FD FF FF FF  // ..{d..{PSC1.....
  4BE6: FF FF FF FF 60                                   // ....`

                            Or (Local0, 0x00FE0000, PSC1)
                        }


  4BEB: 7D 60 0C 00 00 FE 00 50 53 43 31                 // }`.....PSC1

                        If (And (Local4, 0x02))
                        {
                            And (PSC2, 0xFFFFFFFFFFFFFFFD, Local0)

  4BF6: A0 20 7B 64 0A 02 00 7B 50 53 43 32 0E FD FF FF  // . {d...{PSC2....
  4C06: FF FF FF FF FF 60                                // .....`

                            Or (Local0, 0x00FE0000, PSC2)
                        }


  4C0C: 7D 60 0C 00 00 FE 00 50 53 43 32                 // }`.....PSC2

                        If (And (Local4, 0x04))
                        {
                            And (PSC3, 0xFFFFFFFFFFFFFFFD, Local0)

  4C17: A0 20 7B 64 0A 04 00 7B 50 53 43 33 0E FD FF FF  // . {d...{PSC3....
  4C27: FF FF FF FF FF 60                                // .....`

                            Or (Local0, 0x00FE0000, PSC3)
                        }


  4C2D: 7D 60 0C 00 00 FE 00 50 53 43 33                 // }`.....PSC3

                        If (And (Local4, 0x08))
                        {
                            And (PSC4, 0xFFFFFFFFFFFFFFFD, Local0)

  4C38: A0 20 7B 64 0A 08 00 7B 50 53 43 34 0E FD FF FF  // . {d...{PSC4....
  4C48: FF FF FF FF FF 60                                // .....`

                            Or (Local0, 0x00FE0000, PSC4)
                        }
                    }


  4C4E: 7D 60 0C 00 00 FE 00 50 53 43 34                 // }`.....PSC4

                    Store (One, AX15)
                }


  4C59: 70 01 41 58 31 35                                // p.AX15

                If (CondRefOf (\_SB.PCI0.XHC.PS0X))
                {
                    PS0X ()
                }

                And (PDBM, 0xFFFFFFFFFFFFFFFD, PDBM)
                Store (Local2, MEMB)

  4C5F: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
  4C6F: 48 43 5F 50 53 30 58 00 50 53 30 58 7B 50 44 42  // HC_PS0X.PS0X{PDB
  4C7F: 4D 0E FD FF FF FF FF FF FF FF 50 44 42 4D 70 62  // M.........PDBMpb
  4C8F: 4D 45 4D 42                                      // MEMB

                Store (Local1, PDBM)
            }


  4C93: 70 61 50 44 42 4D                                // paPDBM

            Method (_PS3, 0, Serialized)  // _PS3: Power State 3
            {

  4C99: 14 4E 11 5F 50 53 33 08                          // .N._PS3.

                If (LEqual (DVID, 0xFFFF))
                {

  4CA1: A0 0B 93 44 56 49 44 0B FF FF                    // ...DVID...

                    Return (Zero)
                }

                Store (One, PMES)
                Store (One, PMEE)
                Store (MEMB, Local2)
                Store (PDBM, Local1)
                And (PDBM, 0xFFFFFFFFFFFFFFF9, PDBM)
                Store (SRMB, MEMB)
                Or (PDBM, 0x02, PDBM)

  4CAB: A4 00 70 01 50 4D 45 53 70 01 50 4D 45 45 70 4D  // ..p.PMESp.PMEEpM
  4CBB: 45 4D 42 62 70 50 44 42 4D 61 7B 50 44 42 4D 0E  // EMBbpPDBMa{PDBM.
  4CCB: F9 FF FF FF FF FF FF FF 50 44 42 4D 70 53 52 4D  // ........PDBMpSRM
  4CDB: 42 4D 45 4D 42 7D 50 44 42 4D 0A 02 50 44 42 4D  // BMEMB}PDBM..PDBM

                OperationRegion (MCA1, SystemMemory, SRMB, 0x9000)

  4CEB: 5B 80 4D 43 41 31 00 53 52 4D 42 0B 00 90        // [.MCA1.SRMB...

                Field (MCA1, DWordAcc, Lock, Preserve)
                {
                    Offset (0x80E0), 
                        ,   15, 
                    AX15,   1, 
                    Offset (0x8154), 
                        ,   31, 
                    CLK2,   1, 
                    Offset (0x816C), 
                        ,   2, 
                    CLK0,   1, 
                        ,   11, 
                    CLK1,   1, 
                    Offset (0x8170)
                }

                Store (D0D3, Local3)

  4CF9: 5B 81 2E 4D 43 41 31 13 00 80 70 40 00 0F 41 58  // [..MCA1...p@..AX
  4D09: 31 35 01 00 40 39 00 1F 43 4C 4B 32 01 00 40 0A  // 15..@9..CLK2..@.
  4D19: 00 02 43 4C 4B 30 01 00 0B 43 4C 4B 31 01 00 11  // ..CLK0...CLK1...
  4D29: 70 44 30 44 33 63                                // pD0D3c

                If (LEqual (Local3, 0x03))
                {

  4D2F: A0 0B 93 63 0A 03                                // ...c..

                    Store (Zero, D0D3)
                }


  4D35: 70 00 44 30 44 33                                // p.D0D3

                If (LEqual (PCHS, 0x02))
                {
                    Store (One, MB13)
                    Store (One, MB14)
                    Store (One, CLK0)

  4D3B: A0 20 93 50 43 48 53 0A 02 70 01 4D 42 31 33 70  // . .PCHS..p.MB13p
  4D4B: 01 4D 42 31 34 70 01 43 4C 4B 30                 // .MB14p.CLK0

                    Store (One, CLK1)
                }

                Store (Zero, CLK2)

  4D56: 70 01 43 4C 4B 31 70 00 43 4C 4B 32              // p.CLK1p.CLK2

                If (LEqual (PCHS, 0x02))
                {

  4D62: A0 0E 93 50 43 48 53 0A 02                       // ...PCHS..

                    Store (Zero, AX15)
                }


  4D6B: 70 00 41 58 31 35                                // p.AX15

                If (CondRefOf (\_SB.PCI0.XHC.PS3X))
                {
                    PS3X ()
                }


  4D71: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 58  // ..[.\/._SB_PCI0X
  4D81: 48 43 5F 50 53 33 58 00 50 53 33 58              // HC_PS3X.PS3X

                If (LEqual (Local3, 0x03))
                {

  4D8D: A0 0C 93 63 0A 03                                // ...c..

                    Store (0x03, D0D3)
                }

                And (PDBM, 0xFFFFFFFFFFFFFFFD, PDBM)
                Store (Local2, MEMB)

  4D93: 70 0A 03 44 30 44 33 7B 50 44 42 4D 0E FD FF FF  // p..D0D3{PDBM....
  4DA3: FF FF FF FF FF 50 44 42 4D 70 62 4D 45 4D 42     // .....PDBMpbMEMB

                Store (Local1, PDBM)
            }


  4DB2: 70 61 50 44 42 4D                                // paPDBM

            Method (CUID, 1, Serialized)
            {

  4DB8: 14 22 43 55 49 44 09                             // ."CUID.

                If (LEqual (Arg0, 
  4DBF: A0 19 93 68                                      // ...h

ToUUID ("7c9512a9-1705-4cb4-af7d-506a2423ab71")))
                {

  4DC3: 11 13 0A 10 A9 12 95 7C 05 17 B4 4C AF 7D 50 6A  // .......|...L.}Pj
  4DD3: 24 23 AB 71                                      // $#.q

                    Return (One)
                }


  4DD7: A4 01                                            // ..

                Return (Zero)
            }


  4DD9: A4 00                                            // ..

            Method (POSC, 3, Serialized)
            {

  4DDB: 14 43 08 50 4F 53 43 0B                          // .C.POSC.

                CreateDWordField (Arg2, Zero, CDW1)

  4DE3: 8A 6A 00 43 44 57 31                             // .j.CDW1

                CreateDWordField (Arg2, 0x08, CDW3)

  4DEA: 8A 6A 0A 08 43 44 57 33                          // .j..CDW3

                If (LEqual (XHCI, Zero))
                {

  4DF2: A0 12 93 58 48 43 49 00                          // ...XHCI.

                    Or (CDW1, 0x02, CDW1)
                }


  4DFA: 7D 43 44 57 31 0A 02 43 44 57 31                 // }CDW1..CDW1

                If (LNot (
  4E05: A0 47 05 92                                      // .G..

And (CDW1, One)))
                {

  4E09: 7B 43 44 57 31 01 00                             // {CDW1..

                    If (And (CDW3, One))
                    {
                        ESEL ()
                    }

  4E10: A0 0C 7B 43 44 57 33 01 00 45 53 45 4C           // ..{CDW3..ESEL

                    ElseIf
  4E1D: A1 3F                                            // .?

 (LEqual (And (CDID, 0xF000), 0x8000))
                    {

  4E1F: A0 24 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // .$.{CDID.......

                        If (LGreater (Arg0, One))
                        {
                            XSEL ()
                        }

  4E2E: A0 08 94 68 01 58 53 45 4C                       // ...h.XSEL

                        Else
                        {

  4E37: A1 0C                                            // ..

                            Or (CDW1, 0x0A, CDW1)
                        }
                    }

  4E39: 7D 43 44 57 31 0A 0A 43 44 57 31                 // }CDW1..CDW1

                    ElseIf
  4E44: A1 18                                            // ..

 (LGreater (Arg0, 0x02))
                    {
                        XSEL ()
                    }

  4E46: A0 09 94 68 0A 02 58 53 45 4C                    // ...h..XSEL

                    Else
                    {

  4E50: A1 0C                                            // ..

                        Or (CDW1, 0x0A, CDW1)
                    }
                }


  4E52: 7D 43 44 57 31 0A 0A 43 44 57 31                 // }CDW1..CDW1

                Return (Arg2)
            }


  4E5D: A4 6A                                            // .j

            Method (XSEL, 0, Serialized)
            {

  4E5F: 14 45 05 58 53 45 4C 08                          // .E.XSEL.

                If (LOr (LEqual (XHCI, 0x02), 
  4E67: A0 4D 04 91 93 58 48 43 49 0A 02                 // .M...XHCI..

LEqual (XHCI, 0x03)))
                {
                    Store (One, XUSB)
                    Store (One, XRST)
                    Store (Zero, Local0)
                    And (PR3, 0xFFFFFFC0, Local0)
                    Or (Local0, PR3M, PR3)
                    Store (Zero, Local0)
                    And (PR2, 0xFFFF8000, Local0)

  4E72: 93 58 48 43 49 0A 03 70 01 58 55 53 42 70 01 58  // .XHCI..p.XUSBp.X
  4E82: 52 53 54 70 00 60 7B 50 52 33 5F 0C C0 FF FF FF  // RSTp.`{PR3_.....
  4E92: 60 7D 60 50 52 33 4D 50 52 33 5F 70 00 60 7B 50  // `}`PR3MPR3_p.`{P
  4EA2: 52 32 5F 0C 00 80 FF FF 60                       // R2_.....`

                    Or (Local0, PR2M, PR2)
                }
            }


  4EAB: 7D 60 50 52 32 4D 50 52 32 5F                    // }`PR2MPR2_

            Method (ESEL, 0, Serialized)
            {

  4EB5: 14 3F 45 53 45 4C 08                             // .?ESEL.

                If (LOr (LEqual (XHCI, 0x02), 
  4EBC: A0 38 91 93 58 48 43 49 0A 02                    // .8..XHCI..

LEqual (XHCI, 0x03)))
                {
                    And (PR3, 0xFFFFFFC0, PR3)
                    And (PR2, 0xFFFF8000, PR2)
                    Store (Zero, XUSB)

  4EC6: 93 58 48 43 49 0A 03 7B 50 52 33 5F 0C C0 FF FF  // .XHCI..{PR3_....
  4ED6: FF 50 52 33 5F 7B 50 52 32 5F 0C 00 80 FF FF 50  // .PR3_{PR2_.....P
  4EE6: 52 32 5F 70 00 58 55 53 42                       // R2_p.XUSB

                    Store (Zero, XRST)
                }
            }


  4EEF: 70 00 58 52 53 54                                // p.XRST

            Method (XWAK, 0, Serialized)
            {

  4EF5: 14 19 58 57 41 4B 08                             // ..XWAK.

                If (LOr (LEqual (XUSB, One), 
  4EFC: A0 12 91 93 58 55 53 42 01                       // ....XUSB.

LEqual (XRST, One)))
                {
                    XSEL ()
                }
            }


  4F05: 93 58 52 53 54 01 58 53 45 4C                    // .XRST.XSEL

            Method (_S3D, 0, NotSerialized)  // _S3D: S3 Device State
            {

  4F0F: 14 09 5F 53 33 44 00                             // .._S3D.

                Return (0x02)
            }


  4F16: A4 0A 02                                         // ...

            Method (_S4D, 0, NotSerialized)  // _S4D: S4 Device State
            {

  4F19: 14 09 5F 53 34 44 00                             // .._S4D.

                Return (0x02)
            }


  4F20: A4 0A 02                                         // ...

            Device (RHUB)
            {

  4F23: 5B 82 42 DC 52 48 55 42                          // [.B.RHUB

                Name (_ADR, Zero)  // _ADR: Address

  4F2B: 08 5F 41 44 52 00                                // ._ADR.

                Device (HS01)
                {

  4F31: 5B 82 44 09 48 53 30 31                          // [.D.HS01

                    Name (_ADR, One)  // _ADR: Address

  4F39: 08 5F 41 44 52 01                                // ._ADR.

                    Name (_STA, 0x0F)  // _STA: Status

  4F3F: 08 5F 53 54 41 0A 0F                             // ._STA..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  4F46: 14 30 5F 55 50 43 08                             // .0_UPC.

                        Name (UPCP, 
  4F4D: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            0x03, 
                            Zero, 
                            Zero
                        })

  4F52: 12 08 04 0A FF 0A 03 00 00                       // .........

                        If (LNot (
  4F5B: A0 16 92                                         // ...

And (PR2S (One), PR2)))
                        {

  4F5E: 7B 50 52 32 53 01 50 52 32 5F 00                 // {PR2S.PR2_.

                            Store (Zero, 
  4F69: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  4F6B: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  4F72: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  4F77: 14 4F 04 5F 50 4C 44 08                          // .O._PLD.

                        Name (PLDP, 
  4F7F: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  4F84: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x69, 0x0C, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  4F87: 11 13 0A 10 01 C6 72 00 00 00 00 00 69 0C 80 00  // ......r.....i...
  4F97: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  4F9B: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

  4F9D: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

                        If (LNot (
  4FAA: A0 17 92                                         // ...

And (PR2S (One), PR2)))
                        {

  4FAD: 7B 50 52 32 53 01 50 52 32 5F 00                 // {PR2S.PR2_.

                            And (VIS, Zero, VIS)
                        }


  4FB8: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

                        Return (PLDP)
                    }
                }


  4FC2: A4 50 4C 44 50                                   // .PLDP

                Device (HS02)
                {

  4FC7: 5B 82 47 09 48 53 30 32                          // [.G.HS02

                    Name (_ADR, 0x02)  // _ADR: Address

  4FCF: 08 5F 41 44 52 0A 02                             // ._ADR..

                    Name (_STA, 0x0F)  // _STA: Status

  4FD6: 08 5F 53 54 41 0A 0F                             // ._STA..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  4FDD: 14 31 5F 55 50 43 08                             // .1_UPC.

                        Name (UPCP, 
  4FE4: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            0x03, 
                            Zero, 
                            Zero
                        })

  4FE9: 12 08 04 0A FF 0A 03 00 00                       // .........

                        If (LNot (
  4FF2: A0 17 92                                         // ...

And (PR2S (0x02), PR2)))
                        {

  4FF5: 7B 50 52 32 53 0A 02 50 52 32 5F 00              // {PR2S..PR2_.

                            Store (Zero, 
  5001: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  5003: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  500A: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  500F: 14 40 05 5F 50 4C 44 08                          // .@._PLD.

                        Name (PLDP, 
  5017: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  501C: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x69, 0x0C, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  501F: 11 13 0A 10 01 C6 72 00 00 00 00 00 69 0C 00 01  // ......r.....i...
  502F: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  5033: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

  5035: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

                        If (LNot (
  5042: A0 18 92                                         // ...

And (PR2S (0x02), PR2)))
                        {

  5045: 7B 50 52 32 53 0A 02 50 52 32 5F 00              // {PR2S..PR2_.

                            And (VIS, Zero, VIS)
                        }


  5051: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

                        Return (PLDP)
                    }
                }


  505B: A4 50 4C 44 50                                   // .PLDP

                Device (HS03)
                {

  5060: 5B 82 48 08 48 53 30 33                          // [.H.HS03

                    Name (_ADR, 0x03)  // _ADR: Address

  5068: 08 5F 41 44 52 0A 03                             // ._ADR..

                    Name (_STA, 0x0F)  // _STA: Status

  506F: 08 5F 53 54 41 0A 0F                             // ._STA..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  5076: 14 31 5F 55 50 43 08                             // .1_UPC.

                        Name (UPCP, 
  507D: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            0x03, 
                            Zero, 
                            Zero
                        })

  5082: 12 08 04 0A FF 0A 03 00 00                       // .........

                        If (LNot (
  508B: A0 17 92                                         // ...

And (PR2S (0x03), PR2)))
                        {

  508E: 7B 50 52 32 53 0A 03 50 52 32 5F 00              // {PR2S..PR2_.

                            Store (Zero, 
  509A: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  509C: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  50A3: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  50A8: 14 41 04 5F 50 4C 44 08                          // .A._PLD.

                        Name (PLDP, 
  50B0: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  50B5: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x71, 0x0C, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  50B8: 11 13 0A 10 01 C6 72 00 00 00 00 00 71 0C 80 01  // ......r.....q...
  50C8: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  50CC: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)
                        And (VIS, Zero, VIS)

  50CE: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F 7B 56 49  // .PLDP...@VIS_{VI
  50DE: 53 5F 00 56 49 53 5F                             // S_.VIS_

                        Return (PLDP)
                    }
                }


  50E5: A4 50 4C 44 50                                   // .PLDP

                Device (HS04)
                {

  50EA: 5B 82 48 08 48 53 30 34                          // [.H.HS04

                    Name (_ADR, 0x04)  // _ADR: Address

  50F2: 08 5F 41 44 52 0A 04                             // ._ADR..

                    Name (_STA, 0x0F)  // _STA: Status

  50F9: 08 5F 53 54 41 0A 0F                             // ._STA..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  5100: 14 31 5F 55 50 43 08                             // .1_UPC.

                        Name (UPCP, 
  5107: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            0x03, 
                            Zero, 
                            Zero
                        })

  510C: 12 08 04 0A FF 0A 03 00 00                       // .........

                        If (LNot (
  5115: A0 17 92                                         // ...

And (PR2S (0x04), PR2)))
                        {

  5118: 7B 50 52 32 53 0A 04 50 52 32 5F 00              // {PR2S..PR2_.

                            Store (Zero, 
  5124: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  5126: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  512D: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  5132: 14 41 04 5F 50 4C 44 08                          // .A._PLD.

                        Name (PLDP, 
  513A: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  513F: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x71, 0x0C, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  5142: 11 13 0A 10 01 C6 72 00 00 00 00 00 71 0C 00 02  // ......r.....q...
  5152: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  5156: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)
                        And (VIS, Zero, VIS)

  5158: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F 7B 56 49  // .PLDP...@VIS_{VI
  5168: 53 5F 00 56 49 53 5F                             // S_.VIS_

                        Return (PLDP)
                    }
                }


  516F: A4 50 4C 44 50                                   // .PLDP

                Device (HS05)
                {

  5174: 5B 82 46 09 48 53 30 35                          // [.F.HS05

                    Name (_ADR, 0x05)  // _ADR: Address

  517C: 08 5F 41 44 52 0A 05                             // ._ADR..

                    Name (_STA, 0x0F)  // _STA: Status

  5183: 08 5F 53 54 41 0A 0F                             // ._STA..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  518A: 14 30 5F 55 50 43 08                             // .0_UPC.

                        Name (UPCP, 
  5191: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            Zero, 
                            Zero, 
                            Zero
                        })

  5196: 12 07 04 0A FF 00 00 00                          // ........

                        If (LNot (
  519E: A0 17 92                                         // ...

And (PR2S (0x05), PR2)))
                        {

  51A1: 7B 50 52 32 53 0A 05 50 52 32 5F 00              // {PR2S..PR2_.

                            Store (Zero, 
  51AD: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  51AF: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  51B6: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  51BB: 14 40 05 5F 50 4C 44 08                          // .@._PLD.

                        Name (PLDP, 
  51C3: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  51C8: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x69, 0x0C, 0x80, 0x02, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  51CB: 11 13 0A 10 81 00 00 00 00 00 00 00 69 0C 80 02  // ............i...
  51DB: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  51DF: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

  51E1: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

                        If (LNot (
  51EE: A0 18 92                                         // ...

And (PR2S (0x05), PR2)))
                        {

  51F1: 7B 50 52 32 53 0A 05 50 52 32 5F 00              // {PR2S..PR2_.

                            And (VIS, Zero, VIS)
                        }


  51FD: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

                        Return (PLDP)
                    }
                }


  5207: A4 50 4C 44 50                                   // .PLDP

                Device (HS06)
                {

  520C: 5B 82 46 09 48 53 30 36                          // [.F.HS06

                    Name (_ADR, 0x06)  // _ADR: Address

  5214: 08 5F 41 44 52 0A 06                             // ._ADR..

                    Name (_STA, 0x0F)  // _STA: Status

  521B: 08 5F 53 54 41 0A 0F                             // ._STA..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  5222: 14 30 5F 55 50 43 08                             // .0_UPC.

                        Name (UPCP, 
  5229: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            Zero, 
                            Zero, 
                            Zero
                        })

  522E: 12 07 04 0A FF 00 00 00                          // ........

                        If (LNot (
  5236: A0 17 92                                         // ...

And (PR2S (0x06), PR2)))
                        {

  5239: 7B 50 52 32 53 0A 06 50 52 32 5F 00              // {PR2S..PR2_.

                            Store (Zero, 
  5245: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  5247: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  524E: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  5253: 14 40 05 5F 50 4C 44 08                          // .@._PLD.

                        Name (PLDP, 
  525B: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  5260: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x69, 0x0C, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  5263: 11 13 0A 10 81 00 00 00 00 00 00 00 69 0C 00 03  // ............i...
  5273: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  5277: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

  5279: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

                        If (LNot (
  5286: A0 18 92                                         // ...

And (PR2S (0x06), PR2)))
                        {

  5289: 7B 50 52 32 53 0A 06 50 52 32 5F 00              // {PR2S..PR2_.

                            And (VIS, Zero, VIS)
                        }


  5295: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

                        Return (PLDP)
                    }
                }


  529F: A4 50 4C 44 50                                   // .PLDP

                Device (HS07)
                {

  52A4: 5B 82 47 08 48 53 30 37                          // [.G.HS07

                    Name (_ADR, 0x07)  // _ADR: Address

  52AC: 08 5F 41 44 52 0A 07                             // ._ADR..

                    Name (_STA, 0x0F)  // _STA: Status

  52B3: 08 5F 53 54 41 0A 0F                             // ._STA..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  52BA: 14 30 5F 55 50 43 08                             // .0_UPC.

                        Name (UPCP, 
  52C1: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            Zero, 
                            Zero, 
                            Zero
                        })

  52C6: 12 07 04 0A FF 00 00 00                          // ........

                        If (LNot (
  52CE: A0 17 92                                         // ...

And (PR2S (0x07), PR2)))
                        {

  52D1: 7B 50 52 32 53 0A 07 50 52 32 5F 00              // {PR2S..PR2_.

                            Store (Zero, 
  52DD: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  52DF: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  52E6: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  52EB: 14 41 04 5F 50 4C 44 08                          // .A._PLD.

                        Name (PLDP, 
  52F3: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  52F8: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x71, 0x0C, 0x80, 0x03, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  52FB: 11 13 0A 10 81 00 00 00 00 00 00 00 71 0C 80 03  // ............q...
  530B: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  530F: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)
                        And (VIS, Zero, VIS)

  5311: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F 7B 56 49  // .PLDP...@VIS_{VI
  5321: 53 5F 00 56 49 53 5F                             // S_.VIS_

                        Return (PLDP)
                    }
                }


  5328: A4 50 4C 44 50                                   // .PLDP

                Device (HS08)
                {

  532D: 5B 82 47 08 48 53 30 38                          // [.G.HS08

                    Name (_ADR, 0x08)  // _ADR: Address

  5335: 08 5F 41 44 52 0A 08                             // ._ADR..

                    Name (_STA, 0x0F)  // _STA: Status

  533C: 08 5F 53 54 41 0A 0F                             // ._STA..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  5343: 14 30 5F 55 50 43 08                             // .0_UPC.

                        Name (UPCP, 
  534A: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            Zero, 
                            Zero, 
                            Zero
                        })

  534F: 12 07 04 0A FF 00 00 00                          // ........

                        If (LNot (
  5357: A0 17 92                                         // ...

And (PR2S (0x08), PR2)))
                        {

  535A: 7B 50 52 32 53 0A 08 50 52 32 5F 00              // {PR2S..PR2_.

                            Store (Zero, 
  5366: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  5368: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  536F: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  5374: 14 41 04 5F 50 4C 44 08                          // .A._PLD.

                        Name (PLDP, 
  537C: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  5381: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x71, 0x0C, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  5384: 11 13 0A 10 81 00 00 00 00 00 00 00 71 0C 00 04  // ............q...
  5394: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  5398: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)
                        And (VIS, Zero, VIS)

  539A: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F 7B 56 49  // .PLDP...@VIS_{VI
  53AA: 53 5F 00 56 49 53 5F                             // S_.VIS_

                        Return (PLDP)
                    }
                }


  53B1: A4 50 4C 44 50                                   // .PLDP

                Device (HS09)
                {

  53B6: 5B 82 40 0B 48 53 30 39                          // [.@.HS09

                    Name (_ADR, 0x09)  // _ADR: Address

  53BE: 08 5F 41 44 52 0A 09                             // ._ADR..

                    Name (_STA, 0x0F)  // _STA: Status

  53C5: 08 5F 53 54 41 0A 0F                             // ._STA..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  53CC: 14 31 5F 55 50 43 08                             // .1_UPC.

                        Name (UPCP, 
  53D3: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            0x03, 
                            Zero, 
                            Zero
                        })

  53D8: 12 08 04 0A FF 0A 03 00 00                       // .........

                        If (LNot (
  53E1: A0 17 92                                         // ...

And (PR2S (0x09), PR2)))
                        {

  53E4: 7B 50 52 32 53 0A 09 50 52 32 5F 00              // {PR2S..PR2_.

                            Store (Zero, 
  53F0: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  53F2: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  53F9: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  53FE: 14 49 06 5F 50 4C 44 08                          // .I._PLD.

                        Name (PLDP, 
  5406: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  540B: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x71, 0x0C, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  540E: 11 13 0A 10 01 C6 72 00 00 00 00 00 71 0C 80 04  // ......r.....q...
  541E: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  5422: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

  5424: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

                        If (LNot (
  5431: A0 18 92                                         // ...

And (PR2S (0x09), PR2)))
                        {

  5434: 7B 50 52 32 53 0A 09 50 52 32 5F 00              // {PR2S..PR2_.

                            And (VIS, Zero, VIS)
                        }


  5440: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

                        If (LEqual (And (CDID, 0xF000), 0x9000))
                        {

  544A: A0 18 93 7B 43 44 49 44 0B 00 F0 00 0B 00 90     // ...{CDID.......

                            And (VIS, Zero, VIS)
                        }


  5459: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

                        Return (PLDP)
                    }
                }


  5463: A4 50 4C 44 50                                   // .PLDP

                Device (HS10)
                {

  5468: 5B 82 43 0E 48 53 31 30                          // [.C.HS10

                    Method (_ADR, 0, Serialized)  // _ADR: Address
                    {

  5470: 14 1D 5F 41 44 52 08                             // .._ADR.

                        If (LEqual (And (CDID, 0xF000), 0x8000))
                        {

  5477: A0 11 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                            Return (0x0A)
                        }

  5486: A4 0A 0A                                         // ...

                        Else
                        {

  5489: A1 04                                            // ..

                            Return (0xFA)
                        }
                    }


  548B: A4 0A FA                                         // ...

                    Method (_STA, 0, Serialized)  // _STA: Status
                    {

  548E: 14 1C 5F 53 54 41 08                             // .._STA.

                        If (LEqual (And (CDID, 0xF000), 0x8000))
                        {

  5495: A0 11 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                            Return (0x0F)
                        }

  54A4: A4 0A 0F                                         // ...

                        Else
                        {

  54A7: A1 03                                            // ..

                            Return (Zero)
                        }
                    }


  54A9: A4 00                                            // ..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  54AB: 14 31 5F 55 50 43 08                             // .1_UPC.

                        Name (UPCP, 
  54B2: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            0x03, 
                            Zero, 
                            Zero
                        })

  54B7: 12 08 04 0A FF 0A 03 00 00                       // .........

                        If (LNot (
  54C0: A0 17 92                                         // ...

And (PR2S (0x0A), PR2)))
                        {

  54C3: 7B 50 52 32 53 0A 0A 50 52 32 5F 00              // {PR2S..PR2_.

                            Store (Zero, 
  54CF: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  54D1: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  54D8: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  54DD: 14 41 04 5F 50 4C 44 08                          // .A._PLD.

                        Name (PLDP, 
  54E5: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  54EA: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x71, 0x0C, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  54ED: 11 13 0A 10 01 C6 72 00 00 00 00 00 71 0C 00 05  // ......r.....q...
  54FD: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  5501: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)
                        And (VIS, Zero, VIS)

  5503: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F 7B 56 49  // .PLDP...@VIS_{VI
  5513: 53 5F 00 56 49 53 5F                             // S_.VIS_

                        Return (PLDP)
                    }


  551A: A4 50 4C 44 50                                   // .PLDP

                    Device (CAM0)
                    {

  551F: 5B 82 2C 43 41 4D 30                             // [.,CAM0

                        Name (_ADR, 0x0A)  // _ADR: Address

  5526: 08 5F 41 44 52 0A 0A                             // ._ADR..

                        Name (_PLD, 
  552D: 08 5F 50 4C 44                                   // ._PLD

Package (0x01)  // _PLD: Physical Location of Device
                        {

  5532: 12 1A 01                                         // ...

                            Buffer (0x14)
                            {
                                /* 0000 */  0x82, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x24, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF                         
                            }
                        })
                    }
                }


  5535: 11 17 0A 14 82 00 00 00 00 00 00 00 24 1D 00 00  // ............$...
  5545: 00 00 00 00 FF FF FF FF                          // ........

                Device (HS11)
                {

  554D: 5B 82 44 0C 48 53 31 31                          // [.D.HS11

                    Method (_ADR, 0, Serialized)  // _ADR: Address
                    {

  5555: 14 1D 5F 41 44 52 08                             // .._ADR.

                        If (LEqual (And (CDID, 0xF000), 0x8000))
                        {

  555C: A0 11 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                            Return (0x0B)
                        }

  556B: A4 0A 0B                                         // ...

                        Else
                        {

  556E: A1 04                                            // ..

                            Return (0xFB)
                        }
                    }


  5570: A4 0A FB                                         // ...

                    Method (_STA, 0, Serialized)  // _STA: Status
                    {

  5573: 14 1C 5F 53 54 41 08                             // .._STA.

                        If (LEqual (And (CDID, 0xF000), 0x8000))
                        {

  557A: A0 11 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                            Return (0x0F)
                        }

  5589: A4 0A 0F                                         // ...

                        Else
                        {

  558C: A1 03                                            // ..

                            Return (Zero)
                        }
                    }


  558E: A4 00                                            // ..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  5590: 14 31 5F 55 50 43 08                             // .1_UPC.

                        Name (UPCP, 
  5597: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            0xFF, 
                            Zero, 
                            Zero
                        })

  559C: 12 08 04 0A FF 0A FF 00 00                       // .........

                        If (LNot (
  55A5: A0 17 92                                         // ...

And (PR2S (0x0B), PR2)))
                        {

  55A8: 7B 50 52 32 53 0A 0B 50 52 32 5F 00              // {PR2S..PR2_.

                            Store (Zero, 
  55B4: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  55B6: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  55BD: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  55C2: 14 40 05 5F 50 4C 44 08                          // .@._PLD.

                        Name (PLDP, 
  55CA: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  55CF: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x30, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  55D2: 11 13 0A 10 81 00 00 00 00 00 00 00 30 1C 00 00  // ............0...
  55E2: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  55E6: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

  55E8: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

                        If (LNot (
  55F5: A0 18 92                                         // ...

And (PR2S (0x0B), PR2)))
                        {

  55F8: 7B 50 52 32 53 0A 0B 50 52 32 5F 00              // {PR2S..PR2_.

                            And (VIS, Zero, VIS)
                        }


  5604: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

                        Return (PLDP)
                    }
                }


  560E: A4 50 4C 44 50                                   // .PLDP

                Device (HS12)
                {

  5613: 5B 82 44 0C 48 53 31 32                          // [.D.HS12

                    Method (_ADR, 0, Serialized)  // _ADR: Address
                    {

  561B: 14 1D 5F 41 44 52 08                             // .._ADR.

                        If (LEqual (And (CDID, 0xF000), 0x8000))
                        {

  5622: A0 11 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                            Return (0x0C)
                        }

  5631: A4 0A 0C                                         // ...

                        Else
                        {

  5634: A1 04                                            // ..

                            Return (0xFC)
                        }
                    }


  5636: A4 0A FC                                         // ...

                    Method (_STA, 0, Serialized)  // _STA: Status
                    {

  5639: 14 1C 5F 53 54 41 08                             // .._STA.

                        If (LEqual (And (CDID, 0xF000), 0x8000))
                        {

  5640: A0 11 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                            Return (0x0F)
                        }

  564F: A4 0A 0F                                         // ...

                        Else
                        {

  5652: A1 03                                            // ..

                            Return (Zero)
                        }
                    }


  5654: A4 00                                            // ..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  5656: 14 31 5F 55 50 43 08                             // .1_UPC.

                        Name (UPCP, 
  565D: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            0xFF, 
                            Zero, 
                            Zero
                        })

  5662: 12 08 04 0A FF 0A FF 00 00                       // .........

                        If (LNot (
  566B: A0 17 92                                         // ...

And (PR2S (0x0C), PR2)))
                        {

  566E: 7B 50 52 32 53 0A 0C 50 52 32 5F 00              // {PR2S..PR2_.

                            Store (Zero, 
  567A: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  567C: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  5683: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  5688: 14 40 05 5F 50 4C 44 08                          // .@._PLD.

                        Name (PLDP, 
  5690: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  5695: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x30, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  5698: 11 13 0A 10 81 00 00 00 00 00 00 00 30 1C 00 00  // ............0...
  56A8: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  56AC: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

  56AE: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

                        If (LNot (
  56BB: A0 18 92                                         // ...

And (PR2S (0x0C), PR2)))
                        {

  56BE: 7B 50 52 32 53 0A 0C 50 52 32 5F 00              // {PR2S..PR2_.

                            And (VIS, Zero, VIS)
                        }


  56CA: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

                        Return (PLDP)
                    }
                }


  56D4: A4 50 4C 44 50                                   // .PLDP

                Device (HS13)
                {

  56D9: 5B 82 44 0C 48 53 31 33                          // [.D.HS13

                    Method (_ADR, 0, Serialized)  // _ADR: Address
                    {

  56E1: 14 1D 5F 41 44 52 08                             // .._ADR.

                        If (LEqual (And (CDID, 0xF000), 0x8000))
                        {

  56E8: A0 11 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                            Return (0x0D)
                        }

  56F7: A4 0A 0D                                         // ...

                        Else
                        {

  56FA: A1 04                                            // ..

                            Return (0xFD)
                        }
                    }


  56FC: A4 0A FD                                         // ...

                    Method (_STA, 0, Serialized)  // _STA: Status
                    {

  56FF: 14 1C 5F 53 54 41 08                             // .._STA.

                        If (LEqual (And (CDID, 0xF000), 0x8000))
                        {

  5706: A0 11 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                            Return (0x0F)
                        }

  5715: A4 0A 0F                                         // ...

                        Else
                        {

  5718: A1 03                                            // ..

                            Return (Zero)
                        }
                    }


  571A: A4 00                                            // ..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  571C: 14 31 5F 55 50 43 08                             // .1_UPC.

                        Name (UPCP, 
  5723: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            0xFF, 
                            Zero, 
                            Zero
                        })

  5728: 12 08 04 0A FF 0A FF 00 00                       // .........

                        If (LNot (
  5731: A0 17 92                                         // ...

And (PR2S (0x0D), PR2)))
                        {

  5734: 7B 50 52 32 53 0A 0D 50 52 32 5F 00              // {PR2S..PR2_.

                            Store (Zero, 
  5740: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  5742: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  5749: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  574E: 14 40 05 5F 50 4C 44 08                          // .@._PLD.

                        Name (PLDP, 
  5756: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  575B: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x30, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  575E: 11 13 0A 10 81 00 00 00 00 00 00 00 30 1C 00 00  // ............0...
  576E: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  5772: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

  5774: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

                        If (LNot (
  5781: A0 18 92                                         // ...

And (PR2S (0x0D), PR2)))
                        {

  5784: 7B 50 52 32 53 0A 0D 50 52 32 5F 00              // {PR2S..PR2_.

                            And (VIS, Zero, VIS)
                        }


  5790: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

                        Return (PLDP)
                    }
                }


  579A: A4 50 4C 44 50                                   // .PLDP

                Device (HS14)
                {

  579F: 5B 82 4D 0A 48 53 31 34                          // [.M.HS14

                    Name (_ADR, 0x0E)  // _ADR: Address

  57A7: 08 5F 41 44 52 0A 0E                             // ._ADR..

                    Method (_STA, 0, Serialized)  // _STA: Status
                    {

  57AE: 14 1C 5F 53 54 41 08                             // .._STA.

                        If (LEqual (And (CDID, 0xF000), 0x8000))
                        {

  57B5: A0 11 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                            Return (0x0F)
                        }

  57C4: A4 0A 0F                                         // ...

                        Else
                        {

  57C7: A1 03                                            // ..

                            Return (Zero)
                        }
                    }


  57C9: A4 00                                            // ..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  57CB: 14 31 5F 55 50 43 08                             // .1_UPC.

                        Name (UPCP, 
  57D2: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            0xFF, 
                            Zero, 
                            Zero
                        })

  57D7: 12 08 04 0A FF 0A FF 00 00                       // .........

                        If (LNot (
  57E0: A0 17 92                                         // ...

And (PR2S (0x0E), PR2)))
                        {

  57E3: 7B 50 52 32 53 0A 0E 50 52 32 5F 00              // {PR2S..PR2_.

                            Store (Zero, 
  57EF: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  57F1: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  57F8: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  57FD: 14 40 05 5F 50 4C 44 08                          // .@._PLD.

                        Name (PLDP, 
  5805: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  580A: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x30, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  580D: 11 13 0A 10 81 00 00 00 00 00 00 00 30 1C 00 00  // ............0...
  581D: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  5821: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

  5823: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

                        If (LNot (
  5830: A0 18 92                                         // ...

And (PR2S (0x0E), PR2)))
                        {

  5833: 7B 50 52 32 53 0A 0E 50 52 32 5F 00              // {PR2S..PR2_.

                            And (VIS, Zero, VIS)
                        }


  583F: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

                        Return (PLDP)
                    }
                }


  5849: A4 50 4C 44 50                                   // .PLDP

                Device (HS15)
                {

  584E: 5B 82 4B 0A 48 53 31 35                          // [.K.HS15

                    Name (_ADR, 0x0F)  // _ADR: Address

  5856: 08 5F 41 44 52 0A 0F                             // ._ADR..

                    Method (_STA, 0, Serialized)  // _STA: Status
                    {

  585D: 14 1C 5F 53 54 41 08                             // .._STA.

                        If (LEqual (And (CDID, 0xF000), 0x8000))
                        {

  5864: A0 11 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                            Return (0x0F)
                        }

  5873: A4 0A 0F                                         // ...

                        Else
                        {

  5876: A1 03                                            // ..

                            Return (Zero)
                        }
                    }


  5878: A4 00                                            // ..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  587A: 14 2F 5F 55 50 43 08                             // ./_UPC.

                        Name (UPCP, 
  5881: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            Zero, 
                            Zero, 
                            Zero, 
                            Zero
                        })

  5886: 12 06 04 00 00 00 00                             // .......

                        If (LNot (
  588D: A0 17 92                                         // ...

And (PR2S (0x0F), PR2)))
                        {

  5890: 7B 50 52 32 53 0A 0F 50 52 32 5F 00              // {PR2S..PR2_.

                            Store (Zero, 
  589C: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  589E: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  58A5: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  58AA: 14 40 05 5F 50 4C 44 08                          // .@._PLD.

                        Name (PLDP, 
  58B2: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  58B7: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x30, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  58BA: 11 13 0A 10 81 00 00 00 00 00 00 00 30 1C 00 00  // ............0...
  58CA: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  58CE: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

  58D0: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

                        If (LNot (
  58DD: A0 18 92                                         // ...

And (PR2S (0x0F), PR2)))
                        {

  58E0: 7B 50 52 32 53 0A 0F 50 52 32 5F 00              // {PR2S..PR2_.

                            And (VIS, Zero, VIS)
                        }


  58EC: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

                        Return (PLDP)
                    }
                }


  58F6: A4 50 4C 44 50                                   // .PLDP

                Device (SSP1)
                {

  58FB: 5B 82 44 0A 53 53 50 31                          // [.D.SSP1

                    Method (_ADR, 0, Serialized)  // _ADR: Address
                    {

  5903: 14 1D 5F 41 44 52 08                             // .._ADR.

                        If (LEqual (And (CDID, 0xF000), 0x8000))
                        {

  590A: A0 11 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                            Return (0x10)
                        }

  5919: A4 0A 10                                         // ...

                        Else
                        {

  591C: A1 04                                            // ..

                            Return (0x0A)
                        }
                    }


  591E: A4 0A 0A                                         // ...

                    Name (_STA, 0x0F)  // _STA: Status

  5921: 08 5F 53 54 41 0A 0F                             // ._STA..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  5928: 14 2C 5F 55 50 43 08                             // .,_UPC.

                        Name (UPCP, 
  592F: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            0x03, 
                            Zero, 
                            Zero
                        })

  5934: 12 08 04 0A FF 0A 03 00 00                       // .........

                        If (LNot (
  593D: A0 12 92                                         // ...

And (PR3, One)))
                        {

  5940: 7B 50 52 33 5F 01 00                             // {PR3_..

                            Store (Zero, 
  5947: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  5949: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  5950: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  5955: 14 4B 04 5F 50 4C 44 08                          // .K._PLD.

                        Name (PLDP, 
  595D: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  5962: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x69, 0x0C, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  5965: 11 13 0A 10 01 C6 72 00 00 00 00 00 69 0C 80 00  // ......r.....i...
  5975: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  5979: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

  597B: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

                        If (LNot (
  5988: A0 13 92                                         // ...

And (PR3, One)))
                        {

  598B: 7B 50 52 33 5F 01 00                             // {PR3_..

                            And (VIS, Zero, VIS)
                        }


  5992: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

                        Return (PLDP)
                    }
                }


  599C: A4 50 4C 44 50                                   // .PLDP

                Device (SSP2)
                {

  59A1: 5B 82 46 0A 53 53 50 32                          // [.F.SSP2

                    Method (_ADR, 0, Serialized)  // _ADR: Address
                    {

  59A9: 14 1D 5F 41 44 52 08                             // .._ADR.

                        If (LEqual (And (CDID, 0xF000), 0x8000))
                        {

  59B0: A0 11 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                            Return (0x11)
                        }

  59BF: A4 0A 11                                         // ...

                        Else
                        {

  59C2: A1 04                                            // ..

                            Return (0x0B)
                        }
                    }


  59C4: A4 0A 0B                                         // ...

                    Name (_STA, 0x0F)  // _STA: Status

  59C7: 08 5F 53 54 41 0A 0F                             // ._STA..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  59CE: 14 2D 5F 55 50 43 08                             // .-_UPC.

                        Name (UPCP, 
  59D5: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            0x03, 
                            Zero, 
                            Zero
                        })

  59DA: 12 08 04 0A FF 0A 03 00 00                       // .........

                        If (LNot (
  59E3: A0 13 92                                         // ...

And (PR3, 0x02)))
                        {

  59E6: 7B 50 52 33 5F 0A 02 00                          // {PR3_...

                            Store (Zero, 
  59EE: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  59F0: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  59F7: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  59FC: 14 4C 04 5F 50 4C 44 08                          // .L._PLD.

                        Name (PLDP, 
  5A04: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  5A09: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x69, 0x0C, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  5A0C: 11 13 0A 10 01 C6 72 00 00 00 00 00 69 0C 00 01  // ......r.....i...
  5A1C: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  5A20: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

  5A22: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

                        If (LNot (
  5A2F: A0 14 92                                         // ...

And (PR3, 0x02)))
                        {

  5A32: 7B 50 52 33 5F 0A 02 00                          // {PR3_...

                            And (VIS, Zero, VIS)
                        }


  5A3A: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

                        Return (PLDP)
                    }
                }


  5A44: A4 50 4C 44 50                                   // .PLDP

                Device (SSP3)
                {

  5A49: 5B 82 46 0A 53 53 50 33                          // [.F.SSP3

                    Method (_ADR, 0, Serialized)  // _ADR: Address
                    {

  5A51: 14 1D 5F 41 44 52 08                             // .._ADR.

                        If (LEqual (And (CDID, 0xF000), 0x8000))
                        {

  5A58: A0 11 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                            Return (0x12)
                        }

  5A67: A4 0A 12                                         // ...

                        Else
                        {

  5A6A: A1 04                                            // ..

                            Return (0x0C)
                        }
                    }


  5A6C: A4 0A 0C                                         // ...

                    Name (_STA, 0x0F)  // _STA: Status

  5A6F: 08 5F 53 54 41 0A 0F                             // ._STA..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  5A76: 14 2D 5F 55 50 43 08                             // .-_UPC.

                        Name (UPCP, 
  5A7D: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            0x03, 
                            Zero, 
                            Zero
                        })

  5A82: 12 08 04 0A FF 0A 03 00 00                       // .........

                        If (LNot (
  5A8B: A0 13 92                                         // ...

And (PR3, 0x04)))
                        {

  5A8E: 7B 50 52 33 5F 0A 04 00                          // {PR3_...

                            Store (Zero, 
  5A96: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  5A98: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  5A9F: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  5AA4: 14 4C 04 5F 50 4C 44 08                          // .L._PLD.

                        Name (PLDP, 
  5AAC: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  5AB1: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x71, 0x0C, 0x80, 0x01, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  5AB4: 11 13 0A 10 01 C6 72 00 00 00 00 00 71 0C 80 01  // ......r.....q...
  5AC4: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  5AC8: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

  5ACA: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

                        If (LNot (
  5AD7: A0 14 92                                         // ...

And (PR3, 0x04)))
                        {

  5ADA: 7B 50 52 33 5F 0A 04 00                          // {PR3_...

                            And (VIS, Zero, VIS)
                        }


  5AE2: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

                        Return (PLDP)
                    }
                }


  5AEC: A4 50 4C 44 50                                   // .PLDP

                Device (SSP4)
                {

  5AF1: 5B 82 46 0A 53 53 50 34                          // [.F.SSP4

                    Method (_ADR, 0, Serialized)  // _ADR: Address
                    {

  5AF9: 14 1D 5F 41 44 52 08                             // .._ADR.

                        If (LEqual (And (CDID, 0xF000), 0x8000))
                        {

  5B00: A0 11 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                            Return (0x13)
                        }

  5B0F: A4 0A 13                                         // ...

                        Else
                        {

  5B12: A1 04                                            // ..

                            Return (0x0D)
                        }
                    }


  5B14: A4 0A 0D                                         // ...

                    Name (_STA, 0x0F)  // _STA: Status

  5B17: 08 5F 53 54 41 0A 0F                             // ._STA..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  5B1E: 14 2D 5F 55 50 43 08                             // .-_UPC.

                        Name (UPCP, 
  5B25: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            0x03, 
                            Zero, 
                            Zero
                        })

  5B2A: 12 08 04 0A FF 0A 03 00 00                       // .........

                        If (LNot (
  5B33: A0 13 92                                         // ...

And (PR3, 0x08)))
                        {

  5B36: 7B 50 52 33 5F 0A 08 00                          // {PR3_...

                            Store (Zero, 
  5B3E: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  5B40: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  5B47: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  5B4C: 14 4C 04 5F 50 4C 44 08                          // .L._PLD.

                        Name (PLDP, 
  5B54: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  5B59: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x71, 0x0C, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  5B5C: 11 13 0A 10 01 C6 72 00 00 00 00 00 71 0C 00 02  // ......r.....q...
  5B6C: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  5B70: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

  5B72: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

                        If (LNot (
  5B7F: A0 14 92                                         // ...

And (PR3, 0x08)))
                        {

  5B82: 7B 50 52 33 5F 0A 08 00                          // {PR3_...

                            And (VIS, Zero, VIS)
                        }


  5B8A: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

                        Return (PLDP)
                    }
                }


  5B94: A4 50 4C 44 50                                   // .PLDP

                Device (SSP5)
                {

  5B99: 5B 82 45 0A 53 53 50 35                          // [.E.SSP5

                    Name (_ADR, 0x14)  // _ADR: Address

  5BA1: 08 5F 41 44 52 0A 14                             // ._ADR..

                    Method (_STA, 0, Serialized)  // _STA: Status
                    {

  5BA8: 14 1C 5F 53 54 41 08                             // .._STA.

                        If (LEqual (And (CDID, 0xF000), 0x8000))
                        {

  5BAF: A0 11 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                            Return (0x0F)
                        }

  5BBE: A4 0A 0F                                         // ...

                        Else
                        {

  5BC1: A1 03                                            // ..

                            Return (Zero)
                        }
                    }


  5BC3: A4 00                                            // ..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  5BC5: 14 2D 5F 55 50 43 08                             // .-_UPC.

                        Name (UPCP, 
  5BCC: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            0x03, 
                            Zero, 
                            Zero
                        })

  5BD1: 12 08 04 0A FF 0A 03 00 00                       // .........

                        If (LNot (
  5BDA: A0 13 92                                         // ...

And (PR3, 0x10)))
                        {

  5BDD: 7B 50 52 33 5F 0A 10 00                          // {PR3_...

                            Store (Zero, 
  5BE5: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  5BE7: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  5BEE: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  5BF3: 14 4C 04 5F 50 4C 44 08                          // .L._PLD.

                        Name (PLDP, 
  5BFB: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  5C00: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x71, 0x0C, 0x80, 0x04, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  5C03: 11 13 0A 10 01 C6 72 00 00 00 00 00 71 0C 80 04  // ......r.....q...
  5C13: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  5C17: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

  5C19: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

                        If (LNot (
  5C26: A0 14 92                                         // ...

And (PR3, 0x10)))
                        {

  5C29: 7B 50 52 33 5F 0A 10 00                          // {PR3_...

                            And (VIS, Zero, VIS)
                        }


  5C31: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

                        Return (PLDP)
                    }
                }


  5C3B: A4 50 4C 44 50                                   // .PLDP

                Device (SSP6)
                {

  5C40: 5B 82 45 0A 53 53 50 36                          // [.E.SSP6

                    Name (_ADR, 0x15)  // _ADR: Address

  5C48: 08 5F 41 44 52 0A 15                             // ._ADR..

                    Method (_STA, 0, Serialized)  // _STA: Status
                    {

  5C4F: 14 1C 5F 53 54 41 08                             // .._STA.

                        If (LEqual (And (CDID, 0xF000), 0x8000))
                        {

  5C56: A0 11 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                            Return (0x0F)
                        }

  5C65: A4 0A 0F                                         // ...

                        Else
                        {

  5C68: A1 03                                            // ..

                            Return (Zero)
                        }
                    }


  5C6A: A4 00                                            // ..

                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
                    {

  5C6C: 14 2D 5F 55 50 43 08                             // .-_UPC.

                        Name (UPCP, 
  5C73: 08 55 50 43 50                                   // .UPCP

Package (0x04)
                        {
                            0xFF, 
                            0x03, 
                            Zero, 
                            Zero
                        })

  5C78: 12 08 04 0A FF 0A 03 00 00                       // .........

                        If (LNot (
  5C81: A0 13 92                                         // ...

And (PR3, 0x20)))
                        {

  5C84: 7B 50 52 33 5F 0A 20 00                          // {PR3_. .

                            Store (Zero, 
  5C8C: 70 00                                            // p.

Index (UPCP, Zero))
                        }


  5C8E: 88 55 50 43 50 00 00                             // .UPCP..

                        Return (UPCP)
                    }


  5C95: A4 55 50 43 50                                   // .UPCP

                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
                    {

  5C9A: 14 4C 04 5F 50 4C 44 08                          // .L._PLD.

                        Name (PLDP, 
  5CA2: 08 50 4C 44 50                                   // .PLDP

Package (0x01)
                        {

  5CA7: 12 16 01                                         // ...

                            Buffer (0x10)
                            {
                                /* 0000 */  0x01, 0xC6, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00,
                                /* 0008 */  0x71, 0x0C, 0x00, 0x05, 0x00, 0x00, 0x00, 0x00 
                            }
                        })

  5CAA: 11 13 0A 10 01 C6 72 00 00 00 00 00 71 0C 00 05  // ......r.....q...
  5CBA: 00 00 00 00                                      // ....

                        CreateBitField (DerefOf (
  5CBE: 8D 83                                            // ..

Index (PLDP, Zero)), 0x40, VIS)

  5CC0: 88 50 4C 44 50 00 00 0A 40 56 49 53 5F           // .PLDP...@VIS_

                        If (LNot (
  5CCD: A0 14 92                                         // ...

And (PR3, 0x20)))
                        {

  5CD0: 7B 50 52 33 5F 0A 20 00                          // {PR3_. .

                            And (VIS, Zero, VIS)
                        }


  5CD8: 7B 56 49 53 5F 00 56 49 53 5F                    // {VIS_.VIS_

                        Return (PLDP)
                    }
                }
            }


  5CE2: A4 50 4C 44 50                                   // .PLDP

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

  5CE7: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x0D, 0x03))
            }
        }


  5CEE: A4 47 50 52 57 0A 0D 0A 03                       // .GPRW....

        Device (HDEF)
        {

  5CF7: 5B 82 46 05 48 44 45 46                          // [.F.HDEF

            Name (_ADR, 0x001B0000)  // _ADR: Address

  5CFF: 08 5F 41 44 52 0C 00 00 1B 00                    // ._ADR.....

            OperationRegion (HDAR, PCI_Config, 0x4C, 0x10)

  5D09: 5B 80 48 44 41 52 02 0A 4C 0A 10                 // [.HDAR..L..

            Field (HDAR, WordAcc, NoLock, Preserve)
            {
                DCKA,   1, 
                Offset (0x01), 
                DCKM,   1, 
                    ,   6, 
                DCKS,   1, 
                Offset (0x08), 
                Offset (0x09), 
                PMEE,   1, 
                    ,   6, 
                PMES,   1
            }


  5D14: 5B 81 29 48 44 41 52 02 44 43 4B 41 01 00 07 44  // [.)HDAR.DCKA...D
  5D24: 43 4B 4D 01 00 06 44 43 4B 53 01 00 30 00 08 50  // CKM...DCKS..0..P
  5D34: 4D 45 45 01 00 06 50 4D 45 53 01                 // MEE...PMES.

            Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
            {

  5D3F: 14 0F 5F 50 52 57 00                             // .._PRW.

                Return (GPRW (0x0D, 0x04))
            }
        }


  5D46: A4 47 50 52 57 0A 0D 0A 04                       // .GPRW....

        Scope (\_SB.PCI0)
        {

  5D4F: 10 86 55 01 5C 2E 5F 53 42 5F 50 43 49 30        // ..U.\._SB_PCI0

            Device (SIRC)
            {

  5D5D: 5B 82 45 36 53 49 52 43                          // [.E6SIRC

                Name (_HID, EisaId ("PNP0C02"))  // _HID: Hardware ID

  5D65: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

                Name (_UID, 0x04)  // _UID: Unique ID

  5D6F: 08 5F 55 49 44 0A 04                             // ._UID..

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  5D76: 14 26 5F 53 54 41 00                             // .&_STA.

                    If (LLess (OSYS, 0x07DC))
                    {

  5D7D: A0 0B 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                        Return (Zero)
                    }


  5D87: A4 00                                            // ..

                    If (LEqual (And (CDID, 0xF000), 0x8000))
                    {

  5D89: A0 10 93 7B 43 44 49 44 0B 00 F0 00 0B 00 80     // ...{CDID.......

                        Return (Zero)
                    }


  5D98: A4 00                                            // ..

                    Return (0x0F)
                }


  5D9A: A4 0A 0F                                         // ...

                Name (BUF1, 
  5D9D: 08 42 55 46 31                                   // .BUF1

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y14)
                })

  5DA2: 11 11 0A 0E 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  5DB2: 79 00                                            // y.

                Name (BUF2, 
  5DB4: 08 42 55 46 32                                   // .BUF2

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y15)
                })

  5DB9: 11 11 0A 0E 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  5DC9: 79 00                                            // y.

                Name (BUF3, 
  5DCB: 08 42 55 46 33                                   // .BUF3

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y16)
                })

  5DD0: 11 11 0A 0E 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  5DE0: 79 00                                            // y.

                Name (BUF4, 
  5DE2: 08 42 55 46 34                                   // .BUF4

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y17)
                })

  5DE7: 11 11 0A 0E 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  5DF7: 79 00                                            // y.

                Name (BUF5, 
  5DF9: 08 42 55 46 35                                   // .BUF5

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y18)
                })

  5DFE: 11 11 0A 0E 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  5E0E: 79 00                                            // y.

                Name (BUF6, 
  5E10: 08 42 55 46 36                                   // .BUF6

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y19)
                })

  5E15: 11 11 0A 0E 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  5E25: 79 00                                            // y.

                Name (BUF7, 
  5E27: 08 42 55 46 37                                   // .BUF7

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y1A)
                })

  5E2C: 11 11 0A 0E 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  5E3C: 79 00                                            // y.

                Name (BUF8, 
  5E3E: 08 42 55 46 38                                   // .BUF8

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y1B)
                })

  5E43: 11 11 0A 0E 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  5E53: 79 00                                            // y.

                Name (BUFL, 
  5E55: 08 42 55 46 4C                                   // .BUFL

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000008,         // Address Length
                        _Y1C)
                })

  5E5A: 11 11 0A 0E 86 09 00 01 00 00 00 00 08 00 00 00  // ................
  5E6A: 79 00                                            // y.

                Name (BUFH, 
  5E6C: 08 42 55 46 48                                   // .BUFH

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000FEC,         // Address Length
                        _Y1D)
                })

  5E71: 11 11 0A 0E 86 09 00 01 00 00 00 00 EC 0F 00 00  // ................
  5E81: 79 00                                            // y.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Store (
  5E83: 14 43 14 5F 43 52 53 00 70                       // .C._CRS.p

Buffer (0x02)
                        {
                             0x79, 0x00                                     
                        }, Local0)

  5E8C: 11 05 0A 02 79 00 60                             // ....y.`

                    CreateDWordField (BUF1, \_SB.PCI0.SIRC._Y14._BAS, BR01)  // _BAS: Base Address

  5E93: 8A 42 55 46 31 0A 04 42 52 30 31                 // .BUF1..BR01

                    CreateDWordField (BUF2, \_SB.PCI0.SIRC._Y15._BAS, BR02)  // _BAS: Base Address

  5E9E: 8A 42 55 46 32 0A 04 42 52 30 32                 // .BUF2..BR02

                    CreateDWordField (BUF3, \_SB.PCI0.SIRC._Y16._BAS, BR03)  // _BAS: Base Address

  5EA9: 8A 42 55 46 33 0A 04 42 52 30 33                 // .BUF3..BR03

                    CreateDWordField (BUF4, \_SB.PCI0.SIRC._Y17._BAS, BR04)  // _BAS: Base Address

  5EB4: 8A 42 55 46 34 0A 04 42 52 30 34                 // .BUF4..BR04

                    CreateDWordField (BUF5, \_SB.PCI0.SIRC._Y18._BAS, BR05)  // _BAS: Base Address

  5EBF: 8A 42 55 46 35 0A 04 42 52 30 35                 // .BUF5..BR05

                    CreateDWordField (BUF6, \_SB.PCI0.SIRC._Y19._BAS, BR06)  // _BAS: Base Address

  5ECA: 8A 42 55 46 36 0A 04 42 52 30 36                 // .BUF6..BR06

                    CreateDWordField (BUF7, \_SB.PCI0.SIRC._Y1A._BAS, BR07)  // _BAS: Base Address

  5ED5: 8A 42 55 46 37 0A 04 42 52 30 37                 // .BUF7..BR07

                    CreateDWordField (BUF8, \_SB.PCI0.SIRC._Y1B._BAS, BR08)  // _BAS: Base Address

  5EE0: 8A 42 55 46 38 0A 04 42 52 30 38                 // .BUF8..BR08

                    If (
  5EEB: A0 0F 92                                         // ...

LNotEqual (BR01, Zero))
                    {

  5EEE: 93 42 52 30 31 00                                // .BR01.

                        ConcatenateResTemplate (Local0, BUF1, Local0)
                    }


  5EF4: 84 60 42 55 46 31 60                             // .`BUF1`

                    If (
  5EFB: A0 0F 92                                         // ...

LNotEqual (BR02, Zero))
                    {

  5EFE: 93 42 52 30 32 00                                // .BR02.

                        ConcatenateResTemplate (Local0, BUF2, Local0)
                    }


  5F04: 84 60 42 55 46 32 60                             // .`BUF2`

                    If (
  5F0B: A0 0F 92                                         // ...

LNotEqual (BR03, Zero))
                    {

  5F0E: 93 42 52 30 33 00                                // .BR03.

                        ConcatenateResTemplate (Local0, BUF3, Local0)
                    }


  5F14: 84 60 42 55 46 33 60                             // .`BUF3`

                    If (
  5F1B: A0 0F 92                                         // ...

LNotEqual (BR04, Zero))
                    {

  5F1E: 93 42 52 30 34 00                                // .BR04.

                        ConcatenateResTemplate (Local0, BUF4, Local0)
                    }


  5F24: 84 60 42 55 46 34 60                             // .`BUF4`

                    If (
  5F2B: A0 0F 92                                         // ...

LNotEqual (BR05, Zero))
                    {

  5F2E: 93 42 52 30 35 00                                // .BR05.

                        ConcatenateResTemplate (Local0, BUF5, Local0)
                    }


  5F34: 84 60 42 55 46 35 60                             // .`BUF5`

                    If (
  5F3B: A0 0F 92                                         // ...

LNotEqual (BR06, Zero))
                    {

  5F3E: 93 42 52 30 36 00                                // .BR06.

                        ConcatenateResTemplate (Local0, BUF6, Local0)
                    }


  5F44: 84 60 42 55 46 36 60                             // .`BUF6`

                    If (
  5F4B: A0 0F 92                                         // ...

LNotEqual (BR07, Zero))
                    {

  5F4E: 93 42 52 30 37 00                                // .BR07.

                        ConcatenateResTemplate (Local0, BUF7, Local0)
                    }


  5F54: 84 60 42 55 46 37 60                             // .`BUF7`

                    If (
  5F5B: A0 49 06 92                                      // .I..

LNotEqual (BR08, Zero))
                    {
                        ConcatenateResTemplate (Local0, BUF8, Local0)

  5F5F: 93 42 52 30 38 00 84 60 42 55 46 38 60           // .BR08..`BUF8`

                        OperationRegion (SDCH, SystemMemory, BR08, 0x40)

  5F6C: 5B 80 53 44 43 48 00 42 52 30 38 0A 40           // [.SDCH.BR08.@

                        Field (SDCH, DWordAcc, NoLock, Preserve)
                        {
                            Offset (0x10), 
                            BAR0,   32
                        }


  5F79: 5B 81 0E 53 44 43 48 03 00 40 08 42 41 52 30 20  // [..SDCH..@.BAR0 

                        CreateDWordField (BUFL, \_SB.PCI0.SIRC._Y1C._BAS, LBAS)  // _BAS: Base Address

  5F89: 8A 42 55 46 4C 0A 04 4C 42 41 53                 // .BUFL..LBAS

                        CreateDWordField (BUFH, \_SB.PCI0.SIRC._Y1D._BAS, HBAS)  // _BAS: Base Address
                        Add (BAR0, 0x1000, LBAS)
                        Add (BAR0, 0x1014, HBAS)
                        ConcatenateResTemplate (Local0, BUFL, Local0)

  5F94: 8A 42 55 46 48 0A 04 48 42 41 53 72 42 41 52 30  // .BUFH..HBASrBAR0
  5FA4: 0B 00 10 4C 42 41 53 72 42 41 52 30 0B 14 10 48  // ...LBASrBAR0...H
  5FB4: 42 41 53 84 60 42 55 46 4C 60                    // BAS.`BUFL`

                        ConcatenateResTemplate (Local0, BUFH, Local0)
                    }


  5FBE: 84 60 42 55 46 48 60                             // .`BUFH`

                    Return (Local0)
                }


  5FC5: A4 60                                            // .`

                Method (CNTR, 1, Serialized)
                {

  5FC7: 14 4C 0F 43 4E 54 52 09                          // .L.CNTR.


  5FCF: 08 5F 54 5F 30 00                                // ._T_0.

                    Switch (ToInteger (Arg0))
                    {

  5FD5: A2 4E 0E 01 70 99 68 00 5F 54 5F 30              // .N..p.h._T_0

                        Case (One)
                        {

  5FE1: A0 17 93 5F 54 5F 30 01                          // ..._T_0.

                            CreateDWordField (BUF1, \_SB.PCI0.SIRC._Y14._BAS, BAR1)  // _BAS: Base Address

  5FE9: 8A 42 55 46 31 0A 04 42 41 52 31                 // .BUF1..BAR1

                            Return (BAR1)
                        }

  5FF4: A4 42 41 52 31                                   // .BAR1

                        Case
  5FF9: A1 49 0C                                         // .I.

 (0x02)
                        {

  5FFC: A0 18 93 5F 54 5F 30 0A 02                       // ..._T_0..

                            CreateDWordField (BUF2, \_SB.PCI0.SIRC._Y15._BAS, BAR2)  // _BAS: Base Address

  6005: 8A 42 55 46 32 0A 04 42 41 52 32                 // .BUF2..BAR2

                            Return (BAR2)
                        }

  6010: A4 42 41 52 32                                   // .BAR2

                        Case
  6015: A1 4D 0A                                         // .M.

 (0x03)
                        {

  6018: A0 18 93 5F 54 5F 30 0A 03                       // ..._T_0..

                            CreateDWordField (BUF3, \_SB.PCI0.SIRC._Y16._BAS, BAR3)  // _BAS: Base Address

  6021: 8A 42 55 46 33 0A 04 42 41 52 33                 // .BUF3..BAR3

                            Return (BAR3)
                        }

  602C: A4 42 41 52 33                                   // .BAR3

                        Case
  6031: A1 41 09                                         // .A.

 (0x04)
                        {

  6034: A0 18 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            CreateDWordField (BUF4, \_SB.PCI0.SIRC._Y17._BAS, BAR4)  // _BAS: Base Address

  603D: 8A 42 55 46 34 0A 04 42 41 52 34                 // .BUF4..BAR4

                            Return (BAR4)
                        }

  6048: A4 42 41 52 34                                   // .BAR4

                        Case
  604D: A1 45 07                                         // .E.

 (0x05)
                        {

  6050: A0 18 93 5F 54 5F 30 0A 05                       // ..._T_0..

                            CreateDWordField (BUF5, \_SB.PCI0.SIRC._Y18._BAS, BAR5)  // _BAS: Base Address

  6059: 8A 42 55 46 35 0A 04 42 41 52 35                 // .BUF5..BAR5

                            Return (BAR5)
                        }

  6064: A4 42 41 52 35                                   // .BAR5

                        Case
  6069: A1 49 05                                         // .I.

 (0x06)
                        {

  606C: A0 18 93 5F 54 5F 30 0A 06                       // ..._T_0..

                            CreateDWordField (BUF6, \_SB.PCI0.SIRC._Y19._BAS, BAR6)  // _BAS: Base Address

  6075: 8A 42 55 46 36 0A 04 42 41 52 36                 // .BUF6..BAR6

                            Return (BAR6)
                        }

  6080: A4 42 41 52 36                                   // .BAR6

                        Case
  6085: A1 3D                                            // .=

 (0x07)
                        {

  6087: A0 18 93 5F 54 5F 30 0A 07                       // ..._T_0..

                            CreateDWordField (BUF7, \_SB.PCI0.SIRC._Y1A._BAS, BAR7)  // _BAS: Base Address

  6090: 8A 42 55 46 37 0A 04 42 41 52 37                 // .BUF7..BAR7

                            Return (BAR7)
                        }

  609B: A4 42 41 52 37                                   // .BAR7

                        Case
  60A0: A1 22                                            // ."

 (0x08)
                        {

  60A2: A0 18 93 5F 54 5F 30 0A 08                       // ..._T_0..

                            CreateDWordField (BUF8, \_SB.PCI0.SIRC._Y1B._BAS, BAR8)  // _BAS: Base Address

  60AB: 8A 42 55 46 38 0A 04 42 41 52 38                 // .BUF8..BAR8

                            Return (BAR8)
                        }

  60B6: A4 42 41 52 38                                   // .BAR8

                        Default
                        {

  60BB: A1 07                                            // ..

                            Return (0xFFFFFFFF)
                        }


  60BD: A4 0C FF FF FF FF                                // ......

                    }
                }
            }


  60C3: A5                                               // .

            Device (GPI0)
            {

  60C4: 5B 82 4A 09 47 50 49 30                          // [.J.GPI0

                Name (_HID, "INT33C7")  // _HID: Hardware ID

  60CC: 08 5F 48 49 44 0D 49 4E 54 33 33 43 37 00        // ._HID.INT33C7.

                Name (_CID, "INT33C7")  // _CID: Compatible ID

  60DA: 08 5F 43 49 44 0D 49 4E 54 33 33 43 37 00        // ._CID.INT33C7.

                Name (_UID, One)  // _UID: Unique ID

  60E8: 08 5F 55 49 44 01                                // ._UID.

                Name (RBUF, 
  60EE: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
                {
                    DWordIO (ResourceProducer, MinFixed, MaxFixed, PosDecode, EntireRange,
                        0x00000000,         // Granularity
                        0x00000000,         // Range Minimum
                        0x000003FF,         // Range Maximum
                        0x00000000,         // Translation Offset
                        0x00000400,         // Length
                        ,, _Y1E, TypeStatic, DenseTranslation)
                })

  60F3: 11 1F 0A 1C 87 17 00 01 0C 03 00 00 00 00 00 00  // ................
  6103: 00 00 FF 03 00 00 00 00 00 00 00 04 00 00 79 00  // ..............y.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  6113: 14 0B 5F 43 52 53 00                             // .._CRS.

                    Return (RBUF)
                }


  611A: A4 52 42 55 46                                   // .RBUF

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  611F: 14 0B 5F 48 52 56 00                             // .._HRV.

                    Return (CRID)
                }


  6126: A4 43 52 49 44                                   // .CRID

                CreateDWordField (RBUF, \_SB.PCI0.GPI0._Y1E._MIN, BVAL)  // _MIN: Minimum Base Address

  612B: 8A 52 42 55 46 0A 0A 42 56 41 4C                 // .RBUF..BVAL

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  6136: 14 29 5F 53 54 41 00                             // .)_STA.

                    If (LEqual (BVAL, Zero))
                    {

  613D: A0 09 93 42 56 41 4C 00                          // ...BVAL.

                        Return (Zero)
                    }


  6145: A4 00                                            // ..

                    If (LLess (OSYS, 0x07DC))
                    {

  6147: A0 0B 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                        Return (Zero)
                    }


  6151: A4 00                                            // ..

                    If (LEqual (S0ID, One))
                    {

  6153: A0 0A 93 53 30 49 44 01                          // ...S0ID.

                        Return (0x0F)
                    }


  615B: A4 0A 0F                                         // ...

                    Return (Zero)
                }
            }


  615E: A4 00                                            // ..

            Device (SDMA)
            {

  6160: 5B 82 47 0F 53 44 4D 41                          // [.G.SDMA

                Name (_HID, "INTL9C60")  // _HID: Hardware ID

  6168: 08 5F 48 49 44 0D 49 4E 54 4C 39 43 36 30 00     // ._HID.INTL9C60.

                Name (_UID, One)  // _UID: Unique ID

  6177: 08 5F 55 49 44 01                                // ._UID.

                Name (_ADR, 0x00150000)  // _ADR: Address

  617D: 08 5F 41 44 52 0C 00 00 15 00                    // ._ADR.....

                Name (RBUF, 
  6187: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y1F)
                    Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, )
                    {
                        0x00000014,
                    }
                })

  618C: 11 1A 0A 17 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  619C: 89 06 00 05 01 14 00 00 00 79 00                 // .........y.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  61A7: 14 0B 5F 43 52 53 00                             // .._CRS.

                    Return (RBUF)
                }


  61AE: A4 52 42 55 46                                   // .RBUF

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  61B3: 14 0B 5F 48 52 56 00                             // .._HRV.

                    Return (CRID)
                }


  61BA: A4 43 52 49 44                                   // .CRID

                Method (PTD3, 0, NotSerialized)
                {

  61BF: 14 4B 04 50 54 44 33 00                          // .K.PTD3.

                    If (
  61C7: A0 43 04 92                                      // .C..

LNotEqual (^^SIRC.CNTR (One), Zero))
                    {
                        Add (^^SIRC.CNTR (One), 0x84, Local0)

  61CB: 93 5E 5E 2E 53 49 52 43 43 4E 54 52 01 00 72 5E  // .^^.SIRCCNTR..r^
  61DB: 5E 2E 53 49 52 43 43 4E 54 52 01 0A 84 60        // ^.SIRCCNTR...`

                        OperationRegion (DMB1, SystemMemory, Local0, 0x04)

  61E9: 5B 80 44 4D 42 31 00 60 0A 04                    // [.DMB1.`..

                        Field (DMB1, DWordAcc, NoLock, Preserve)
                        {
                            TEMP,   32
                        }


  61F3: 5B 81 0B 44 4D 42 31 03 54 45 4D 50 20           // [..DMB1.TEMP 

                        Or (TEMP, 0x03, TEMP)
                    }
                }


  6200: 7D 54 45 4D 50 0A 03 54 45 4D 50                 // }TEMP..TEMP

                CreateDWordField (RBUF, \_SB.PCI0.SDMA._Y1F._BAS, BVAL)  // _BAS: Base Address

  620B: 8A 52 42 55 46 0A 04 42 56 41 4C                 // .RBUF..BVAL

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  6216: 14 42 04 5F 53 54 41 00                          // .B._STA.

                    If (LEqual (BVAL, Zero))
                    {

  621E: A0 09 93 42 56 41 4C 00                          // ...BVAL.

                        Return (Zero)
                    }


  6226: A4 00                                            // ..

                    If (LLess (OSYS, 0x07DC))
                    {

  6228: A0 0B 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                        Return (Zero)
                    }


  6232: A4 00                                            // ..

                    If (LAnd (LEqual (DOSD, 0x02), 
  6234: A0 17 90 93 44 4F 53 44 0A 02                    // ....DOSD..

LEqual (OSYS, 0x07DC)))
                    {
                        PTD3 ()

  623E: 93 4F 53 59 53 0B DC 07 50 54 44 33              // .OSYS...PTD3

                        Return (Zero)
                    }


  624A: A4 00                                            // ..

                    If (LEqual (S0ID, One))
                    {

  624C: A0 0A 93 53 30 49 44 01                          // ...S0ID.

                        Return (0x0F)
                    }


  6254: A4 0A 0F                                         // ...

                    Return (Zero)
                }
            }


  6257: A4 00                                            // ..

            Device (I2C0)
            {

  6259: 5B 82 44 35 49 32 43 30                          // [.D5I2C0

                Name (_HID, "INT33C2")  // _HID: Hardware ID

  6261: 08 5F 48 49 44 0D 49 4E 54 33 33 43 32 00        // ._HID.INT33C2.

                Name (_CID, "INT33C2")  // _CID: Compatible ID

  626F: 08 5F 43 49 44 0D 49 4E 54 33 33 43 32 00        // ._CID.INT33C2.

                Name (_UID, One)  // _UID: Unique ID

  627D: 08 5F 55 49 44 01                                // ._UID.

                Name (_ADR, 0x00150001)  // _ADR: Address

  6283: 08 5F 41 44 52 0C 01 00 15 00                    // ._ADR.....

                Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
                {
                    ADBG ("I2C0 DEP Call")

  628D: 14 41 05 5F 44 45 50 00 41 44 42 47 0D 49 32 43  // .A._DEP.ADBG.I2C
  629D: 30 20 44 45 50 20 43 61 6C 6C 00                 // 0 DEP Call.

                    If (LEqual (S0ID, One))
                    {
                        ADBG ("I2C0 DEP")

  62A8: A0 1D 93 53 30 49 44 01 41 44 42 47 0D 49 32 43  // ...S0ID.ADBG.I2C
  62B8: 30 20 44 45 50 00                                // 0 DEP.

                        Return (
  62BE: A4                                               // .

Package (0x01)
                        {
                            PEPD
                        })
                    }

  62BF: 12 06 01 50 45 50 44                             // ...PEPD

                    Else
                    {
                        ADBG ("I2C0 DEP NULL")

  62C6: A1 18 41 44 42 47 0D 49 32 43 30 20 44 45 50 20  // ..ADBG.I2C0 DEP 
  62D6: 4E 55 4C 4C 00                                   // NULL.

                        Return (
  62DB: A4                                               // .

Package (0x00){})
                    }
                }


  62DC: 12 02 00                                         // ...

                Method (SSCN, 0, NotSerialized)
                {

  62DF: 14 41 04 53 53 43 4E 00                          // .A.SSCN.

                    Name (PKG, 
  62E7: 08 50 4B 47 5F                                   // .PKG_

Package (0x03)
                    {
                        0x01B0, 
                        0x01FB, 
                        0x09
                    })
                    Store (SSH0, 
  62EC: 12 0A 03 0B B0 01 0B FB 01 0A 09 70 53 53 48 30  // ...........pSSH0

Index (PKG, Zero))
                    Store (SSL0, 
  62FC: 88 50 4B 47 5F 00 00 70 53 53 4C 30              // .PKG_..pSSL0

Index (PKG, One))
                    Store (SSD0, 
  6308: 88 50 4B 47 5F 01 00 70 53 53 44 30              // .PKG_..pSSD0

Index (PKG, 0x02))

  6314: 88 50 4B 47 5F 0A 02 00                          // .PKG_...

                    Return (PKG)
                }


  631C: A4 50 4B 47 5F                                   // .PKG_

                Method (FMCN, 0, NotSerialized)
                {

  6321: 14 3E 46 4D 43 4E 00                             // .>FMCN.

                    Name (PKG, 
  6328: 08 50 4B 47 5F                                   // .PKG_

Package (0x03)
                    {
                        0x48, 
                        0xA0, 
                        0x09
                    })
                    Store (FMH0, 
  632D: 12 08 03 0A 48 0A A0 0A 09 70 46 4D 48 30        // ....H....pFMH0

Index (PKG, Zero))
                    Store (FML0, 
  633B: 88 50 4B 47 5F 00 00 70 46 4D 4C 30              // .PKG_..pFML0

Index (PKG, One))
                    Store (FMD0, 
  6347: 88 50 4B 47 5F 01 00 70 46 4D 44 30              // .PKG_..pFMD0

Index (PKG, 0x02))

  6353: 88 50 4B 47 5F 0A 02 00                          // .PKG_...

                    Return (PKG)
                }


  635B: A4 50 4B 47 5F                                   // .PKG_

                Method (FPCN, 0, NotSerialized)
                {

  6360: 14 3E 46 50 43 4E 00                             // .>FPCN.

                    Name (PKG, 
  6367: 08 50 4B 47 5F                                   // .PKG_

Package (0x03)
                    {
                        0x1A, 
                        0x32, 
                        0x05
                    })
                    Store (FPH0, 
  636C: 12 08 03 0A 1A 0A 32 0A 05 70 46 50 48 30        // ......2..pFPH0

Index (PKG, Zero))
                    Store (FPL0, 
  637A: 88 50 4B 47 5F 00 00 70 46 50 4C 30              // .PKG_..pFPL0

Index (PKG, One))
                    Store (FPD0, 
  6386: 88 50 4B 47 5F 01 00 70 46 50 44 30              // .PKG_..pFPD0

Index (PKG, 0x02))

  6392: 88 50 4B 47 5F 0A 02 00                          // .PKG_...

                    Return (PKG)
                }


  639A: A4 50 4B 47 5F                                   // .PKG_

                Method (M0D3, 0, NotSerialized)
                {

  639F: 14 21 4D 30 44 33 00                             // .!M0D3.

                    Name (PKG, 
  63A6: 08 50 4B 47 5F                                   // .PKG_

Package (0x01)
                    {
                        0xC8
                    })
                    Store (M0C0, 
  63AB: 12 04 01 0A C8 70 4D 30 43 30                    // .....pM0C0

Index (PKG, Zero))

  63B5: 88 50 4B 47 5F 00 00                             // .PKG_..

                    Return (PKG)
                }


  63BC: A4 50 4B 47 5F                                   // .PKG_

                Method (M1D3, 0, NotSerialized)
                {

  63C1: 14 22 4D 31 44 33 00                             // ."M1D3.

                    Name (PKG, 
  63C8: 08 50 4B 47 5F                                   // .PKG_

Package (0x01)
                    {
                        0x07D0
                    })
                    Store (M1C0, 
  63CD: 12 05 01 0B D0 07 70 4D 31 43 30                 // ......pM1C0

Index (PKG, Zero))

  63D8: 88 50 4B 47 5F 00 00                             // .PKG_..

                    Return (PKG)
                }


  63DF: A4 50 4B 47 5F                                   // .PKG_

                Method (M0D0, 0, NotSerialized)
                {

  63E4: 14 20 4D 30 44 30 00                             // . M0D0.

                    Name (PKG, 
  63EB: 08 50 4B 47 5F                                   // .PKG_

Package (0x01)
                    {
                        Zero
                    })
                    Store (M2C0, 
  63F0: 12 03 01 00 70 4D 32 43 30                       // ....pM2C0

Index (PKG, Zero))

  63F9: 88 50 4B 47 5F 00 00                             // .PKG_..

                    Return (PKG)
                }


  6400: A4 50 4B 47 5F                                   // .PKG_

                Name (RBUF, 
  6405: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y20)
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000015,
                    }
                })

  640A: 11 1A 0A 17 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  641A: 89 06 00 0D 01 15 00 00 00 79 00                 // .........y.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  6425: 14 3F 5F 43 52 53 00                             // .?_CRS.

                    Name (DBUF, 
  642C: 08 44 42 55 46                                   // .DBUF

ResourceTemplate ()
                    {
                        FixedDMA (0x0018, 0x0004, Width32bit, )
                        FixedDMA (0x0019, 0x0005, Width32bit, )
                    })

  6431: 11 11 0A 0E 55 18 00 04 00 02 55 19 00 05 00 02  // ....U.....U.....
  6441: 79 00                                            // y.

                    If (
  6443: A0 1A 92                                         // ...

LNotEqual (^^SDMA._STA (), Zero))
                    {

  6446: 93 5E 5E 2E 53 44 4D 41 5F 53 54 41 00           // .^^.SDMA_STA.

                        Return (
  6453: A4                                               // .

ConcatenateResTemplate (RBUF, DBUF))
                    }

  6454: 84 52 42 55 46 44 42 55 46 00                    // .RBUFDBUF.

                    Else
                    {

  645E: A1 06                                            // ..

                        Return (RBUF)
                    }
                }


  6460: A4 52 42 55 46                                   // .RBUF

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  6465: 14 0B 5F 48 52 56 00                             // .._HRV.

                    Return (CRID)
                }


  646C: A4 43 52 49 44                                   // .CRID

                CreateDWordField (RBUF, \_SB.PCI0.I2C0._Y20._BAS, BVAL)  // _BAS: Base Address

  6471: 8A 52 42 55 46 0A 04 42 56 41 4C                 // .RBUF..BVAL

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  647C: 14 29 5F 53 54 41 00                             // .)_STA.

                    If (LEqual (BVAL, Zero))
                    {

  6483: A0 09 93 42 56 41 4C 00                          // ...BVAL.

                        Return (Zero)
                    }


  648B: A4 00                                            // ..

                    If (LLess (OSYS, 0x07DC))
                    {

  648D: A0 0B 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                        Return (Zero)
                    }


  6497: A4 00                                            // ..

                    If (LEqual (S0ID, One))
                    {

  6499: A0 0A 93 53 30 49 44 01                          // ...S0ID.

                        Return (0x0F)
                    }


  64A1: A4 0A 0F                                         // ...

                    Return (Zero)
                }


  64A4: A4 00                                            // ..

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    ADBG ("I2C0 Ctrlr D0")

  64A6: 14 45 08 5F 50 53 30 08 41 44 42 47 0D 49 32 43  // .E._PS0.ADBG.I2C
  64B6: 30 20 43 74 72 6C 72 20 44 30 00                 // 0 Ctrlr D0.

                    If (
  64C1: A0 4E 04 92                                      // .N..

LNotEqual (^^SIRC.CNTR (0x02), Zero))
                    {
                        Add (^^SIRC.CNTR (0x02), 0x84, Local0)

  64C5: 93 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 02 00 72  // .^^.SIRCCNTR...r
  64D5: 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 02 0A 84 60  // ^^.SIRCCNTR....`

                        OperationRegion (ICB1, SystemMemory, Local0, 0x04)

  64E5: 5B 80 49 43 42 31 00 60 0A 04                    // [.ICB1.`..

                        Field (ICB1, DWordAcc, NoLock, Preserve)
                        {
                            TEMP,   32
                        }

                        And (TEMP, 0xFFFFFFFC, TEMP)

  64EF: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7B 54 45  // [..ICB1.TEMP {TE
  64FF: 4D 50 0C FC FF FF FF 54 45 4D 50                 // MP.....TEMP

                        Store (TEMP, Local0)
                    }


  650A: 70 54 45 4D 50 60                                // pTEMP`

                    If (CondRefOf (\_SB.PCI0.I2C0.PS0X))
                    {
                        PS0X ()
                    }
                }


  6510: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 49  // ..[.\/._SB_PCI0I
  6520: 32 43 30 50 53 30 58 00 50 53 30 58              // 2C0PS0X.PS0X

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    ADBG ("I2C0 Ctrlr D3")

  652C: 14 42 08 5F 50 53 33 08 41 44 42 47 0D 49 32 43  // .B._PS3.ADBG.I2C
  653C: 30 20 43 74 72 6C 72 20 44 33 00                 // 0 Ctrlr D3.

                    If (
  6547: A0 4B 04 92                                      // .K..

LNotEqual (^^SIRC.CNTR (0x02), Zero))
                    {
                        Add (^^SIRC.CNTR (0x02), 0x84, Local0)

  654B: 93 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 02 00 72  // .^^.SIRCCNTR...r
  655B: 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 02 0A 84 60  // ^^.SIRCCNTR....`

                        OperationRegion (ICB1, SystemMemory, Local0, 0x04)

  656B: 5B 80 49 43 42 31 00 60 0A 04                    // [.ICB1.`..

                        Field (ICB1, DWordAcc, NoLock, Preserve)
                        {
                            TEMP,   32
                        }

                        Or (TEMP, 0x03, TEMP)

  6575: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7D 54 45  // [..ICB1.TEMP }TE
  6585: 4D 50 0A 03 54 45 4D 50                          // MP..TEMP

                        Store (TEMP, Local0)
                    }


  658D: 70 54 45 4D 50 60                                // pTEMP`

                    If (CondRefOf (\_SB.PCI0.I2C0.PS3X))
                    {
                        PS3X ()
                    }
                }
            }


  6593: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 49  // ..[.\/._SB_PCI0I
  65A3: 32 43 30 50 53 33 58 00 50 53 33 58              // 2C0PS3X.PS3X

            Device (I2C1)
            {

  65AF: 5B 82 49 33 49 32 43 31                          // [.I3I2C1

                Name (_HID, "INT33C3")  // _HID: Hardware ID

  65B7: 08 5F 48 49 44 0D 49 4E 54 33 33 43 33 00        // ._HID.INT33C3.

                Name (_CID, "INT33C3")  // _CID: Compatible ID

  65C5: 08 5F 43 49 44 0D 49 4E 54 33 33 43 33 00        // ._CID.INT33C3.

                Name (_UID, 0x02)  // _UID: Unique ID

  65D3: 08 5F 55 49 44 0A 02                             // ._UID..

                Name (_ADR, 0x00150002)  // _ADR: Address

  65DA: 08 5F 41 44 52 0C 02 00 15 00                    // ._ADR.....

                Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
                {
                    ADBG ("I2C1 DEP Call")

  65E4: 14 41 05 5F 44 45 50 00 41 44 42 47 0D 49 32 43  // .A._DEP.ADBG.I2C
  65F4: 31 20 44 45 50 20 43 61 6C 6C 00                 // 1 DEP Call.

                    If (LEqual (S0ID, One))
                    {
                        ADBG ("I2C1 DEP")

  65FF: A0 1D 93 53 30 49 44 01 41 44 42 47 0D 49 32 43  // ...S0ID.ADBG.I2C
  660F: 31 20 44 45 50 00                                // 1 DEP.

                        Return (
  6615: A4                                               // .

Package (0x01)
                        {
                            PEPD
                        })
                    }

  6616: 12 06 01 50 45 50 44                             // ...PEPD

                    Else
                    {
                        ADBG ("I2C1 DEP NULL")

  661D: A1 18 41 44 42 47 0D 49 32 43 31 20 44 45 50 20  // ..ADBG.I2C1 DEP 
  662D: 4E 55 4C 4C 00                                   // NULL.

                        Return (
  6632: A4                                               // .

Package (0x00){})
                    }
                }


  6633: 12 02 00                                         // ...

                Method (SSCN, 0, NotSerialized)
                {

  6636: 14 41 04 53 53 43 4E 00                          // .A.SSCN.

                    Name (PKG, 
  663E: 08 50 4B 47 5F                                   // .PKG_

Package (0x03)
                    {
                        0x01B0, 
                        0x01FB, 
                        0x09
                    })
                    Store (SSH1, 
  6643: 12 0A 03 0B B0 01 0B FB 01 0A 09 70 53 53 48 31  // ...........pSSH1

Index (PKG, Zero))
                    Store (SSL1, 
  6653: 88 50 4B 47 5F 00 00 70 53 53 4C 31              // .PKG_..pSSL1

Index (PKG, One))
                    Store (SSD1, 
  665F: 88 50 4B 47 5F 01 00 70 53 53 44 31              // .PKG_..pSSD1

Index (PKG, 0x02))

  666B: 88 50 4B 47 5F 0A 02 00                          // .PKG_...

                    Return (PKG)
                }


  6673: A4 50 4B 47 5F                                   // .PKG_

                Method (FMCN, 0, NotSerialized)
                {

  6678: 14 3E 46 4D 43 4E 00                             // .>FMCN.

                    Name (PKG, 
  667F: 08 50 4B 47 5F                                   // .PKG_

Package (0x03)
                    {
                        0x48, 
                        0xA0, 
                        0x09
                    })
                    Store (FMH1, 
  6684: 12 08 03 0A 48 0A A0 0A 09 70 46 4D 48 31        // ....H....pFMH1

Index (PKG, Zero))
                    Store (FML1, 
  6692: 88 50 4B 47 5F 00 00 70 46 4D 4C 31              // .PKG_..pFML1

Index (PKG, One))
                    Store (FMD1, 
  669E: 88 50 4B 47 5F 01 00 70 46 4D 44 31              // .PKG_..pFMD1

Index (PKG, 0x02))

  66AA: 88 50 4B 47 5F 0A 02 00                          // .PKG_...

                    Return (PKG)
                }


  66B2: A4 50 4B 47 5F                                   // .PKG_

                Method (FPCN, 0, NotSerialized)
                {

  66B7: 14 3E 46 50 43 4E 00                             // .>FPCN.

                    Name (PKG, 
  66BE: 08 50 4B 47 5F                                   // .PKG_

Package (0x03)
                    {
                        0x1A, 
                        0x32, 
                        0x05
                    })
                    Store (FPH1, 
  66C3: 12 08 03 0A 1A 0A 32 0A 05 70 46 50 48 31        // ......2..pFPH1

Index (PKG, Zero))
                    Store (FPL1, 
  66D1: 88 50 4B 47 5F 00 00 70 46 50 4C 31              // .PKG_..pFPL1

Index (PKG, One))
                    Store (FPD1, 
  66DD: 88 50 4B 47 5F 01 00 70 46 50 44 31              // .PKG_..pFPD1

Index (PKG, 0x02))

  66E9: 88 50 4B 47 5F 0A 02 00                          // .PKG_...

                    Return (PKG)
                }


  66F1: A4 50 4B 47 5F                                   // .PKG_

                Method (M0D3, 0, NotSerialized)
                {

  66F6: 14 21 4D 30 44 33 00                             // .!M0D3.

                    Name (PKG, 
  66FD: 08 50 4B 47 5F                                   // .PKG_

Package (0x01)
                    {
                        0xC8
                    })
                    Store (M0C1, 
  6702: 12 04 01 0A C8 70 4D 30 43 31                    // .....pM0C1

Index (PKG, Zero))

  670C: 88 50 4B 47 5F 00 00                             // .PKG_..

                    Return (PKG)
                }


  6713: A4 50 4B 47 5F                                   // .PKG_

                Method (M1D3, 0, NotSerialized)
                {

  6718: 14 22 4D 31 44 33 00                             // ."M1D3.

                    Name (PKG, 
  671F: 08 50 4B 47 5F                                   // .PKG_

Package (0x01)
                    {
                        0x07D0
                    })
                    Store (M1C1, 
  6724: 12 05 01 0B D0 07 70 4D 31 43 31                 // ......pM1C1

Index (PKG, Zero))

  672F: 88 50 4B 47 5F 00 00                             // .PKG_..

                    Return (PKG)
                }


  6736: A4 50 4B 47 5F                                   // .PKG_

                Method (M0D0, 0, NotSerialized)
                {

  673B: 14 20 4D 30 44 30 00                             // . M0D0.

                    Name (PKG, 
  6742: 08 50 4B 47 5F                                   // .PKG_

Package (0x01)
                    {
                        Zero
                    })
                    Store (M2C1, 
  6747: 12 03 01 00 70 4D 32 43 31                       // ....pM2C1

Index (PKG, Zero))

  6750: 88 50 4B 47 5F 00 00                             // .PKG_..

                    Return (PKG)
                }


  6757: A4 50 4B 47 5F                                   // .PKG_

                Name (RBUF, 
  675C: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y21)
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000015,
                    }
                })

  6761: 11 1A 0A 17 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  6771: 89 06 00 0D 01 15 00 00 00 79 00                 // .........y.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  677C: 14 3F 5F 43 52 53 00                             // .?_CRS.

                    Name (DBUF, 
  6783: 08 44 42 55 46                                   // .DBUF

ResourceTemplate ()
                    {
                        FixedDMA (0x001A, 0x0006, Width32bit, )
                        FixedDMA (0x001B, 0x0007, Width32bit, )
                    })

  6788: 11 11 0A 0E 55 1A 00 06 00 02 55 1B 00 07 00 02  // ....U.....U.....
  6798: 79 00                                            // y.

                    If (
  679A: A0 1A 92                                         // ...

LNotEqual (^^SDMA._STA (), Zero))
                    {

  679D: 93 5E 5E 2E 53 44 4D 41 5F 53 54 41 00           // .^^.SDMA_STA.

                        Return (
  67AA: A4                                               // .

ConcatenateResTemplate (RBUF, DBUF))
                    }

  67AB: 84 52 42 55 46 44 42 55 46 00                    // .RBUFDBUF.

                    Else
                    {

  67B5: A1 06                                            // ..

                        Return (RBUF)
                    }
                }


  67B7: A4 52 42 55 46                                   // .RBUF

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  67BC: 14 0B 5F 48 52 56 00                             // .._HRV.

                    Return (CRID)
                }


  67C3: A4 43 52 49 44                                   // .CRID

                CreateDWordField (RBUF, \_SB.PCI0.I2C1._Y21._BAS, BVAL)  // _BAS: Base Address

  67C8: 8A 52 42 55 46 0A 04 42 56 41 4C                 // .RBUF..BVAL

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  67D3: 14 29 5F 53 54 41 00                             // .)_STA.

                    If (LEqual (BVAL, Zero))
                    {

  67DA: A0 09 93 42 56 41 4C 00                          // ...BVAL.

                        Return (Zero)
                    }


  67E2: A4 00                                            // ..

                    If (LLess (OSYS, 0x07DC))
                    {

  67E4: A0 0B 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                        Return (Zero)
                    }


  67EE: A4 00                                            // ..

                    If (LEqual (S0ID, One))
                    {

  67F0: A0 0A 93 53 30 49 44 01                          // ...S0ID.

                        Return (0x0F)
                    }


  67F8: A4 0A 0F                                         // ...

                    Return (Zero)
                }


  67FB: A4 00                                            // ..

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    ADBG ("I2C1 Ctrlr D0")

  67FD: 14 45 08 5F 50 53 30 08 41 44 42 47 0D 49 32 43  // .E._PS0.ADBG.I2C
  680D: 31 20 43 74 72 6C 72 20 44 30 00                 // 1 Ctrlr D0.

                    If (
  6818: A0 4A 06 92                                      // .J..

LNotEqual (^^SIRC.CNTR (0x03), Zero))
                    {

  681C: 93 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 03 00     // .^^.SIRCCNTR...

                        If (CondRefOf (\_SB.PCI0.I2C1.PS0X))
                        {
                            PS0X ()
                        }

                        Add (^^SIRC.CNTR (0x03), 0x84, Local0)

  682B: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 49  // ..[.\/._SB_PCI0I
  683B: 32 43 31 50 53 30 58 00 50 53 30 58 72 5E 5E 2E  // 2C1PS0X.PS0Xr^^.
  684B: 53 49 52 43 43 4E 54 52 0A 03 0A 84 60           // SIRCCNTR....`

                        OperationRegion (ICB1, SystemMemory, Local0, 0x04)

  6858: 5B 80 49 43 42 31 00 60 0A 04                    // [.ICB1.`..

                        Field (ICB1, DWordAcc, NoLock, Preserve)
                        {
                            TEMP,   32
                        }

                        And (TEMP, 0xFFFFFFFC, TEMP)

  6862: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7B 54 45  // [..ICB1.TEMP {TE
  6872: 4D 50 0C FC FF FF FF 54 45 4D 50                 // MP.....TEMP

                        Store (TEMP, Local0)
                    }
                }


  687D: 70 54 45 4D 50 60                                // pTEMP`

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    ADBG ("I2C1 Ctrlr D3")

  6883: 14 46 06 5F 50 53 33 08 41 44 42 47 0D 49 32 43  // .F._PS3.ADBG.I2C
  6893: 31 20 43 74 72 6C 72 20 44 33 00                 // 1 Ctrlr D3.

                    If (
  689E: A0 4B 04 92                                      // .K..

LNotEqual (^^SIRC.CNTR (0x03), Zero))
                    {
                        Add (^^SIRC.CNTR (0x03), 0x84, Local0)

  68A2: 93 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 03 00 72  // .^^.SIRCCNTR...r
  68B2: 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 03 0A 84 60  // ^^.SIRCCNTR....`

                        OperationRegion (ICB1, SystemMemory, Local0, 0x04)

  68C2: 5B 80 49 43 42 31 00 60 0A 04                    // [.ICB1.`..

                        Field (ICB1, DWordAcc, NoLock, Preserve)
                        {
                            TEMP,   32
                        }

                        Or (TEMP, 0x03, TEMP)

  68CC: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7D 54 45  // [..ICB1.TEMP }TE
  68DC: 4D 50 0A 03 54 45 4D 50                          // MP..TEMP

                        Store (TEMP, Local0)
                    }
                }
            }


  68E4: 70 54 45 4D 50 60                                // pTEMP`

            Device (SPI0)
            {

  68EA: 5B 82 45 1B 53 50 49 30                          // [.E.SPI0

                Name (_HID, "INT33C0")  // _HID: Hardware ID

  68F2: 08 5F 48 49 44 0D 49 4E 54 33 33 43 30 00        // ._HID.INT33C0.

                Name (_CID, "INT33C0")  // _CID: Compatible ID

  6900: 08 5F 43 49 44 0D 49 4E 54 33 33 43 30 00        // ._CID.INT33C0.

                Name (_UID, One)  // _UID: Unique ID

  690E: 08 5F 55 49 44 01                                // ._UID.

                Name (_ADR, 0x00150003)  // _ADR: Address

  6914: 08 5F 41 44 52 0C 03 00 15 00                    // ._ADR.....

                Method (M0D3, 0, NotSerialized)
                {

  691E: 14 21 4D 30 44 33 00                             // .!M0D3.

                    Name (PKG, 
  6925: 08 50 4B 47 5F                                   // .PKG_

Package (0x01)
                    {
                        0xC8
                    })
                    Store (M0C2, 
  692A: 12 04 01 0A C8 70 4D 30 43 32                    // .....pM0C2

Index (PKG, Zero))

  6934: 88 50 4B 47 5F 00 00                             // .PKG_..

                    Return (PKG)
                }


  693B: A4 50 4B 47 5F                                   // .PKG_

                Method (M1D3, 0, NotSerialized)
                {

  6940: 14 22 4D 31 44 33 00                             // ."M1D3.

                    Name (PKG, 
  6947: 08 50 4B 47 5F                                   // .PKG_

Package (0x01)
                    {
                        0x07D0
                    })
                    Store (M1C2, 
  694C: 12 05 01 0B D0 07 70 4D 31 43 32                 // ......pM1C2

Index (PKG, Zero))

  6957: 88 50 4B 47 5F 00 00                             // .PKG_..

                    Return (PKG)
                }


  695E: A4 50 4B 47 5F                                   // .PKG_

                Name (RBUF, 
  6963: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y22)
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000015,
                    }
                })

  6968: 11 1A 0A 17 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  6978: 89 06 00 0D 01 15 00 00 00 79 00                 // .........y.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  6983: 14 0B 5F 43 52 53 00                             // .._CRS.

                    Return (RBUF)
                }


  698A: A4 52 42 55 46                                   // .RBUF

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  698F: 14 0B 5F 48 52 56 00                             // .._HRV.

                    Return (CRID)
                }


  6996: A4 43 52 49 44                                   // .CRID

                CreateDWordField (RBUF, \_SB.PCI0.SPI0._Y22._BAS, BVAL)  // _BAS: Base Address

  699B: 8A 52 42 55 46 0A 04 42 56 41 4C                 // .RBUF..BVAL

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  69A6: 14 29 5F 53 54 41 00                             // .)_STA.

                    If (LEqual (BVAL, Zero))
                    {

  69AD: A0 09 93 42 56 41 4C 00                          // ...BVAL.

                        Return (Zero)
                    }


  69B5: A4 00                                            // ..

                    If (LLess (OSYS, 0x07DC))
                    {

  69B7: A0 0B 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                        Return (Zero)
                    }


  69C1: A4 00                                            // ..

                    If (LEqual (S0ID, One))
                    {

  69C3: A0 0A 93 53 30 49 44 01                          // ...S0ID.

                        Return (0x0F)
                    }


  69CB: A4 0A 0F                                         // ...

                    Return (Zero)
                }


  69CE: A4 00                                            // ..

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    ADBG ("SPI0 Ctrlr D0")

  69D0: 14 49 06 5F 50 53 30 08 41 44 42 47 0D 53 50 49  // .I._PS0.ADBG.SPI
  69E0: 30 20 43 74 72 6C 72 20 44 30 00                 // 0 Ctrlr D0.

                    If (
  69EB: A0 4E 04 92                                      // .N..

LNotEqual (^^SIRC.CNTR (0x04), Zero))
                    {
                        Add (^^SIRC.CNTR (0x04), 0x84, Local0)

  69EF: 93 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 04 00 72  // .^^.SIRCCNTR...r
  69FF: 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 04 0A 84 60  // ^^.SIRCCNTR....`

                        OperationRegion (ICB1, SystemMemory, Local0, 0x04)

  6A0F: 5B 80 49 43 42 31 00 60 0A 04                    // [.ICB1.`..

                        Field (ICB1, DWordAcc, NoLock, Preserve)
                        {
                            TEMP,   32
                        }

                        And (TEMP, 0xFFFFFFFC, TEMP)

  6A19: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7B 54 45  // [..ICB1.TEMP {TE
  6A29: 4D 50 0C FC FF FF FF 54 45 4D 50                 // MP.....TEMP

                        Store (TEMP, Local0)
                    }
                }


  6A34: 70 54 45 4D 50 60                                // pTEMP`

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    ADBG ("SPI0 Ctrlr D3")

  6A3A: 14 46 06 5F 50 53 33 08 41 44 42 47 0D 53 50 49  // .F._PS3.ADBG.SPI
  6A4A: 30 20 43 74 72 6C 72 20 44 33 00                 // 0 Ctrlr D3.

                    If (
  6A55: A0 4B 04 92                                      // .K..

LNotEqual (^^SIRC.CNTR (0x04), Zero))
                    {
                        Add (^^SIRC.CNTR (0x04), 0x84, Local0)

  6A59: 93 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 04 00 72  // .^^.SIRCCNTR...r
  6A69: 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 04 0A 84 60  // ^^.SIRCCNTR....`

                        OperationRegion (ICB1, SystemMemory, Local0, 0x04)

  6A79: 5B 80 49 43 42 31 00 60 0A 04                    // [.ICB1.`..

                        Field (ICB1, DWordAcc, NoLock, Preserve)
                        {
                            TEMP,   32
                        }

                        Or (TEMP, 0x03, TEMP)

  6A83: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7D 54 45  // [..ICB1.TEMP }TE
  6A93: 4D 50 0A 03 54 45 4D 50                          // MP..TEMP

                        Store (TEMP, Local0)
                    }
                }
            }


  6A9B: 70 54 45 4D 50 60                                // pTEMP`

            Device (SPI1)
            {

  6AA1: 5B 82 4A 1E 53 50 49 31                          // [.J.SPI1

                Name (_HID, "INT33C1")  // _HID: Hardware ID

  6AA9: 08 5F 48 49 44 0D 49 4E 54 33 33 43 31 00        // ._HID.INT33C1.

                Name (_CID, "INT33C1")  // _CID: Compatible ID

  6AB7: 08 5F 43 49 44 0D 49 4E 54 33 33 43 31 00        // ._CID.INT33C1.

                Name (_UID, 0x02)  // _UID: Unique ID

  6AC5: 08 5F 55 49 44 0A 02                             // ._UID..

                Name (_ADR, 0x00150004)  // _ADR: Address

  6ACC: 08 5F 41 44 52 0C 04 00 15 00                    // ._ADR.....

                Method (M0D3, 0, NotSerialized)
                {

  6AD6: 14 21 4D 30 44 33 00                             // .!M0D3.

                    Name (PKG, 
  6ADD: 08 50 4B 47 5F                                   // .PKG_

Package (0x01)
                    {
                        0xC8
                    })
                    Store (M0C3, 
  6AE2: 12 04 01 0A C8 70 4D 30 43 33                    // .....pM0C3

Index (PKG, Zero))

  6AEC: 88 50 4B 47 5F 00 00                             // .PKG_..

                    Return (PKG)
                }


  6AF3: A4 50 4B 47 5F                                   // .PKG_

                Method (M1D3, 0, NotSerialized)
                {

  6AF8: 14 22 4D 31 44 33 00                             // ."M1D3.

                    Name (PKG, 
  6AFF: 08 50 4B 47 5F                                   // .PKG_

Package (0x01)
                    {
                        0x07D0
                    })
                    Store (M1C3, 
  6B04: 12 05 01 0B D0 07 70 4D 31 43 33                 // ......pM1C3

Index (PKG, Zero))

  6B0F: 88 50 4B 47 5F 00 00                             // .PKG_..

                    Return (PKG)
                }


  6B16: A4 50 4B 47 5F                                   // .PKG_

                Name (RBUF, 
  6B1B: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y23)
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000015,
                    }
                })

  6B20: 11 1A 0A 17 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  6B30: 89 06 00 0D 01 15 00 00 00 79 00                 // .........y.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  6B3B: 14 3F 5F 43 52 53 00                             // .?_CRS.

                    Name (DBUF, 
  6B42: 08 44 42 55 46                                   // .DBUF

ResourceTemplate ()
                    {
                        FixedDMA (0x0010, 0x0000, Width32bit, )
                        FixedDMA (0x0011, 0x0001, Width32bit, )
                    })

  6B47: 11 11 0A 0E 55 10 00 00 00 02 55 11 00 01 00 02  // ....U.....U.....
  6B57: 79 00                                            // y.

                    If (
  6B59: A0 1A 92                                         // ...

LNotEqual (^^SDMA._STA (), Zero))
                    {

  6B5C: 93 5E 5E 2E 53 44 4D 41 5F 53 54 41 00           // .^^.SDMA_STA.

                        Return (
  6B69: A4                                               // .

ConcatenateResTemplate (RBUF, DBUF))
                    }

  6B6A: 84 52 42 55 46 44 42 55 46 00                    // .RBUFDBUF.

                    Else
                    {

  6B74: A1 06                                            // ..

                        Return (RBUF)
                    }
                }


  6B76: A4 52 42 55 46                                   // .RBUF

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  6B7B: 14 0B 5F 48 52 56 00                             // .._HRV.

                    Return (CRID)
                }


  6B82: A4 43 52 49 44                                   // .CRID

                CreateDWordField (RBUF, \_SB.PCI0.SPI1._Y23._BAS, BVAL)  // _BAS: Base Address

  6B87: 8A 52 42 55 46 0A 04 42 56 41 4C                 // .RBUF..BVAL

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  6B92: 14 29 5F 53 54 41 00                             // .)_STA.

                    If (LEqual (BVAL, Zero))
                    {

  6B99: A0 09 93 42 56 41 4C 00                          // ...BVAL.

                        Return (Zero)
                    }


  6BA1: A4 00                                            // ..

                    If (LLess (OSYS, 0x07DC))
                    {

  6BA3: A0 0B 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                        Return (Zero)
                    }


  6BAD: A4 00                                            // ..

                    If (LEqual (S0ID, One))
                    {

  6BAF: A0 0A 93 53 30 49 44 01                          // ...S0ID.

                        Return (0x0F)
                    }


  6BB7: A4 0A 0F                                         // ...

                    Return (Zero)
                }


  6BBA: A4 00                                            // ..

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    ADBG ("SPI1 Ctrlr D0")

  6BBC: 14 49 06 5F 50 53 30 08 41 44 42 47 0D 53 50 49  // .I._PS0.ADBG.SPI
  6BCC: 31 20 43 74 72 6C 72 20 44 30 00                 // 1 Ctrlr D0.

                    If (
  6BD7: A0 4E 04 92                                      // .N..

LNotEqual (^^SIRC.CNTR (0x05), Zero))
                    {
                        Add (^^SIRC.CNTR (0x05), 0x84, Local0)

  6BDB: 93 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 05 00 72  // .^^.SIRCCNTR...r
  6BEB: 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 05 0A 84 60  // ^^.SIRCCNTR....`

                        OperationRegion (ICB1, SystemMemory, Local0, 0x04)

  6BFB: 5B 80 49 43 42 31 00 60 0A 04                    // [.ICB1.`..

                        Field (ICB1, DWordAcc, NoLock, Preserve)
                        {
                            TEMP,   32
                        }

                        And (TEMP, 0xFFFFFFFC, TEMP)

  6C05: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7B 54 45  // [..ICB1.TEMP {TE
  6C15: 4D 50 0C FC FF FF FF 54 45 4D 50                 // MP.....TEMP

                        Store (TEMP, Local0)
                    }
                }


  6C20: 70 54 45 4D 50 60                                // pTEMP`

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    ADBG ("SPI1 Ctrlr D3")

  6C26: 14 46 06 5F 50 53 33 08 41 44 42 47 0D 53 50 49  // .F._PS3.ADBG.SPI
  6C36: 31 20 43 74 72 6C 72 20 44 33 00                 // 1 Ctrlr D3.

                    If (
  6C41: A0 4B 04 92                                      // .K..

LNotEqual (^^SIRC.CNTR (0x05), Zero))
                    {
                        Add (^^SIRC.CNTR (0x05), 0x84, Local0)

  6C45: 93 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 05 00 72  // .^^.SIRCCNTR...r
  6C55: 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 05 0A 84 60  // ^^.SIRCCNTR....`

                        OperationRegion (ICB1, SystemMemory, Local0, 0x04)

  6C65: 5B 80 49 43 42 31 00 60 0A 04                    // [.ICB1.`..

                        Field (ICB1, DWordAcc, NoLock, Preserve)
                        {
                            TEMP,   32
                        }

                        Or (TEMP, 0x03, TEMP)

  6C6F: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7D 54 45  // [..ICB1.TEMP }TE
  6C7F: 4D 50 0A 03 54 45 4D 50                          // MP..TEMP

                        Store (TEMP, Local0)
                    }
                }
            }


  6C87: 70 54 45 4D 50 60                                // pTEMP`

            Device (UA00)
            {

  6C8D: 5B 82 46 20 55 41 30 30                          // [.F UA00

                Name (_HID, "INT33C4")  // _HID: Hardware ID

  6C95: 08 5F 48 49 44 0D 49 4E 54 33 33 43 34 00        // ._HID.INT33C4.

                Name (_CID, "INT33C4")  // _CID: Compatible ID

  6CA3: 08 5F 43 49 44 0D 49 4E 54 33 33 43 34 00        // ._CID.INT33C4.

                Name (_UID, One)  // _UID: Unique ID

  6CB1: 08 5F 55 49 44 01                                // ._UID.

                Name (_ADR, 0x00150005)  // _ADR: Address

  6CB7: 08 5F 41 44 52 0C 05 00 15 00                    // ._ADR.....

                Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
                {
                    ADBG ("UA00 DEP Call")

  6CC1: 14 41 05 5F 44 45 50 00 41 44 42 47 0D 55 41 30  // .A._DEP.ADBG.UA0
  6CD1: 30 20 44 45 50 20 43 61 6C 6C 00                 // 0 DEP Call.

                    If (LEqual (S0ID, One))
                    {
                        ADBG ("UA00 DEP")

  6CDC: A0 1D 93 53 30 49 44 01 41 44 42 47 0D 55 41 30  // ...S0ID.ADBG.UA0
  6CEC: 30 20 44 45 50 00                                // 0 DEP.

                        Return (
  6CF2: A4                                               // .

Package (0x01)
                        {
                            PEPD
                        })
                    }

  6CF3: 12 06 01 50 45 50 44                             // ...PEPD

                    Else
                    {
                        ADBG ("UA00 DEP NULL")

  6CFA: A1 18 41 44 42 47 0D 55 41 30 30 20 44 45 50 20  // ..ADBG.UA00 DEP 
  6D0A: 4E 55 4C 4C 00                                   // NULL.

                        Return (
  6D0F: A4                                               // .

Package (0x00){})
                    }
                }


  6D10: 12 02 00                                         // ...

                Method (M0D3, 0, NotSerialized)
                {

  6D13: 14 21 4D 30 44 33 00                             // .!M0D3.

                    Name (PKG, 
  6D1A: 08 50 4B 47 5F                                   // .PKG_

Package (0x01)
                    {
                        0xC8
                    })
                    Store (M0C4, 
  6D1F: 12 04 01 0A C8 70 4D 30 43 34                    // .....pM0C4

Index (PKG, Zero))

  6D29: 88 50 4B 47 5F 00 00                             // .PKG_..

                    Return (PKG)
                }


  6D30: A4 50 4B 47 5F                                   // .PKG_

                Method (M1D3, 0, NotSerialized)
                {

  6D35: 14 21 4D 31 44 33 00                             // .!M1D3.

                    Name (PKG, 
  6D3C: 08 50 4B 47 5F                                   // .PKG_

Package (0x01)
                    {
                        0xC8
                    })
                    Store (M1C4, 
  6D41: 12 04 01 0A C8 70 4D 31 43 34                    // .....pM1C4

Index (PKG, Zero))

  6D4B: 88 50 4B 47 5F 00 00                             // .PKG_..

                    Return (PKG)
                }


  6D52: A4 50 4B 47 5F                                   // .PKG_

                Name (RBUF, 
  6D57: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y24)
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000015,
                    }
                })

  6D5C: 11 1A 0A 17 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  6D6C: 89 06 00 0D 01 15 00 00 00 79 00                 // .........y.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  6D77: 14 0B 5F 43 52 53 00                             // .._CRS.

                    Return (RBUF)
                }


  6D7E: A4 52 42 55 46                                   // .RBUF

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  6D83: 14 0B 5F 48 52 56 00                             // .._HRV.

                    Return (CRID)
                }


  6D8A: A4 43 52 49 44                                   // .CRID

                CreateDWordField (RBUF, \_SB.PCI0.UA00._Y24._BAS, BVAL)  // _BAS: Base Address

  6D8F: 8A 52 42 55 46 0A 04 42 56 41 4C                 // .RBUF..BVAL

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  6D9A: 14 29 5F 53 54 41 00                             // .)_STA.

                    If (LEqual (BVAL, Zero))
                    {

  6DA1: A0 09 93 42 56 41 4C 00                          // ...BVAL.

                        Return (Zero)
                    }


  6DA9: A4 00                                            // ..

                    If (LLess (OSYS, 0x07DC))
                    {

  6DAB: A0 0B 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                        Return (Zero)
                    }


  6DB5: A4 00                                            // ..

                    If (LEqual (S0ID, One))
                    {

  6DB7: A0 0A 93 53 30 49 44 01                          // ...S0ID.

                        Return (0x0F)
                    }


  6DBF: A4 0A 0F                                         // ...

                    Return (Zero)
                }


  6DC2: A4 00                                            // ..

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    ADBG ("UAR0 Ctrlr D0")

  6DC4: 14 49 06 5F 50 53 30 08 41 44 42 47 0D 55 41 52  // .I._PS0.ADBG.UAR
  6DD4: 30 20 43 74 72 6C 72 20 44 30 00                 // 0 Ctrlr D0.

                    If (
  6DDF: A0 4E 04 92                                      // .N..

LNotEqual (^^SIRC.CNTR (0x06), Zero))
                    {
                        Add (^^SIRC.CNTR (0x06), 0x84, Local0)

  6DE3: 93 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 06 00 72  // .^^.SIRCCNTR...r
  6DF3: 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 06 0A 84 60  // ^^.SIRCCNTR....`

                        OperationRegion (ICB1, SystemMemory, Local0, 0x04)

  6E03: 5B 80 49 43 42 31 00 60 0A 04                    // [.ICB1.`..

                        Field (ICB1, DWordAcc, NoLock, Preserve)
                        {
                            TEMP,   32
                        }

                        And (TEMP, 0xFFFFFFFC, TEMP)

  6E0D: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7B 54 45  // [..ICB1.TEMP {TE
  6E1D: 4D 50 0C FC FF FF FF 54 45 4D 50                 // MP.....TEMP

                        Store (TEMP, Local0)
                    }
                }


  6E28: 70 54 45 4D 50 60                                // pTEMP`

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    ADBG ("UAR0 Ctrlr D3")

  6E2E: 14 46 06 5F 50 53 33 08 41 44 42 47 0D 55 41 52  // .F._PS3.ADBG.UAR
  6E3E: 30 20 43 74 72 6C 72 20 44 33 00                 // 0 Ctrlr D3.

                    If (
  6E49: A0 4B 04 92                                      // .K..

LNotEqual (^^SIRC.CNTR (0x06), Zero))
                    {
                        Add (^^SIRC.CNTR (0x06), 0x84, Local0)

  6E4D: 93 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 06 00 72  // .^^.SIRCCNTR...r
  6E5D: 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 06 0A 84 60  // ^^.SIRCCNTR....`

                        OperationRegion (ICB1, SystemMemory, Local0, 0x04)

  6E6D: 5B 80 49 43 42 31 00 60 0A 04                    // [.ICB1.`..

                        Field (ICB1, DWordAcc, NoLock, Preserve)
                        {
                            TEMP,   32
                        }

                        Or (TEMP, 0x03, TEMP)

  6E77: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7D 54 45  // [..ICB1.TEMP }TE
  6E87: 4D 50 0A 03 54 45 4D 50                          // MP..TEMP

                        Store (TEMP, Local0)
                    }
                }
            }


  6E8F: 70 54 45 4D 50 60                                // pTEMP`

            Device (UA01)
            {

  6E95: 5B 82 4B 23 55 41 30 31                          // [.K#UA01

                Name (_HID, "INT33C5")  // _HID: Hardware ID

  6E9D: 08 5F 48 49 44 0D 49 4E 54 33 33 43 35 00        // ._HID.INT33C5.

                Name (_CID, "INT33C5")  // _CID: Compatible ID

  6EAB: 08 5F 43 49 44 0D 49 4E 54 33 33 43 35 00        // ._CID.INT33C5.

                Name (_UID, 0x02)  // _UID: Unique ID

  6EB9: 08 5F 55 49 44 0A 02                             // ._UID..

                Name (_ADR, 0x00150006)  // _ADR: Address

  6EC0: 08 5F 41 44 52 0C 06 00 15 00                    // ._ADR.....

                Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
                {
                    ADBG ("UA01 DEP Call")

  6ECA: 14 41 05 5F 44 45 50 00 41 44 42 47 0D 55 41 30  // .A._DEP.ADBG.UA0
  6EDA: 31 20 44 45 50 20 43 61 6C 6C 00                 // 1 DEP Call.

                    If (LEqual (S0ID, One))
                    {
                        ADBG ("UA01 DEP")

  6EE5: A0 1D 93 53 30 49 44 01 41 44 42 47 0D 55 41 30  // ...S0ID.ADBG.UA0
  6EF5: 31 20 44 45 50 00                                // 1 DEP.

                        Return (
  6EFB: A4                                               // .

Package (0x01)
                        {
                            PEPD
                        })
                    }

  6EFC: 12 06 01 50 45 50 44                             // ...PEPD

                    Else
                    {
                        ADBG ("UA01 DEP NULL")

  6F03: A1 18 41 44 42 47 0D 55 41 30 31 20 44 45 50 20  // ..ADBG.UA01 DEP 
  6F13: 4E 55 4C 4C 00                                   // NULL.

                        Return (
  6F18: A4                                               // .

Package (0x00){})
                    }
                }


  6F19: 12 02 00                                         // ...

                Method (M0D3, 0, NotSerialized)
                {

  6F1C: 14 21 4D 30 44 33 00                             // .!M0D3.

                    Name (PKG, 
  6F23: 08 50 4B 47 5F                                   // .PKG_

Package (0x01)
                    {
                        0xC8
                    })
                    Store (M0C5, 
  6F28: 12 04 01 0A C8 70 4D 30 43 35                    // .....pM0C5

Index (PKG, Zero))

  6F32: 88 50 4B 47 5F 00 00                             // .PKG_..

                    Return (PKG)
                }


  6F39: A4 50 4B 47 5F                                   // .PKG_

                Method (M1D3, 0, NotSerialized)
                {

  6F3E: 14 21 4D 31 44 33 00                             // .!M1D3.

                    Name (PKG, 
  6F45: 08 50 4B 47 5F                                   // .PKG_

Package (0x01)
                    {
                        0xC8
                    })
                    Store (M1C5, 
  6F4A: 12 04 01 0A C8 70 4D 31 43 35                    // .....pM1C5

Index (PKG, Zero))

  6F54: 88 50 4B 47 5F 00 00                             // .PKG_..

                    Return (PKG)
                }


  6F5B: A4 50 4B 47 5F                                   // .PKG_

                Name (RBUF, 
  6F60: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y25)
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000015,
                    }
                })

  6F65: 11 1A 0A 17 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  6F75: 89 06 00 0D 01 15 00 00 00 79 00                 // .........y.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  6F80: 14 3F 5F 43 52 53 00                             // .?_CRS.

                    Name (DBUF, 
  6F87: 08 44 42 55 46                                   // .DBUF

ResourceTemplate ()
                    {
                        FixedDMA (0x0016, 0x0002, Width32bit, )
                        FixedDMA (0x0017, 0x0003, Width32bit, )
                    })

  6F8C: 11 11 0A 0E 55 16 00 02 00 02 55 17 00 03 00 02  // ....U.....U.....
  6F9C: 79 00                                            // y.

                    If (
  6F9E: A0 1A 92                                         // ...

LNotEqual (^^SDMA._STA (), Zero))
                    {

  6FA1: 93 5E 5E 2E 53 44 4D 41 5F 53 54 41 00           // .^^.SDMA_STA.

                        Return (
  6FAE: A4                                               // .

ConcatenateResTemplate (RBUF, DBUF))
                    }

  6FAF: 84 52 42 55 46 44 42 55 46 00                    // .RBUFDBUF.

                    Else
                    {

  6FB9: A1 06                                            // ..

                        Return (RBUF)
                    }
                }


  6FBB: A4 52 42 55 46                                   // .RBUF

                Method (_HRV, 0, NotSerialized)  // _HRV: Hardware Revision
                {

  6FC0: 14 0B 5F 48 52 56 00                             // .._HRV.

                    Return (CRID)
                }


  6FC7: A4 43 52 49 44                                   // .CRID

                CreateDWordField (RBUF, \_SB.PCI0.UA01._Y25._BAS, BVAL)  // _BAS: Base Address

  6FCC: 8A 52 42 55 46 0A 04 42 56 41 4C                 // .RBUF..BVAL

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  6FD7: 14 29 5F 53 54 41 00                             // .)_STA.

                    If (LEqual (BVAL, Zero))
                    {

  6FDE: A0 09 93 42 56 41 4C 00                          // ...BVAL.

                        Return (Zero)
                    }


  6FE6: A4 00                                            // ..

                    If (LLess (OSYS, 0x07DC))
                    {

  6FE8: A0 0B 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                        Return (Zero)
                    }


  6FF2: A4 00                                            // ..

                    If (LEqual (S0ID, One))
                    {

  6FF4: A0 0A 93 53 30 49 44 01                          // ...S0ID.

                        Return (0x0F)
                    }


  6FFC: A4 0A 0F                                         // ...

                    Return (Zero)
                }


  6FFF: A4 00                                            // ..

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    ADBG ("UAR1 Ctrlr D0")

  7001: 14 49 06 5F 50 53 30 08 41 44 42 47 0D 55 41 52  // .I._PS0.ADBG.UAR
  7011: 31 20 43 74 72 6C 72 20 44 30 00                 // 1 Ctrlr D0.

                    If (
  701C: A0 4E 04 92                                      // .N..

LNotEqual (^^SIRC.CNTR (0x07), Zero))
                    {
                        Add (^^SIRC.CNTR (0x07), 0x84, Local0)

  7020: 93 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 07 00 72  // .^^.SIRCCNTR...r
  7030: 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 07 0A 84 60  // ^^.SIRCCNTR....`

                        OperationRegion (ICB1, SystemMemory, Local0, 0x04)

  7040: 5B 80 49 43 42 31 00 60 0A 04                    // [.ICB1.`..

                        Field (ICB1, DWordAcc, NoLock, Preserve)
                        {
                            TEMP,   32
                        }

                        And (TEMP, 0xFFFFFFFC, TEMP)

  704A: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7B 54 45  // [..ICB1.TEMP {TE
  705A: 4D 50 0C FC FF FF FF 54 45 4D 50                 // MP.....TEMP

                        Store (TEMP, Local0)
                    }
                }


  7065: 70 54 45 4D 50 60                                // pTEMP`

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    ADBG ("UAR1 Ctrlr D3")

  706B: 14 46 06 5F 50 53 33 08 41 44 42 47 0D 55 41 52  // .F._PS3.ADBG.UAR
  707B: 31 20 43 74 72 6C 72 20 44 33 00                 // 1 Ctrlr D3.

                    If (
  7086: A0 4B 04 92                                      // .K..

LNotEqual (^^SIRC.CNTR (0x07), Zero))
                    {
                        Add (^^SIRC.CNTR (0x07), 0x84, Local0)

  708A: 93 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 07 00 72  // .^^.SIRCCNTR...r
  709A: 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 07 0A 84 60  // ^^.SIRCCNTR....`

                        OperationRegion (ICB1, SystemMemory, Local0, 0x04)

  70AA: 5B 80 49 43 42 31 00 60 0A 04                    // [.ICB1.`..

                        Field (ICB1, DWordAcc, NoLock, Preserve)
                        {
                            TEMP,   32
                        }

                        Or (TEMP, 0x03, TEMP)

  70B4: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7D 54 45  // [..ICB1.TEMP }TE
  70C4: 4D 50 0A 03 54 45 4D 50                          // MP..TEMP

                        Store (TEMP, Local0)
                    }
                }
            }


  70CC: 70 54 45 4D 50 60                                // pTEMP`

            Device (SDHC)
            {

  70D2: 5B 82 42 1D 53 44 48 43                          // [.B.SDHC

                Name (_HID, "INT33C6")  // _HID: Hardware ID

  70DA: 08 5F 48 49 44 0D 49 4E 54 33 33 43 36 00        // ._HID.INT33C6.

                Name (_CID, "PNP0D40")  // _CID: Compatible ID

  70E8: 08 5F 43 49 44 0D 50 4E 50 30 44 34 30 00        // ._CID.PNP0D40.

                Name (_UID, One)  // _UID: Unique ID

  70F6: 08 5F 55 49 44 01                                // ._UID.

                Name (_ADR, 0x00170000)  // _ADR: Address

  70FC: 08 5F 41 44 52 0C 00 00 17 00                    // ._ADR.....

                Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
                {
                    ADBG ("SDHC DEP Call")

  7106: 14 41 05 5F 44 45 50 00 41 44 42 47 0D 53 44 48  // .A._DEP.ADBG.SDH
  7116: 43 20 44 45 50 20 43 61 6C 6C 00                 // C DEP Call.

                    If (LEqual (S0ID, One))
                    {
                        ADBG ("SDHC DEP")

  7121: A0 1D 93 53 30 49 44 01 41 44 42 47 0D 53 44 48  // ...S0ID.ADBG.SDH
  7131: 43 20 44 45 50 00                                // C DEP.

                        Return (
  7137: A4                                               // .

Package (0x01)
                        {
                            PEPD
                        })
                    }

  7138: 12 06 01 50 45 50 44                             // ...PEPD

                    Else
                    {
                        ADBG ("SDHC DEP NULL")

  713F: A1 18 41 44 42 47 0D 53 44 48 43 20 44 45 50 20  // ..ADBG.SDHC DEP 
  714F: 4E 55 4C 4C 00                                   // NULL.

                        Return (
  7154: A4                                               // .

Package (0x00){})
                    }
                }


  7155: 12 02 00                                         // ...

                Name (RBUF, 
  7158: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00001000,         // Address Length
                        _Y26)
                    Interrupt (ResourceConsumer, Level, ActiveLow, Shared, ,, )
                    {
                        0x00000016,
                    }
                })

  715D: 11 1A 0A 17 86 09 00 01 00 00 00 00 00 10 00 00  // ................
  716D: 89 06 00 0D 01 16 00 00 00 79 00                 // .........y.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  7178: 14 0B 5F 43 52 53 00                             // .._CRS.

                    Return (RBUF)
                }


  717F: A4 52 42 55 46                                   // .RBUF

                CreateDWordField (RBUF, \_SB.PCI0.SDHC._Y26._BAS, BVAL)  // _BAS: Base Address

  7184: 8A 52 42 55 46 0A 04 42 56 41 4C                 // .RBUF..BVAL

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  718F: 14 29 5F 53 54 41 00                             // .)_STA.

                    If (LEqual (BVAL, Zero))
                    {

  7196: A0 09 93 42 56 41 4C 00                          // ...BVAL.

                        Return (Zero)
                    }


  719E: A4 00                                            // ..

                    If (LLess (OSYS, 0x07DC))
                    {

  71A0: A0 0B 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                        Return (Zero)
                    }


  71AA: A4 00                                            // ..

                    If (LEqual (S0ID, One))
                    {

  71AC: A0 0A 93 53 30 49 44 01                          // ...S0ID.

                        Return (0x0F)
                    }


  71B4: A4 0A 0F                                         // ...

                    Return (Zero)
                }


  71B7: A4 00                                            // ..

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    ADBG ("SDHC Ctrlr D0")

  71B9: 14 45 08 5F 50 53 30 08 41 44 42 47 0D 53 44 48  // .E._PS0.ADBG.SDH
  71C9: 43 20 43 74 72 6C 72 20 44 30 00                 // C Ctrlr D0.

                    If (
  71D4: A0 4E 04 92                                      // .N..

LNotEqual (^^SIRC.CNTR (0x08), Zero))
                    {
                        Add (^^SIRC.CNTR (0x08), 0x84, Local0)

  71D8: 93 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 08 00 72  // .^^.SIRCCNTR...r
  71E8: 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 08 0A 84 60  // ^^.SIRCCNTR....`

                        OperationRegion (ICB1, SystemMemory, Local0, 0x04)

  71F8: 5B 80 49 43 42 31 00 60 0A 04                    // [.ICB1.`..

                        Field (ICB1, DWordAcc, NoLock, Preserve)
                        {
                            TEMP,   32
                        }

                        And (TEMP, 0xFFFFFFFC, TEMP)

  7202: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7B 54 45  // [..ICB1.TEMP {TE
  7212: 4D 50 0C FC FF FF FF 54 45 4D 50                 // MP.....TEMP

                        Store (TEMP, Local0)
                    }


  721D: 70 54 45 4D 50 60                                // pTEMP`

                    If (CondRefOf (\_SB.PCI0.SDHC.PS0X))
                    {
                        PS0X ()
                    }
                }


  7223: A0 1B 5B 12 5C 2F 04 5F 53 42 5F 50 43 49 30 53  // ..[.\/._SB_PCI0S
  7233: 44 48 43 50 53 30 58 00 50 53 30 58              // DHCPS0X.PS0X

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    ADBG ("SDHC Ctrlr D3")

  723F: 14 46 06 5F 50 53 33 08 41 44 42 47 0D 53 44 48  // .F._PS3.ADBG.SDH
  724F: 43 20 43 74 72 6C 72 20 44 33 00                 // C Ctrlr D3.

                    If (
  725A: A0 4B 04 92                                      // .K..

LNotEqual (^^SIRC.CNTR (0x08), Zero))
                    {
                        Add (^^SIRC.CNTR (0x08), 0x84, Local0)

  725E: 93 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 08 00 72  // .^^.SIRCCNTR...r
  726E: 5E 5E 2E 53 49 52 43 43 4E 54 52 0A 08 0A 84 60  // ^^.SIRCCNTR....`

                        OperationRegion (ICB1, SystemMemory, Local0, 0x04)

  727E: 5B 80 49 43 42 31 00 60 0A 04                    // [.ICB1.`..

                        Field (ICB1, DWordAcc, NoLock, Preserve)
                        {
                            TEMP,   32
                        }

                        Or (TEMP, 0x03, TEMP)

  7288: 5B 81 0B 49 43 42 31 03 54 45 4D 50 20 7D 54 45  // [..ICB1.TEMP }TE
  7298: 4D 50 0A 03 54 45 4D 50                          // MP..TEMP

                        Store (TEMP, Local0)
                    }
                }
            }
        }


  72A0: 70 54 45 4D 50 60                                // pTEMP`

        Scope (\_SB.PCI0)
        {
        }


  72A6: 10 0B 5C 2E 5F 53 42 5F 50 43 49 30              // ..\._SB_PCI0

        Scope (I2C0)
        {

  72B2: 10 48 6A 49 32 43 30                             // .HjI2C0

            Device (ACD0)
            {

  72B9: 5B 82 4D 10 41 43 44 30                          // [.M.ACD0

                Name (_ADR, 0x1C)  // _ADR: Address

  72C1: 08 5F 41 44 52 0A 1C                             // ._ADR..

                Name (_HID, "INT33CA")  // _HID: Hardware ID

  72C8: 08 5F 48 49 44 0D 49 4E 54 33 33 43 41 00        // ._HID.INT33CA.

                Name (_CID, "INT33CA")  // _CID: Compatible ID

  72D6: 08 5F 43 49 44 0D 49 4E 54 33 33 43 41 00        // ._CID.INT33CA.

                Name (_DDN, "Intel(R) Smart Sound Technology Audio Codec - INT33CA")  // _DDN: DOS Device Name

  72E4: 08 5F 44 44 4E 0D 49 6E 74 65 6C 28 52 29 20 53  // ._DDN.Intel(R) S
  72F4: 6D 61 72 74 20 53 6F 75 6E 64 20 54 65 63 68 6E  // mart Sound Techn
  7304: 6F 6C 6F 67 79 20 41 75 64 69 6F 20 43 6F 64 65  // ology Audio Code
  7314: 63 20 2D 20 49 4E 54 33 33 43 41 00              // c - INT33CA.

                Name (_UID, One)  // _UID: Unique ID

  7320: 08 5F 55 49 44 01                                // ._UID.

                Name (MCLK, Zero)

  7326: 08 4D 43 4C 4B 00                                // .MCLK.

                Name (SCLK, 0x09)

  732C: 08 53 43 4C 4B 0A 09                             // .SCLK..

                Name (SSPM, Zero)

  7333: 08 53 53 50 4D 00                                // .SSPM.

                Name (RBUF, 
  7339: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x001C, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, )
                    {
                        0x00000025,
                    }
                })

  733E: 11 2F 0A 2C 8E 1E 00 01 00 01 02 00 00 01 06 00  // ./.,............
  734E: 80 1A 06 00 1C 00 5C 5F 53 42 2E 50 43 49 30 2E  // ......\_SB.PCI0.
  735E: 49 32 43 30 00 89 06 00 15 01 25 00 00 00 79 00  // I2C0......%...y.

                Name (EOD, One)

  736E: 08 45 4F 44 5F 01                                // .EOD_.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  7374: 14 0B 5F 43 52 53 00                             // .._CRS.

                    Return (RBUF)
                }


  737B: A4 52 42 55 46                                   // .RBUF

                Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                {

  7380: 14 0C 5F 53 52 53 09                             // .._SRS.

                    Store (One, EOD)
                }


  7387: 70 01 45 4F 44 5F                                // p.EOD_

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  738D: 14 2D 5F 53 54 41 00                             // .-_STA.

                    If (LOr (
  7394: A0 12 91 92                                      // ....

LNotEqual (CODS, Zero), 
  7398: 93 43 4F 44 53 00                                // .CODS.


  739E: 92                                               // .

LNotEqual (ADSD, Zero)))
                    {

  739F: 93 41 44 53 44 00                                // .ADSD.

                        Return (Zero)
                    }


  73A5: A4 00                                            // ..

                    If (And (EOD, One, EOD))
                    {

  73A7: A0 0E 7B 45 4F 44 5F 01 45 4F 44 5F              // ..{EOD_.EOD_

                        Return (0x0F)
                    }

  73B3: A4 0A 0F                                         // ...

                    Else
                    {

  73B6: A1 04                                            // ..

                        Return (0x0D)
                    }
                }


  73B8: A4 0A 0D                                         // ...

                Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                {

  73BB: 14 0C 5F 44 49 53 00                             // .._DIS.

                    Store (Zero, EOD)
                }
            }


  73C2: 70 00 45 4F 44 5F                                // p.EOD_

            Device (ACD1)
            {

  73C8: 5B 82 4D 0F 41 43 44 31                          // [.M.ACD1

                Name (_ADR, 0x4A)  // _ADR: Address

  73D0: 08 5F 41 44 52 0A 4A                             // ._ADR.J

                Name (_HID, "INT33C9")  // _HID: Hardware ID

  73D7: 08 5F 48 49 44 0D 49 4E 54 33 33 43 39 00        // ._HID.INT33C9.

                Name (_CID, "INT33C9")  // _CID: Compatible ID

  73E5: 08 5F 43 49 44 0D 49 4E 54 33 33 43 39 00        // ._CID.INT33C9.

                Name (_DDN, "Intel(R) Smart Sound Technology Audio Codec - INT33C9")  // _DDN: DOS Device Name

  73F3: 08 5F 44 44 4E 0D 49 6E 74 65 6C 28 52 29 20 53  // ._DDN.Intel(R) S
  7403: 6D 61 72 74 20 53 6F 75 6E 64 20 54 65 63 68 6E  // mart Sound Techn
  7413: 6F 6C 6F 67 79 20 41 75 64 69 6F 20 43 6F 64 65  // ology Audio Code
  7423: 63 20 2D 20 49 4E 54 33 33 43 39 00              // c - INT33C9.

                Name (_UID, One)  // _UID: Unique ID

  742F: 08 5F 55 49 44 01                                // ._UID.

                Name (MCLK, 0x06)

  7435: 08 4D 43 4C 4B 0A 06                             // .MCLK..

                Name (SCLK, Zero)

  743C: 08 53 43 4C 4B 00                                // .SCLK.

                Name (SSPM, One)

  7442: 08 53 53 50 4D 01                                // .SSPM.

                Name (RBUF, 
  7448: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x004A, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                })

  744D: 11 26 0A 23 8E 1E 00 01 00 01 02 00 00 01 06 00  // .&.#............
  745D: 80 1A 06 00 4A 00 5C 5F 53 42 2E 50 43 49 30 2E  // ....J.\_SB.PCI0.
  746D: 49 32 43 30 00 79 00                             // I2C0.y.

                Name (EOD, One)

  7474: 08 45 4F 44 5F 01                                // .EOD_.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {
                    Store (One, EOD)

  747A: 14 11 5F 43 52 53 00 70 01 45 4F 44 5F           // .._CRS.p.EOD_

                    Return (RBUF)
                }


  7487: A4 52 42 55 46                                   // .RBUF

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  748C: 14 2D 5F 53 54 41 00                             // .-_STA.

                    If (LOr (
  7493: A0 12 91 92                                      // ....

LNotEqual (CODS, One), 
  7497: 93 43 4F 44 53 01                                // .CODS.


  749D: 92                                               // .

LNotEqual (ADSD, Zero)))
                    {

  749E: 93 41 44 53 44 00                                // .ADSD.

                        Return (Zero)
                    }


  74A4: A4 00                                            // ..

                    If (And (EOD, One, EOD))
                    {

  74A6: A0 0E 7B 45 4F 44 5F 01 45 4F 44 5F              // ..{EOD_.EOD_

                        Return (0x0F)
                    }

  74B2: A4 0A 0F                                         // ...

                    Else
                    {

  74B5: A1 04                                            // ..

                        Return (0x0D)
                    }
                }


  74B7: A4 0A 0D                                         // ...

                Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                {

  74BA: 14 0C 5F 44 49 53 00                             // .._DIS.

                    Store (Zero, EOD)
                }
            }


  74C1: 70 00 45 4F 44 5F                                // p.EOD_

            Device (ACD2)
            {

  74C7: 5B 82 49 16 41 43 44 32                          // [.I.ACD2

                Name (_ADR, 0x69)  // _ADR: Address

  74CF: 08 5F 41 44 52 0A 69                             // ._ADR.i

                Name (_HID, "INT33CB")  // _HID: Hardware ID

  74D6: 08 5F 48 49 44 0D 49 4E 54 33 33 43 42 00        // ._HID.INT33CB.

                Name (_CID, "INT33CB")  // _CID: Compatible ID

  74E4: 08 5F 43 49 44 0D 49 4E 54 33 33 43 42 00        // ._CID.INT33CB.

                Name (_DDN, "Intel(R) Smart Sound Technology Audio Codec - INT33CB")  // _DDN: DOS Device Name

  74F2: 08 5F 44 44 4E 0D 49 6E 74 65 6C 28 52 29 20 53  // ._DDN.Intel(R) S
  7502: 6D 61 72 74 20 53 6F 75 6E 64 20 54 65 63 68 6E  // mart Sound Techn
  7512: 6F 6C 6F 67 79 20 41 75 64 69 6F 20 43 6F 64 65  // ology Audio Code
  7522: 63 20 2D 20 49 4E 54 33 33 43 42 00              // c - INT33CB.

                Name (_UID, One)  // _UID: Unique ID

  752E: 08 5F 55 49 44 01                                // ._UID.

                Name (MCLK, 0x18)

  7534: 08 4D 43 4C 4B 0A 18                             // .MCLK..

                Name (SCLK, 0x09)

  753B: 08 53 43 4C 4B 0A 09                             // .SCLK..

                Name (SSPM, Zero)

  7542: 08 53 53 50 4D 00                                // .SSPM.

                Name (RBUF, 
  7548: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
                {
                    I2cSerialBusV2 (0x0069, ControllerInitiated, 0x00061A80,
                        AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                        0x00, ResourceConsumer, , Exclusive,
                        )
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionInputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0033
                        }
                    GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionInputOnly,
                        "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                        )
                        {   // Pin list
                            0x0035
                        }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x00000023,
                    }
                    Interrupt (ResourceConsumer, Edge, ActiveHigh, ExclusiveAndWake, ,, )
                    {
                        0x00000025,
                    }
                })

  754D: 11 49 08 0A 85 8E 1E 00 01 00 01 02 00 00 01 06  // .I..............
  755D: 00 80 1A 06 00 69 00 5C 5F 53 42 2E 50 43 49 30  // .....i.\_SB.PCI0
  756D: 2E 49 32 43 30 00 8C 25 00 01 01 01 00 01 00 00  // .I2C0..%........
  757D: 00 00 00 00 17 00 00 19 00 28 00 00 00 33 00 5C  // .........(...3.\
  758D: 5F 53 42 2E 50 43 49 30 2E 47 50 49 30 00 8C 25  // _SB.PCI0.GPI0..%
  759D: 00 01 01 01 00 01 00 00 00 00 00 00 17 00 00 19  // ................
  75AD: 00 28 00 00 00 35 00 5C 5F 53 42 2E 50 43 49 30  // .(...5.\_SB.PCI0
  75BD: 2E 47 50 49 30 00 89 06 00 13 01 23 00 00 00 89  // .GPI0......#....
  75CD: 06 00 13 01 25 00 00 00 79 00                    // ....%...y.

                Name (EOD, One)

  75D7: 08 45 4F 44 5F 01                                // .EOD_.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  75DD: 14 0B 5F 43 52 53 00                             // .._CRS.

                    Return (RBUF)
                }


  75E4: A4 52 42 55 46                                   // .RBUF

                Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
                {

  75E9: 14 0C 5F 53 52 53 09                             // .._SRS.

                    Store (One, EOD)
                }


  75F0: 70 01 45 4F 44 5F                                // p.EOD_

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  75F6: 14 2E 5F 53 54 41 00                             // .._STA.

                    If (LOr (
  75FD: A0 13 91 92                                      // ....

LNotEqual (CODS, 0x02), 
  7601: 93 43 4F 44 53 0A 02                             // .CODS..


  7608: 92                                               // .

LNotEqual (ADSD, Zero)))
                    {

  7609: 93 41 44 53 44 00                                // .ADSD.

                        Return (Zero)
                    }


  760F: A4 00                                            // ..

                    If (And (EOD, One, EOD))
                    {

  7611: A0 0E 7B 45 4F 44 5F 01 45 4F 44 5F              // ..{EOD_.EOD_

                        Return (0x0F)
                    }

  761D: A4 0A 0F                                         // ...

                    Else
                    {

  7620: A1 04                                            // ..

                        Return (0x0D)
                    }
                }


  7622: A4 0A 0D                                         // ...

                Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
                {

  7625: 14 0C 5F 44 49 53 00                             // .._DIS.

                    Store (Zero, EOD)
                }
            }


  762C: 70 00 45 4F 44 5F                                // p.EOD_

            Device (SHUB)
            {

  7632: 5B 82 4C 0F 53 48 55 42                          // [.L.SHUB

                Name (_HID, "INT33D1")  // _HID: Hardware ID

  763A: 08 5F 48 49 44 0D 49 4E 54 33 33 44 31 00        // ._HID.INT33D1.

                Name (_CID, "PNP0C50")  // _CID: Compatible ID

  7648: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

                Name (_ADR, Zero)  // _ADR: Address

  7656: 08 5F 41 44 52 00                                // ._ADR.

                Name (_UID, One)  // _UID: Unique ID

  765C: 08 5F 55 49 44 01                                // ._UID.

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  7662: 14 4F 04 5F 53 54 41 00                          // .O._STA.

                    If (
  766A: A0 0D 92                                         // ...

LNotEqual (And (SDS0, One), One))
                    {

  766D: 93 7B 53 44 53 30 01 00 01                       // .{SDS0...

                        Return (Zero)
                    }


  7676: A4 00                                            // ..

                    If (LAnd (LEqual (RDGP (0x2C), One), 
  7678: A0 1B 90 93 52 44 47 50 0A 2C 01                 // ....RDGP.,.

LEqual (_HID, "INT33D1")))
                    {

  7683: 93 5F 48 49 44 0D 49 4E 54 33 33 44 31 00        // ._HID.INT33D1.

                        Return (0x0F)
                    }


  7691: A4 0A 0F                                         // ...

                    If (LAnd (LEqual (RDGP (0x2C), Zero), 
  7694: A0 1B 90 93 52 44 47 50 0A 2C 00                 // ....RDGP.,.

LEqual (_HID, "INT33D7")))
                    {

  769F: 93 5F 48 49 44 0D 49 4E 54 33 33 44 37 00        // ._HID.INT33D7.

                        Return (0x0F)
                    }


  76AD: A4 0A 0F                                         // ...

                    Return (Zero)
                }


  76B0: A4 00                                            // ..

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {

  76B2: 14 3B 5F 44 53 4D 04                             // .;_DSM.

                    If (LEqual (Arg0, 
  76B9: A0 2D 93 68                                      // .-.h

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {

  76BD: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
  76CD: 3D 89 38 DE                                      // =.8.

                        If (LEqual (Arg2, Zero))
                        {

  76D1: A0 0E 93 6A 00                                   // ...j.

                            If (LEqual (Arg1, One))
                            {

  76D6: A0 09 93 69 01                                   // ...i.

                                Return (
  76DB: A4                                               // .

Buffer (One)
                                {
                                     0x03                                           
                                })
                            }
                        }


  76DC: 11 03 01 03                                      // ....

                        If (LEqual (Arg2, One))
                        {

  76E0: A0 06 93 6A 01                                   // ...j.

                            Return (One)
                        }
                    }

  76E5: A4 01                                            // ..

                    Else
                    {

  76E7: A1 06                                            // ..

                        Return (
  76E9: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


  76EA: 11 03 01 00                                      // ....

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  76EE: 14 41 04 5F 43 52 53 00                          // .A._CRS.

                    Name (SBFI, 
  76F6: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0040, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, )
                        {
                            0x0000001C,
                        }
                    })

  76FB: 11 2F 0A 2C 8E 1E 00 01 00 01 02 00 00 01 06 00  // ./.,............
  770B: 80 1A 06 00 40 00 5C 5F 53 42 2E 50 43 49 30 2E  // ....@.\_SB.PCI0.
  771B: 49 32 43 30 00 89 06 00 05 01 1C 00 00 00 79 00  // I2C0..........y.

                    Return (SBFI)
                }
            }


  772B: A4 53 42 46 49                                   // .SBFI

            Device (DFUD)
            {

  7730: 5B 82 4E 0E 44 46 55 44                          // [.N.DFUD

                Name (_HID, "INT33D7")  // _HID: Hardware ID

  7738: 08 5F 48 49 44 0D 49 4E 54 33 33 44 37 00        // ._HID.INT33D7.

                Name (_ADR, Zero)  // _ADR: Address

  7746: 08 5F 41 44 52 00                                // ._ADR.

                Name (_UID, One)  // _UID: Unique ID

  774C: 08 5F 55 49 44 01                                // ._UID.

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  7752: 14 4F 04 5F 53 54 41 00                          // .O._STA.

                    If (
  775A: A0 0D 92                                         // ...

LNotEqual (And (SDS0, One), One))
                    {

  775D: 93 7B 53 44 53 30 01 00 01                       // .{SDS0...

                        Return (Zero)
                    }


  7766: A4 00                                            // ..

                    If (LAnd (LEqual (RDGP (0x2C), One), 
  7768: A0 1B 90 93 52 44 47 50 0A 2C 01                 // ....RDGP.,.

LEqual (_HID, "INT33D1")))
                    {

  7773: 93 5F 48 49 44 0D 49 4E 54 33 33 44 31 00        // ._HID.INT33D1.

                        Return (0x0F)
                    }


  7781: A4 0A 0F                                         // ...

                    If (LAnd (LEqual (RDGP (0x2C), Zero), 
  7784: A0 1B 90 93 52 44 47 50 0A 2C 00                 // ....RDGP.,.

LEqual (_HID, "INT33D7")))
                    {

  778F: 93 5F 48 49 44 0D 49 4E 54 33 33 44 37 00        // ._HID.INT33D7.

                        Return (0x0F)
                    }


  779D: A4 0A 0F                                         // ...

                    Return (Zero)
                }


  77A0: A4 00                                            // ..

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {

  77A2: 14 3B 5F 44 53 4D 04                             // .;_DSM.

                    If (LEqual (Arg0, 
  77A9: A0 2D 93 68                                      // .-.h

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {

  77AD: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
  77BD: 3D 89 38 DE                                      // =.8.

                        If (LEqual (Arg2, Zero))
                        {

  77C1: A0 0E 93 6A 00                                   // ...j.

                            If (LEqual (Arg1, One))
                            {

  77C6: A0 09 93 69 01                                   // ...i.

                                Return (
  77CB: A4                                               // .

Buffer (One)
                                {
                                     0x03                                           
                                })
                            }
                        }


  77CC: 11 03 01 03                                      // ....

                        If (LEqual (Arg2, One))
                        {

  77D0: A0 06 93 6A 01                                   // ...j.

                            Return (One)
                        }
                    }

  77D5: A4 01                                            // ..

                    Else
                    {

  77D7: A1 06                                            // ..

                        Return (
  77D9: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


  77DA: 11 03 01 00                                      // ....

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  77DE: 14 41 04 5F 43 52 53 00                          // .A._CRS.

                    Name (SBFI, 
  77E6: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0040, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, )
                        {
                            0x0000001C,
                        }
                    })

  77EB: 11 2F 0A 2C 8E 1E 00 01 00 01 02 00 00 01 06 00  // ./.,............
  77FB: 80 1A 06 00 40 00 5C 5F 53 42 2E 50 43 49 30 2E  // ....@.\_SB.PCI0.
  780B: 49 32 43 30 00 89 06 00 05 01 1C 00 00 00 79 00  // I2C0..........y.

                    Return (SBFI)
                }
            }


  781B: A4 53 42 46 49                                   // .SBFI

            Device (TPD4)
            {

  7820: 5B 82 49 13 54 50 44 34                          // [.I.TPD4

                Name (_ADR, Zero)  // _ADR: Address

  7828: 08 5F 41 44 52 00                                // ._ADR.

                Name (_HID, "MSFT1111")  // _HID: Hardware ID

  782E: 08 5F 48 49 44 0D 4D 53 46 54 31 31 31 31 00     // ._HID.MSFT1111.

                Name (_CID, "PNP0C50")  // _CID: Compatible ID

  783D: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

                Name (_UID, One)  // _UID: Unique ID

  784B: 08 5F 55 49 44 01                                // ._UID.

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {

  7851: 14 3B 5F 44 53 4D 04                             // .;_DSM.

                    If (LEqual (Arg0, 
  7858: A0 2D 93 68                                      // .-.h

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {

  785C: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
  786C: 3D 89 38 DE                                      // =.8.

                        If (LEqual (Arg2, Zero))
                        {

  7870: A0 0E 93 6A 00                                   // ...j.

                            If (LEqual (Arg1, One))
                            {

  7875: A0 09 93 69 01                                   // ...i.

                                Return (
  787A: A4                                               // .

Buffer (One)
                                {
                                     0x03                                           
                                })
                            }
                        }


  787B: 11 03 01 03                                      // ....

                        If (LEqual (Arg2, One))
                        {

  787F: A0 06 93 6A 01                                   // ...j.

                            Return (One)
                        }
                    }

  7884: A4 01                                            // ..

                    Else
                    {

  7886: A1 06                                            // ..

                        Return (
  7888: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


  7889: 11 03 01 00                                      // ....

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  788D: 14 1A 5F 53 54 41 00                             // .._STA.

                    If (LEqual (And (SDS0, 0x04), 0x04))
                    {

  7894: A0 0F 93 7B 53 44 53 30 0A 04 00 0A 04           // ...{SDS0.....

                        Return (0x0F)
                    }

  78A1: A4 0A 0F                                         // ...

                    Else
                    {

  78A4: A1 03                                            // ..

                        Return (Zero)
                    }
                }


  78A6: A4 00                                            // ..

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  78A8: 14 41 04 5F 43 52 53 00                          // .A._CRS.

                    Name (SBFI, 
  78B0: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0060, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C0",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, )
                        {
                            0x0000001C,
                        }
                    })

  78B5: 11 2F 0A 2C 8E 1E 00 01 00 01 02 00 00 01 06 00  // ./.,............
  78C5: 80 1A 06 00 60 00 5C 5F 53 42 2E 50 43 49 30 2E  // ....`.\_SB.PCI0.
  78D5: 49 32 43 30 00 89 06 00 05 01 1C 00 00 00 79 00  // I2C0..........y.

                    Return (SBFI)
                }


  78E5: A4 53 42 46 49                                   // .SBFI

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  78EA: 14 0E 5F 50 52 57 00                             // .._PRW.

                    Return (
  78F1: A4                                               // .

Package (0x02)
                    {
                        0x0E, 
                        0x04
                    })
                }


  78F2: 12 06 02 0A 0E 0A 04                             // .......

                Method (_S3W, 0, NotSerialized)  // _S3W: S3 Device Wake State
                {

  78F9: 14 09 5F 53 33 57 00                             // .._S3W.

                    Return (0x03)
                }


  7900: A4 0A 03                                         // ...

                Method (_S4W, 0, NotSerialized)  // _S4W: S4 Device Wake State
                {

  7903: 14 09 5F 53 34 57 00                             // .._S4W.

                    Return (0x03)
                }


  790A: A4 0A 03                                         // ...

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    ADBG ("TPD4 Ctrlr D0")
                    WTIN (0x0E, Zero)

  790D: 14 26 5F 50 53 30 08 41 44 42 47 0D 54 50 44 34  // .&_PS0.ADBG.TPD4
  791D: 20 43 74 72 6C 72 20 44 30 00 57 54 49 4E 0A 0E  //  Ctrlr D0.WTIN..
  792D: 00                                               // .

                    Store (One, GO14)
                }


  792E: 70 01 47 4F 31 34                                // p.GO14

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    ADBG ("TPD4 Ctrlr D3")
                    WTIN (0x0E, One)

  7934: 14 26 5F 50 53 33 08 41 44 42 47 0D 54 50 44 34  // .&_PS3.ADBG.TPD4
  7944: 20 43 74 72 6C 72 20 44 33 00 57 54 49 4E 0A 0E  //  Ctrlr D3.WTIN..
  7954: 01                                               // .

                    Store (Zero, GO14)
                }
            }
        }


  7955: 70 00 47 4F 31 34                                // p.GO14

        Scope (I2C1)
        {

  795B: 10 41 B9 49 32 43 31                             // .A.I2C1

            Device (TPL0)
            {

  7962: 5B 82 45 0D 54 50 4C 30                          // [.E.TPL0

                Name (_ADR, Zero)  // _ADR: Address

  796A: 08 5F 41 44 52 00                                // ._ADR.

                Name (_HID, "ATML1000")  // _HID: Hardware ID

  7970: 08 5F 48 49 44 0D 41 54 4D 4C 31 30 30 30 00     // ._HID.ATML1000.

                Name (_CID, "PNP0C50")  // _CID: Compatible ID

  797F: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

                Name (_UID, One)  // _UID: Unique ID

  798D: 08 5F 55 49 44 01                                // ._UID.

                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State

  7993: 08 5F 53 30 57 0A 04                             // ._S0W..

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {

  799A: 14 43 04 5F 44 53 4D 04                          // .C._DSM.

                    If (LEqual (Arg0, 
  79A2: A0 34 93 68                                      // .4.h

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {

  79A6: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
  79B6: 3D 89 38 DE                                      // =.8.

                        If (LEqual (Arg2, Zero))
                        {

  79BA: A0 15 93 6A 00                                   // ...j.

                            If (LEqual (Arg1, One))
                            {

  79BF: A0 09 93 69 01                                   // ...i.

                                Return (
  79C4: A4                                               // .

Buffer (One)
                                {
                                     0x03                                           
                                })
                            }

  79C5: 11 03 01 03                                      // ....

                            Else
                            {

  79C9: A1 06                                            // ..

                                Return (
  79CB: A4                                               // .

Buffer (One)
                                {
                                     0x00                                           
                                })
                            }
                        }


  79CC: 11 03 01 00                                      // ....

                        If (LEqual (Arg2, One))
                        {

  79D0: A0 06 93 6A 01                                   // ...j.

                            Return (Zero)
                        }
                    }

  79D5: A4 00                                            // ..

                    Else
                    {

  79D7: A1 06                                            // ..

                        Return (
  79D9: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


  79DA: 11 03 01 00                                      // ....

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  79DE: 14 18 5F 53 54 41 00                             // .._STA.

                    If (LEqual (And (SDS1, One), One))
                    {

  79E5: A0 0D 93 7B 53 44 53 31 01 00 01                 // ...{SDS1...

                        Return (0x0F)
                    }

  79F0: A4 0A 0F                                         // ...

                    Else
                    {

  79F3: A1 03                                            // ..

                        Return (Zero)
                    }
                }


  79F5: A4 00                                            // ..

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  79F7: 14 41 04 5F 43 52 53 00                          // .A._CRS.

                    Name (SBFI, 
  79FF: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x004C, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, )
                        {
                            0x00000022,
                        }
                    })

  7A04: 11 2F 0A 2C 8E 1E 00 01 00 01 02 00 00 01 06 00  // ./.,............
  7A14: 80 1A 06 00 4C 00 5C 5F 53 42 2E 50 43 49 30 2E  // ....L.\_SB.PCI0.
  7A24: 49 32 43 31 00 89 06 00 05 01 22 00 00 00 79 00  // I2C1......"...y.

                    Return (SBFI)
                }
            }


  7A34: A4 53 42 46 49                                   // .SBFI

            Device (TPFU)
            {

  7A39: 5B 82 4A 0A 54 50 46 55                          // [.J.TPFU

                Name (_ADR, Zero)  // _ADR: Address

  7A41: 08 5F 41 44 52 00                                // ._ADR.

                Name (_HID, "ATML2000")  // _HID: Hardware ID

  7A47: 08 5F 48 49 44 0D 41 54 4D 4C 32 30 30 30 00     // ._HID.ATML2000.

                Name (_CID, "PNP0C02")  // _CID: Compatible ID

  7A56: 08 5F 43 49 44 0D 50 4E 50 30 43 30 32 00        // ._CID.PNP0C02.

                Name (_UID, 0x0A)  // _UID: Unique ID

  7A64: 08 5F 55 49 44 0A 0A                             // ._UID..

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  7A6B: 14 1E 5F 53 54 41 00                             // .._STA.

                    If (LAnd (And (SDS1, One), 
  7A72: A0 13 90 7B 53 44 53 31 01 00                    // ...{SDS1..

And (APFU, One)))
                    {

  7A7C: 7B 41 50 46 55 01 00                             // {APFU..

                        Return (0x0F)
                    }

  7A83: A4 0A 0F                                         // ...

                    Else
                    {

  7A86: A1 03                                            // ..

                        Return (Zero)
                    }
                }


  7A88: A4 00                                            // ..

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  7A8A: 14 4A 05 5F 43 52 53 00                          // .J._CRS.

                    Name (SBFI, 
  7A92: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0026, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        I2cSerialBusV2 (0x0027, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                    })

  7A97: 11 48 04 0A 44 8E 1E 00 01 00 01 02 00 00 01 06  // .H..D...........
  7AA7: 00 80 1A 06 00 26 00 5C 5F 53 42 2E 50 43 49 30  // .....&.\_SB.PCI0
  7AB7: 2E 49 32 43 31 00 8E 1E 00 01 00 01 02 00 00 01  // .I2C1...........
  7AC7: 06 00 80 1A 06 00 27 00 5C 5F 53 42 2E 50 43 49  // ......'.\_SB.PCI
  7AD7: 30 2E 49 32 43 31 00 79 00                       // 0.I2C1.y.

                    Return (SBFI)
                }
            }


  7AE0: A4 53 42 46 49                                   // .SBFI

            Device (TPL1)
            {

  7AE5: 5B 82 41 0D 54 50 4C 31                          // [.A.TPL1

                Name (_HID, "ELAN1001")  // _HID: Hardware ID

  7AED: 08 5F 48 49 44 0D 45 4C 41 4E 31 30 30 31 00     // ._HID.ELAN1001.

                Name (_CID, "PNP0C50")  // _CID: Compatible ID

  7AFC: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

                Name (_UID, One)  // _UID: Unique ID

  7B0A: 08 5F 55 49 44 01                                // ._UID.

                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State

  7B10: 08 5F 53 30 57 0A 04                             // ._S0W..

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {

  7B17: 14 43 04 5F 44 53 4D 04                          // .C._DSM.

                    If (LEqual (Arg0, 
  7B1F: A0 34 93 68                                      // .4.h

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {

  7B23: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
  7B33: 3D 89 38 DE                                      // =.8.

                        If (LEqual (Arg2, Zero))
                        {

  7B37: A0 15 93 6A 00                                   // ...j.

                            If (LEqual (Arg1, One))
                            {

  7B3C: A0 09 93 69 01                                   // ...i.

                                Return (
  7B41: A4                                               // .

Buffer (One)
                                {
                                     0x03                                           
                                })
                            }

  7B42: 11 03 01 03                                      // ....

                            Else
                            {

  7B46: A1 06                                            // ..

                                Return (
  7B48: A4                                               // .

Buffer (One)
                                {
                                     0x00                                           
                                })
                            }
                        }


  7B49: 11 03 01 00                                      // ....

                        If (LEqual (Arg2, One))
                        {

  7B4D: A0 06 93 6A 01                                   // ...j.

                            Return (One)
                        }
                    }

  7B52: A4 01                                            // ..

                    Else
                    {

  7B54: A1 06                                            // ..

                        Return (
  7B56: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


  7B57: 11 03 01 00                                      // ....

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  7B5B: 14 1A 5F 53 54 41 00                             // .._STA.

                    If (LEqual (And (SDS1, 0x02), 0x02))
                    {

  7B62: A0 0F 93 7B 53 44 53 31 0A 02 00 0A 02           // ...{SDS1.....

                        Return (0x0F)
                    }

  7B6F: A4 0A 0F                                         // ...

                    Else
                    {

  7B72: A1 03                                            // ..

                        Return (Zero)
                    }
                }


  7B74: A4 00                                            // ..

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  7B76: 14 41 04 5F 43 52 53 00                          // .A._CRS.

                    Name (SBFI, 
  7B7E: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0010, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, )
                        {
                            0x00000022,
                        }
                    })

  7B83: 11 2F 0A 2C 8E 1E 00 01 00 01 02 00 00 01 06 00  // ./.,............
  7B93: 80 1A 06 00 10 00 5C 5F 53 42 2E 50 43 49 30 2E  // ......\_SB.PCI0.
  7BA3: 49 32 43 31 00 89 06 00 05 01 22 00 00 00 79 00  // I2C1......"...y.

                    Return (SBFI)
                }
            }


  7BB3: A4 53 42 46 49                                   // .SBFI

            Device (TPL2)
            {

  7BB8: 5B 82 47 0D 54 50 4C 32                          // [.G.TPL2

                Name (_ADR, One)  // _ADR: Address

  7BC0: 08 5F 41 44 52 01                                // ._ADR.

                Name (_HID, "NTRG0001")  // _HID: Hardware ID

  7BC6: 08 5F 48 49 44 0D 4E 54 52 47 30 30 30 31 00     // ._HID.NTRG0001.

                Name (_CID, "PNP0C50")  // _CID: Compatible ID

  7BD5: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

                Name (_UID, One)  // _UID: Unique ID

  7BE3: 08 5F 55 49 44 01                                // ._UID.

                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State

  7BE9: 08 5F 53 30 57 0A 04                             // ._S0W..

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {

  7BF0: 14 43 04 5F 44 53 4D 04                          // .C._DSM.

                    If (LEqual (Arg0, 
  7BF8: A0 34 93 68                                      // .4.h

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {

  7BFC: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
  7C0C: 3D 89 38 DE                                      // =.8.

                        If (LEqual (Arg2, Zero))
                        {

  7C10: A0 15 93 6A 00                                   // ...j.

                            If (LEqual (Arg1, One))
                            {

  7C15: A0 09 93 69 01                                   // ...i.

                                Return (
  7C1A: A4                                               // .

Buffer (One)
                                {
                                     0x03                                           
                                })
                            }

  7C1B: 11 03 01 03                                      // ....

                            Else
                            {

  7C1F: A1 06                                            // ..

                                Return (
  7C21: A4                                               // .

Buffer (One)
                                {
                                     0x00                                           
                                })
                            }
                        }


  7C22: 11 03 01 00                                      // ....

                        If (LEqual (Arg2, One))
                        {

  7C26: A0 06 93 6A 01                                   // ...j.

                            Return (One)
                        }
                    }

  7C2B: A4 01                                            // ..

                    Else
                    {

  7C2D: A1 06                                            // ..

                        Return (
  7C2F: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


  7C30: 11 03 01 00                                      // ....

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  7C34: 14 1A 5F 53 54 41 00                             // .._STA.

                    If (LEqual (And (SDS1, 0x20), 0x20))
                    {

  7C3B: A0 0F 93 7B 53 44 53 31 0A 20 00 0A 20           // ...{SDS1. .. 

                        Return (0x0F)
                    }

  7C48: A4 0A 0F                                         // ...

                    Else
                    {

  7C4B: A1 03                                            // ..

                        Return (Zero)
                    }
                }


  7C4D: A4 00                                            // ..

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  7C4F: 14 41 04 5F 43 52 53 00                          // .A._CRS.

                    Name (SBFI, 
  7C57: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0007, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, )
                        {
                            0x00000022,
                        }
                    })

  7C5C: 11 2F 0A 2C 8E 1E 00 01 00 01 02 00 00 01 06 00  // ./.,............
  7C6C: 80 1A 06 00 07 00 5C 5F 53 42 2E 50 43 49 30 2E  // ......\_SB.PCI0.
  7C7C: 49 32 43 31 00 89 06 00 05 01 22 00 00 00 79 00  // I2C1......"...y.

                    Return (SBFI)
                }
            }


  7C8C: A4 53 42 46 49                                   // .SBFI

            Device (TPL3)
            {

  7C91: 5B 82 48 0D 54 50 4C 33                          // [.H.TPL3

                Name (_ADR, One)  // _ADR: Address

  7C99: 08 5F 41 44 52 01                                // ._ADR.

                Name (_HID, "EETI7900")  // _HID: Hardware ID

  7C9F: 08 5F 48 49 44 0D 45 45 54 49 37 39 30 30 00     // ._HID.EETI7900.

                Name (_CID, "PNP0C50")  // _CID: Compatible ID

  7CAE: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

                Name (_UID, One)  // _UID: Unique ID

  7CBC: 08 5F 55 49 44 01                                // ._UID.

                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State

  7CC2: 08 5F 53 30 57 0A 04                             // ._S0W..

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {

  7CC9: 14 44 04 5F 44 53 4D 04                          // .D._DSM.

                    If (LEqual (Arg0, 
  7CD1: A0 35 93 68                                      // .5.h

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {

  7CD5: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
  7CE5: 3D 89 38 DE                                      // =.8.

                        If (LEqual (Arg2, Zero))
                        {

  7CE9: A0 15 93 6A 00                                   // ...j.

                            If (LEqual (Arg1, One))
                            {

  7CEE: A0 09 93 69 01                                   // ...i.

                                Return (
  7CF3: A4                                               // .

Buffer (One)
                                {
                                     0x03                                           
                                })
                            }

  7CF4: 11 03 01 03                                      // ....

                            Else
                            {

  7CF8: A1 06                                            // ..

                                Return (
  7CFA: A4                                               // .

Buffer (One)
                                {
                                     0x00                                           
                                })
                            }
                        }


  7CFB: 11 03 01 00                                      // ....

                        If (LEqual (Arg2, One))
                        {

  7CFF: A0 07 93 6A 01                                   // ...j.

                            Return (0x0F)
                        }
                    }

  7D04: A4 0A 0F                                         // ...

                    Else
                    {

  7D07: A1 06                                            // ..

                        Return (
  7D09: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


  7D0A: 11 03 01 00                                      // ....

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  7D0E: 14 1A 5F 53 54 41 00                             // .._STA.

                    If (LEqual (And (SDS1, 0x40), 0x40))
                    {

  7D15: A0 0F 93 7B 53 44 53 31 0A 40 00 0A 40           // ...{SDS1.@..@

                        Return (0x0F)
                    }

  7D22: A4 0A 0F                                         // ...

                    Else
                    {

  7D25: A1 03                                            // ..

                        Return (Zero)
                    }
                }


  7D27: A4 00                                            // ..

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  7D29: 14 41 04 5F 43 52 53 00                          // .A._CRS.

                    Name (SBFI, 
  7D31: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x002A, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, )
                        {
                            0x00000022,
                        }
                    })

  7D36: 11 2F 0A 2C 8E 1E 00 01 00 01 02 00 00 01 06 00  // ./.,............
  7D46: 80 1A 06 00 2A 00 5C 5F 53 42 2E 50 43 49 30 2E  // ....*.\_SB.PCI0.
  7D56: 49 32 43 31 00 89 06 00 05 01 22 00 00 00 79 00  // I2C1......"...y.

                    Return (SBFI)
                }
            }


  7D66: A4 53 42 46 49                                   // .SBFI

            Device (TPD0)
            {

  7D6B: 5B 82 41 0F 54 50 44 30                          // [.A.TPD0

                Name (_ADR, One)  // _ADR: Address

  7D73: 08 5F 41 44 52 01                                // ._ADR.

                Name (_HID, "ELAN1000")  // _HID: Hardware ID

  7D79: 08 5F 48 49 44 0D 45 4C 41 4E 31 30 30 30 00     // ._HID.ELAN1000.

                Name (_CID, "PNP0C50")  // _CID: Compatible ID

  7D88: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

                Name (_UID, One)  // _UID: Unique ID

  7D96: 08 5F 55 49 44 01                                // ._UID.

                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State

  7D9C: 08 5F 53 30 57 0A 04                             // ._S0W..

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {

  7DA3: 14 43 04 5F 44 53 4D 04                          // .C._DSM.

                    If (LEqual (Arg0, 
  7DAB: A0 34 93 68                                      // .4.h

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {

  7DAF: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
  7DBF: 3D 89 38 DE                                      // =.8.

                        If (LEqual (Arg2, Zero))
                        {

  7DC3: A0 15 93 6A 00                                   // ...j.

                            If (LEqual (Arg1, One))
                            {

  7DC8: A0 09 93 69 01                                   // ...i.

                                Return (
  7DCD: A4                                               // .

Buffer (One)
                                {
                                     0x03                                           
                                })
                            }

  7DCE: 11 03 01 03                                      // ....

                            Else
                            {

  7DD2: A1 06                                            // ..

                                Return (
  7DD4: A4                                               // .

Buffer (One)
                                {
                                     0x00                                           
                                })
                            }
                        }


  7DD5: 11 03 01 00                                      // ....

                        If (LEqual (Arg2, One))
                        {

  7DD9: A0 06 93 6A 01                                   // ...j.

                            Return (One)
                        }
                    }

  7DDE: A4 01                                            // ..

                    Else
                    {

  7DE0: A1 06                                            // ..

                        Return (
  7DE2: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


  7DE3: 11 03 01 00                                      // ....

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  7DE7: 14 1A 5F 53 54 41 00                             // .._STA.

                    If (LEqual (And (SDS1, 0x04), 0x04))
                    {

  7DEE: A0 0F 93 7B 53 44 53 31 0A 04 00 0A 04           // ...{SDS1.....

                        Return (0x0F)
                    }

  7DFB: A4 0A 0F                                         // ...

                    Else
                    {

  7DFE: A1 03                                            // ..

                        Return (Zero)
                    }
                }


  7E00: A4 00                                            // ..

                Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                {

  7E02: 14 4B 05 5F 43 52 53 08                          // .K._CRS.

                    Name (SBFI, 
  7E0A: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, _Y27)
                        {
                            0x00000027,
                        }
                    })

  7E0F: 11 2F 0A 2C 8E 1E 00 01 00 01 02 00 00 01 06 00  // ./.,............
  7E1F: 80 1A 06 00 15 00 5C 5F 53 42 2E 50 43 49 30 2E  // ......\_SB.PCI0.
  7E2F: 49 32 43 31 00 89 06 00 05 01 27 00 00 00 79 00  // I2C1......'...y.

                    If (LEqual (GR13, One))
                    {

  7E3F: A0 19 93 47 52 31 33 01                          // ...GR13.

                        CreateByteField (SBFI, \_SB.PCI0.I2C1.TPD0._CRS._Y27._INT, VAL3)  // _INT: Interrupts

  7E47: 8C 53 42 46 49 0A 26 56 41 4C 33                 // .SBFI.&VAL3

                        Store (0x1B, VAL3)
                    }


  7E52: 70 0A 1B 56 41 4C 33                             // p..VAL3

                    Return (SBFI)
                }
            }


  7E59: A4 53 42 46 49                                   // .SBFI

            Device (TPD1)
            {

  7E5E: 5B 82 42 0F 54 50 44 31                          // [.B.TPD1

                Name (_ADR, One)  // _ADR: Address

  7E66: 08 5F 41 44 52 01                                // ._ADR.

                Name (_HID, "MSFT0001")  // _HID: Hardware ID

  7E6C: 08 5F 48 49 44 0D 4D 53 46 54 30 30 30 31 00     // ._HID.MSFT0001.

                Name (_CID, "PNP0C50")  // _CID: Compatible ID

  7E7B: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

                Name (_UID, One)  // _UID: Unique ID

  7E89: 08 5F 55 49 44 01                                // ._UID.

                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State

  7E8F: 08 5F 53 30 57 0A 04                             // ._S0W..

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {

  7E96: 14 44 04 5F 44 53 4D 04                          // .D._DSM.

                    If (LEqual (Arg0, 
  7E9E: A0 35 93 68                                      // .5.h

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {

  7EA2: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
  7EB2: 3D 89 38 DE                                      // =.8.

                        If (LEqual (Arg2, Zero))
                        {

  7EB6: A0 15 93 6A 00                                   // ...j.

                            If (LEqual (Arg1, One))
                            {

  7EBB: A0 09 93 69 01                                   // ...i.

                                Return (
  7EC0: A4                                               // .

Buffer (One)
                                {
                                     0x03                                           
                                })
                            }

  7EC1: 11 03 01 03                                      // ....

                            Else
                            {

  7EC5: A1 06                                            // ..

                                Return (
  7EC7: A4                                               // .

Buffer (One)
                                {
                                     0x00                                           
                                })
                            }
                        }


  7EC8: 11 03 01 00                                      // ....

                        If (LEqual (Arg2, One))
                        {

  7ECC: A0 07 93 6A 01                                   // ...j.

                            Return (0x20)
                        }
                    }

  7ED1: A4 0A 20                                         // .. 

                    Else
                    {

  7ED4: A1 06                                            // ..

                        Return (
  7ED6: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


  7ED7: 11 03 01 00                                      // ....

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  7EDB: 14 1A 5F 53 54 41 00                             // .._STA.

                    If (LEqual (And (SDS1, 0x08), 0x08))
                    {

  7EE2: A0 0F 93 7B 53 44 53 31 0A 08 00 0A 08           // ...{SDS1.....

                        Return (0x0F)
                    }

  7EEF: A4 0A 0F                                         // ...

                    Else
                    {

  7EF2: A1 03                                            // ..

                        Return (Zero)
                    }
                }


  7EF4: A4 00                                            // ..

                Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                {

  7EF6: 14 4B 05 5F 43 52 53 08                          // .K._CRS.

                    Name (SBFI, 
  7EFE: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0020, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, _Y28)
                        {
                            0x00000027,
                        }
                    })

  7F03: 11 2F 0A 2C 8E 1E 00 01 00 01 02 00 00 01 06 00  // ./.,............
  7F13: 80 1A 06 00 20 00 5C 5F 53 42 2E 50 43 49 30 2E  // .... .\_SB.PCI0.
  7F23: 49 32 43 31 00 89 06 00 05 01 27 00 00 00 79 00  // I2C1......'...y.

                    If (LEqual (GR13, One))
                    {

  7F33: A0 19 93 47 52 31 33 01                          // ...GR13.

                        CreateByteField (SBFI, \_SB.PCI0.I2C1.TPD1._CRS._Y28._INT, VAL3)  // _INT: Interrupts

  7F3B: 8C 53 42 46 49 0A 26 56 41 4C 33                 // .SBFI.&VAL3

                        Store (0x1B, VAL3)
                    }


  7F46: 70 0A 1B 56 41 4C 33                             // p..VAL3

                    Return (SBFI)
                }
            }


  7F4D: A4 53 42 46 49                                   // .SBFI

            Device (TPD2)
            {

  7F52: 5B 82 40 0F 54 50 44 32                          // [.@.TPD2

                Name (_ADR, One)  // _ADR: Address

  7F5A: 08 5F 41 44 52 01                                // ._ADR.

                Name (_HID, "ALP0001")  // _HID: Hardware ID

  7F60: 08 5F 48 49 44 0D 41 4C 50 30 30 30 31 00        // ._HID.ALP0001.

                Name (_CID, "PNP0C50")  // _CID: Compatible ID

  7F6E: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

                Name (_UID, One)  // _UID: Unique ID

  7F7C: 08 5F 55 49 44 01                                // ._UID.

                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State

  7F82: 08 5F 53 30 57 0A 04                             // ._S0W..

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {

  7F89: 14 43 04 5F 44 53 4D 04                          // .C._DSM.

                    If (LEqual (Arg0, 
  7F91: A0 34 93 68                                      // .4.h

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {

  7F95: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
  7FA5: 3D 89 38 DE                                      // =.8.

                        If (LEqual (Arg2, Zero))
                        {

  7FA9: A0 15 93 6A 00                                   // ...j.

                            If (LEqual (Arg1, One))
                            {

  7FAE: A0 09 93 69 01                                   // ...i.

                                Return (
  7FB3: A4                                               // .

Buffer (One)
                                {
                                     0x03                                           
                                })
                            }

  7FB4: 11 03 01 03                                      // ....

                            Else
                            {

  7FB8: A1 06                                            // ..

                                Return (
  7FBA: A4                                               // .

Buffer (One)
                                {
                                     0x00                                           
                                })
                            }
                        }


  7FBB: 11 03 01 00                                      // ....

                        If (LEqual (Arg2, One))
                        {

  7FBF: A0 06 93 6A 01                                   // ...j.

                            Return (One)
                        }
                    }

  7FC4: A4 01                                            // ..

                    Else
                    {

  7FC6: A1 06                                            // ..

                        Return (
  7FC8: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


  7FC9: 11 03 01 00                                      // ....

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  7FCD: 14 1A 5F 53 54 41 00                             // .._STA.

                    If (LEqual (And (SDS1, 0x80), 0x80))
                    {

  7FD4: A0 0F 93 7B 53 44 53 31 0A 80 00 0A 80           // ...{SDS1.....

                        Return (0x0F)
                    }

  7FE1: A4 0A 0F                                         // ...

                    Else
                    {

  7FE4: A1 03                                            // ..

                        Return (Zero)
                    }
                }


  7FE6: A4 00                                            // ..

                Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                {

  7FE8: 14 4B 05 5F 43 52 53 08                          // .K._CRS.

                    Name (SBFI, 
  7FF0: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x002A, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, _Y29)
                        {
                            0x00000027,
                        }
                    })

  7FF5: 11 2F 0A 2C 8E 1E 00 01 00 01 02 00 00 01 06 00  // ./.,............
  8005: 80 1A 06 00 2A 00 5C 5F 53 42 2E 50 43 49 30 2E  // ....*.\_SB.PCI0.
  8015: 49 32 43 31 00 89 06 00 05 01 27 00 00 00 79 00  // I2C1......'...y.

                    If (LEqual (GR13, One))
                    {

  8025: A0 19 93 47 52 31 33 01                          // ...GR13.

                        CreateByteField (SBFI, \_SB.PCI0.I2C1.TPD2._CRS._Y29._INT, VAL3)  // _INT: Interrupts

  802D: 8C 53 42 46 49 0A 26 56 41 4C 33                 // .SBFI.&VAL3

                        Store (0x1B, VAL3)
                    }


  8038: 70 0A 1B 56 41 4C 33                             // p..VAL3

                    Return (SBFI)
                }
            }


  803F: A4 53 42 46 49                                   // .SBFI

            Device (TPD3)
            {

  8044: 5B 82 42 0F 54 50 44 33                          // [.B.TPD3

                Name (_ADR, One)  // _ADR: Address

  804C: 08 5F 41 44 52 01                                // ._ADR.

                Name (_HID, "CYP0001")  // _HID: Hardware ID

  8052: 08 5F 48 49 44 0D 43 59 50 30 30 30 31 00        // ._HID.CYP0001.

                Name (_CID, "PNP0C50")  // _CID: Compatible ID

  8060: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

                Name (_UID, One)  // _UID: Unique ID

  806E: 08 5F 55 49 44 01                                // ._UID.

                Name (_S0W, 0x04)  // _S0W: S0 Device Wake State

  8074: 08 5F 53 30 57 0A 04                             // ._S0W..

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {

  807B: 14 43 04 5F 44 53 4D 04                          // .C._DSM.

                    If (LEqual (Arg0, 
  8083: A0 34 93 68                                      // .4.h

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {

  8087: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
  8097: 3D 89 38 DE                                      // =.8.

                        If (LEqual (Arg2, Zero))
                        {

  809B: A0 15 93 6A 00                                   // ...j.

                            If (LEqual (Arg1, One))
                            {

  80A0: A0 09 93 69 01                                   // ...i.

                                Return (
  80A5: A4                                               // .

Buffer (One)
                                {
                                     0x03                                           
                                })
                            }

  80A6: 11 03 01 03                                      // ....

                            Else
                            {

  80AA: A1 06                                            // ..

                                Return (
  80AC: A4                                               // .

Buffer (One)
                                {
                                     0x00                                           
                                })
                            }
                        }


  80AD: 11 03 01 00                                      // ....

                        If (LEqual (Arg2, One))
                        {

  80B1: A0 06 93 6A 01                                   // ...j.

                            Return (One)
                        }
                    }

  80B6: A4 01                                            // ..

                    Else
                    {

  80B8: A1 06                                            // ..

                        Return (
  80BA: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


  80BB: 11 03 01 00                                      // ....

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  80BF: 14 1C 5F 53 54 41 00                             // .._STA.

                    If (LEqual (And (SDS1, 0x0100), 0x0100))
                    {

  80C6: A0 11 93 7B 53 44 53 31 0B 00 01 00 0B 00 01     // ...{SDS1.......

                        Return (0x0F)
                    }

  80D5: A4 0A 0F                                         // ...

                    Else
                    {

  80D8: A1 03                                            // ..

                        Return (Zero)
                    }
                }


  80DA: A4 00                                            // ..

                Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                {

  80DC: 14 4B 05 5F 43 52 53 08                          // .K._CRS.

                    Name (SBFI, 
  80E4: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0024, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, _Y2A)
                        {
                            0x00000027,
                        }
                    })

  80E9: 11 2F 0A 2C 8E 1E 00 01 00 01 02 00 00 01 06 00  // ./.,............
  80F9: 80 1A 06 00 24 00 5C 5F 53 42 2E 50 43 49 30 2E  // ....$.\_SB.PCI0.
  8109: 49 32 43 31 00 89 06 00 05 01 27 00 00 00 79 00  // I2C1......'...y.

                    If (LEqual (GR13, One))
                    {

  8119: A0 19 93 47 52 31 33 01                          // ...GR13.

                        CreateByteField (SBFI, \_SB.PCI0.I2C1.TPD3._CRS._Y2A._INT, VAL3)  // _INT: Interrupts

  8121: 8C 53 42 46 49 0A 26 56 41 4C 33                 // .SBFI.&VAL3

                        Store (0x1B, VAL3)
                    }


  812C: 70 0A 1B 56 41 4C 33                             // p..VAL3

                    Return (SBFI)
                }
            }


  8133: A4 53 42 46 49                                   // .SBFI

            Device (TPD7)
            {

  8138: 5B 82 48 1D 54 50 44 37                          // [.H.TPD7

                Name (_ADR, One)  // _ADR: Address

  8140: 08 5F 41 44 52 01                                // ._ADR.

                Name (_HID, "ELAN1010")  // _HID: Hardware ID

  8146: 08 5F 48 49 44 0D 45 4C 41 4E 31 30 31 30 00     // ._HID.ELAN1010.

                Name (_CID, "PNP0C50")  // _CID: Compatible ID

  8155: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

                Name (_UID, One)  // _UID: Unique ID

  8163: 08 5F 55 49 44 01                                // ._UID.

                Name (_S0W, 0x03)  // _S0W: S0 Device Wake State

  8169: 08 5F 53 30 57 0A 03                             // ._S0W..

                Method (_S3W, 0, NotSerialized)  // _S3W: S3 Device Wake State
                {

  8170: 14 15 5F 53 33 57 00                             // .._S3W.

                    If (LEqual (S0ID, Zero))
                    {

  8177: A0 0A 93 53 30 49 44 00                          // ...S0ID.

                        Return (0x03)
                    }

  817F: A4 0A 03                                         // ...

                    Else
                    {

  8182: A1 03                                            // ..

                        Return (Zero)
                    }
                }


  8184: A4 00                                            // ..

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {

  8186: 14 43 04 5F 44 53 4D 04                          // .C._DSM.

                    If (LEqual (Arg0, 
  818E: A0 34 93 68                                      // .4.h

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {

  8192: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
  81A2: 3D 89 38 DE                                      // =.8.

                        If (LEqual (Arg2, Zero))
                        {

  81A6: A0 15 93 6A 00                                   // ...j.

                            If (LEqual (Arg1, One))
                            {

  81AB: A0 09 93 69 01                                   // ...i.

                                Return (
  81B0: A4                                               // .

Buffer (One)
                                {
                                     0x03                                           
                                })
                            }

  81B1: 11 03 01 03                                      // ....

                            Else
                            {

  81B5: A1 06                                            // ..

                                Return (
  81B7: A4                                               // .

Buffer (One)
                                {
                                     0x00                                           
                                })
                            }
                        }


  81B8: 11 03 01 00                                      // ....

                        If (LEqual (Arg2, One))
                        {

  81BC: A0 06 93 6A 01                                   // ...j.

                            Return (One)
                        }
                    }

  81C1: A4 01                                            // ..

                    Else
                    {

  81C3: A1 06                                            // ..

                        Return (
  81C5: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


  81C6: 11 03 01 00                                      // ....

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  81CA: 14 1C 5F 53 54 41 00                             // .._STA.

                    If (LEqual (And (SDS1, 0x0800), 0x0800))
                    {

  81D1: A0 11 93 7B 53 44 53 31 0B 00 08 00 0B 00 08     // ...{SDS1.......

                        Return (0x0F)
                    }

  81E0: A4 0A 0F                                         // ...

                    Else
                    {

  81E3: A1 03                                            // ..

                        Return (Zero)
                    }
                }


  81E5: A4 00                                            // ..

                Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                {

  81E7: 14 49 07 5F 43 52 53 08                          // .I._CRS.

                    Name (SBFI, 
  81EF: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0015, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, _Y2B)
                        {
                            0x00000027,
                        }
                    })

  81F4: 11 2F 0A 2C 8E 1E 00 01 00 01 02 00 00 01 06 00  // ./.,............
  8204: 80 1A 06 00 15 00 5C 5F 53 42 2E 50 43 49 30 2E  // ......\_SB.PCI0.
  8214: 49 32 43 31 00 89 06 00 15 01 27 00 00 00 79 00  // I2C1......'...y.

                    If (LEqual (GR13, One))
                    {

  8224: A0 37 93 47 52 31 33 01                          // .7.GR13.

                        CreateByteField (SBFI, \_SB.PCI0.I2C1.TPD7._CRS._Y2B._INT, VAL3)  // _INT: Interrupts
                        Store (0x1B, VAL3)

  822C: 8C 53 42 46 49 0A 26 56 41 4C 33 70 0A 1B 56 41  // .SBFI.&VAL3p..VA
  823C: 4C 33                                            // L3

                        If (LEqual (S0ID, Zero))
                        {

  823E: A0 1D 93 53 30 49 44 00                          // ...S0ID.

                            CreateByteField (SBFI, 0x24, VAL4)

  8246: 8C 53 42 46 49 0A 24 56 41 4C 34                 // .SBFI.$VAL4

                            And (VAL4, 0xE7, VAL4)
                        }
                    }


  8251: 7B 56 41 4C 34 0A E7 56 41 4C 34                 // {VAL4..VAL4

                    Return (SBFI)
                }


  825C: A4 53 42 46 49                                   // .SBFI

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  8261: 14 23 5F 50 52 57 00                             // .#_PRW.

                    If (LAnd (LEqual (S0ID, Zero), 
  8268: A0 16 90 93 53 30 49 44 00                       // ....S0ID.

LEqual (GR13, One)))
                    {

  8271: 93 47 52 31 33 01                                // .GR13.

                        Return (
  8277: A4                                               // .

Package (0x02)
                        {
                            0x0D, 
                            0x03
                        })
                    }


  8278: 12 06 02 0A 0D 0A 03                             // .......

                    Return (
  827F: A4                                               // .

Package (0x02)
                    {
                        Zero, 
                        Zero
                    })
                }


  8280: 12 04 02 00 00                                   // .....

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    ADBG ("TPD7 Ctrlr D0")

  8285: 14 46 05 5F 50 53 30 08 41 44 42 47 0D 54 50 44  // .F._PS0.ADBG.TPD
  8295: 37 20 43 74 72 6C 72 20 44 30 00                 // 7 Ctrlr D0.

                    If (LAnd (LEqual (S0ID, Zero), 
  82A0: A0 1B 90 93 53 30 49 44 00                       // ....S0ID.

LEqual (GR13, One)))
                    {
                        WTIN (0x0D, Zero)

  82A9: 93 47 52 31 33 01 57 54 49 4E 0A 0D 00           // .GR13.WTIN...

                        Store (One, GO13)
                    }


  82B6: 70 01 47 4F 31 33                                // p.GO13

                    If (CondRefOf (\_SB.PCI0.I2C1.TPD7.PS0X))
                    {
                        PS0X ()
                    }
                }


  82BC: A0 1F 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 49  // ..[.\/._SB_PCI0I
  82CC: 32 43 31 54 50 44 37 50 53 30 58 00 50 53 30 58  // 2C1TPD7PS0X.PS0X

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    ADBG ("TPD7 Ctrlr D3")

  82DC: 14 35 5F 50 53 33 08 41 44 42 47 0D 54 50 44 37  // .5_PS3.ADBG.TPD7
  82EC: 20 43 74 72 6C 72 20 44 33 00                    //  Ctrlr D3.

                    If (LAnd (LEqual (S0ID, Zero), 
  82F6: A0 1B 90 93 53 30 49 44 00                       // ....S0ID.

LEqual (GR13, One)))
                    {
                        WTIN (0x0D, One)

  82FF: 93 47 52 31 33 01 57 54 49 4E 0A 0D 01           // .GR13.WTIN...

                        Store (Zero, GO13)
                    }
                }
            }


  830C: 70 00 47 4F 31 33                                // p.GO13

            Device (TPD8)
            {

  8312: 5B 82 49 1D 54 50 44 38                          // [.I.TPD8

                Name (_ADR, One)  // _ADR: Address

  831A: 08 5F 41 44 52 01                                // ._ADR.

                Name (_HID, "SYNA2393")  // _HID: Hardware ID

  8320: 08 5F 48 49 44 0D 53 59 4E 41 32 33 39 33 00     // ._HID.SYNA2393.

                Name (_CID, "PNP0C50")  // _CID: Compatible ID

  832F: 08 5F 43 49 44 0D 50 4E 50 30 43 35 30 00        // ._CID.PNP0C50.

                Name (_UID, One)  // _UID: Unique ID

  833D: 08 5F 55 49 44 01                                // ._UID.

                Name (_S0W, 0x03)  // _S0W: S0 Device Wake State

  8343: 08 5F 53 30 57 0A 03                             // ._S0W..

                Method (_S3W, 0, NotSerialized)  // _S3W: S3 Device Wake State
                {

  834A: 14 15 5F 53 33 57 00                             // .._S3W.

                    If (LEqual (S0ID, Zero))
                    {

  8351: A0 0A 93 53 30 49 44 00                          // ...S0ID.

                        Return (0x03)
                    }

  8359: A4 0A 03                                         // ...

                    Else
                    {

  835C: A1 03                                            // ..

                        Return (Zero)
                    }
                }


  835E: A4 00                                            // ..

                Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
                {

  8360: 14 44 04 5F 44 53 4D 04                          // .D._DSM.

                    If (LEqual (Arg0, 
  8368: A0 35 93 68                                      // .5.h

ToUUID ("3cdff6f7-4267-4555-ad05-b30a3d8938de") /* HID I2C Device */))
                    {

  836C: 11 13 0A 10 F7 F6 DF 3C 67 42 55 45 AD 05 B3 0A  // .......<gBUE....
  837C: 3D 89 38 DE                                      // =.8.

                        If (LEqual (Arg2, Zero))
                        {

  8380: A0 15 93 6A 00                                   // ...j.

                            If (LEqual (Arg1, One))
                            {

  8385: A0 09 93 69 01                                   // ...i.

                                Return (
  838A: A4                                               // .

Buffer (One)
                                {
                                     0x03                                           
                                })
                            }

  838B: 11 03 01 03                                      // ....

                            Else
                            {

  838F: A1 06                                            // ..

                                Return (
  8391: A4                                               // .

Buffer (One)
                                {
                                     0x00                                           
                                })
                            }
                        }


  8392: 11 03 01 00                                      // ....

                        If (LEqual (Arg2, One))
                        {

  8396: A0 07 93 6A 01                                   // ...j.

                            Return (0x20)
                        }
                    }

  839B: A4 0A 20                                         // .. 

                    Else
                    {

  839E: A1 06                                            // ..

                        Return (
  83A0: A4                                               // .

Buffer (One)
                        {
                             0x00                                           
                        })
                    }
                }


  83A1: 11 03 01 00                                      // ....

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  83A5: 14 1C 5F 53 54 41 00                             // .._STA.

                    If (LEqual (And (SDS1, 0x1000), 0x1000))
                    {

  83AC: A0 11 93 7B 53 44 53 31 0B 00 10 00 0B 00 10     // ...{SDS1.......

                        Return (0x0F)
                    }

  83BB: A4 0A 0F                                         // ...

                    Else
                    {

  83BE: A1 03                                            // ..

                        Return (Zero)
                    }
                }


  83C0: A4 00                                            // ..

                Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
                {

  83C2: 14 49 07 5F 43 52 53 08                          // .I._CRS.

                    Name (SBFI, 
  83CA: 08 53 42 46 49                                   // .SBFI

ResourceTemplate ()
                    {
                        I2cSerialBusV2 (0x0020, ControllerInitiated, 0x00061A80,
                            AddressingMode7Bit, "\\_SB.PCI0.I2C1",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, _Y2C)
                        {
                            0x00000027,
                        }
                    })

  83CF: 11 2F 0A 2C 8E 1E 00 01 00 01 02 00 00 01 06 00  // ./.,............
  83DF: 80 1A 06 00 20 00 5C 5F 53 42 2E 50 43 49 30 2E  // .... .\_SB.PCI0.
  83EF: 49 32 43 31 00 89 06 00 15 01 27 00 00 00 79 00  // I2C1......'...y.

                    If (LEqual (GR13, One))
                    {

  83FF: A0 37 93 47 52 31 33 01                          // .7.GR13.

                        CreateByteField (SBFI, \_SB.PCI0.I2C1.TPD8._CRS._Y2C._INT, VAL3)  // _INT: Interrupts
                        Store (0x1B, VAL3)

  8407: 8C 53 42 46 49 0A 26 56 41 4C 33 70 0A 1B 56 41  // .SBFI.&VAL3p..VA
  8417: 4C 33                                            // L3

                        If (LEqual (S0ID, Zero))
                        {

  8419: A0 1D 93 53 30 49 44 00                          // ...S0ID.

                            CreateByteField (SBFI, 0x24, VAL4)

  8421: 8C 53 42 46 49 0A 24 56 41 4C 34                 // .SBFI.$VAL4

                            And (VAL4, 0xE7, VAL4)
                        }
                    }


  842C: 7B 56 41 4C 34 0A E7 56 41 4C 34                 // {VAL4..VAL4

                    Return (SBFI)
                }


  8437: A4 53 42 46 49                                   // .SBFI

                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
                {

  843C: 14 23 5F 50 52 57 00                             // .#_PRW.

                    If (LAnd (LEqual (S0ID, Zero), 
  8443: A0 16 90 93 53 30 49 44 00                       // ....S0ID.

LEqual (GR13, One)))
                    {

  844C: 93 47 52 31 33 01                                // .GR13.

                        Return (
  8452: A4                                               // .

Package (0x02)
                        {
                            0x0D, 
                            0x03
                        })
                    }


  8453: 12 06 02 0A 0D 0A 03                             // .......

                    Return (
  845A: A4                                               // .

Package (0x02)
                    {
                        Zero, 
                        Zero
                    })
                }


  845B: 12 04 02 00 00                                   // .....

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    ADBG ("TPD8 Ctrlr D0")

  8460: 14 46 05 5F 50 53 30 08 41 44 42 47 0D 54 50 44  // .F._PS0.ADBG.TPD
  8470: 38 20 43 74 72 6C 72 20 44 30 00                 // 8 Ctrlr D0.

                    If (LAnd (LEqual (S0ID, Zero), 
  847B: A0 1B 90 93 53 30 49 44 00                       // ....S0ID.

LEqual (GR13, One)))
                    {
                        WTIN (0x0D, Zero)

  8484: 93 47 52 31 33 01 57 54 49 4E 0A 0D 00           // .GR13.WTIN...

                        Store (One, GO13)
                    }


  8491: 70 01 47 4F 31 33                                // p.GO13

                    If (CondRefOf (\_SB.PCI0.I2C1.TPD8.PS0X))
                    {
                        PS0X ()
                    }
                }


  8497: A0 1F 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 49  // ..[.\/._SB_PCI0I
  84A7: 32 43 31 54 50 44 38 50 53 30 58 00 50 53 30 58  // 2C1TPD8PS0X.PS0X

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    ADBG ("TPD8 Ctrlr D3")

  84B7: 14 35 5F 50 53 33 08 41 44 42 47 0D 54 50 44 38  // .5_PS3.ADBG.TPD8
  84C7: 20 43 74 72 6C 72 20 44 33 00                    //  Ctrlr D3.

                    If (LAnd (LEqual (S0ID, Zero), 
  84D1: A0 1B 90 93 53 30 49 44 00                       // ....S0ID.

LEqual (GR13, One)))
                    {
                        WTIN (0x0D, One)

  84DA: 93 47 52 31 33 01 57 54 49 4E 0A 0D 01           // .GR13.WTIN...

                        Store (Zero, GO13)
                    }
                }
            }
        }


  84E7: 70 00 47 4F 31 33                                // p.GO13

        Scope (SPI0)
        {
        }


  84ED: 10 05 53 50 49 30                                // ..SPI0

        Scope (SPI1)
        {
        }


  84F3: 10 05 53 50 49 31                                // ..SPI1

        Scope (UA00)
        {

  84F9: 10 41 07 55 41 30 30                             // .A.UA00

            Device (BTH0)
            {

  8500: 5B 82 49 06 42 54 48 30                          // [.I.BTH0

                Name (_HID, "INT33E0")  // _HID: Hardware ID

  8508: 08 5F 48 49 44 0D 49 4E 54 33 33 45 30 00        // ._HID.INT33E0.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  8516: 14 3B 5F 43 52 53 00                             // .;_CRS.

                    Name (UBUF, 
  851D: 08 55 42 55 46                                   // .UBUF

ResourceTemplate ()
                    {
                        UartSerialBusV2 (0x0001C200, DataBitsEight, StopBitsOne,
                            0xC0, LittleEndian, ParityTypeNone, FlowControlHardware,
                            0x0020, 0x0020, "\\_SB.PCI0.UA00",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                    })

  8522: 11 2A 0A 27 8E 22 00 01 00 03 02 35 00 01 0A 00  // .*.'.".....5....
  8532: 00 C2 01 00 20 00 20 00 00 C0 5C 5F 53 42 2E 50  // .... . ...\_SB.P
  8542: 43 49 30 2E 55 41 30 30 00 79 00                 // CI0.UA00.y.

                    Return (UBUF)
                }


  854D: A4 55 42 55 46                                   // .UBUF

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  8552: 14 18 5F 53 54 41 00                             // .._STA.

                    If (LEqual (And (SDS4, One), One))
                    {

  8559: A0 0D 93 7B 53 44 53 34 01 00 01                 // ...{SDS4...

                        Return (0x0F)
                    }

  8564: A4 0A 0F                                         // ...

                    Else
                    {

  8567: A1 03                                            // ..

                        Return (Zero)
                    }
                }
            }
        }


  8569: A4 00                                            // ..

        Scope (UA01)
        {

  856B: 10 4A 18 55 41 30 31                             // .J.UA01

            Device (BTH1)
            {

  8572: 5B 82 4C 09 42 54 48 31                          // [.L.BTH1

                Name (_HID, "INT33E0")  // _HID: Hardware ID

  857A: 08 5F 48 49 44 0D 49 4E 54 33 33 45 30 00        // ._HID.INT33E0.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  8588: 14 4E 06 5F 43 52 53 00                          // .N._CRS.

                    Name (UBUF, 
  8590: 08 55 42 55 46                                   // .UBUF

ResourceTemplate ()
                    {
                        UartSerialBusV2 (0x0001C200, DataBitsEight, StopBitsOne,
                            0xC0, LittleEndian, ParityTypeNone, FlowControlHardware,
                            0x0020, 0x0020, "\\_SB.PCI0.UA01",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        Interrupt (ResourceConsumer, Level, ActiveLow, SharedAndWake, ,, )
                        {
                            0x00000019,
                        }
                        GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                            "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0057
                            }
                    })

  8595: 11 4C 05 0A 58 8E 22 00 01 00 03 02 35 00 01 0A  // .L..X.".....5...
  85A5: 00 00 C2 01 00 20 00 20 00 00 C0 5C 5F 53 42 2E  // ..... . ...\_SB.
  85B5: 50 43 49 30 2E 55 41 30 31 00 89 06 00 1D 01 19  // PCI0.UA01.......
  85C5: 00 00 00 8C 25 00 01 01 01 00 02 00 00 00 00 00  // ....%...........
  85D5: 00 17 00 00 19 00 28 00 00 00 57 00 5C 5F 53 42  // ......(...W.\_SB
  85E5: 2E 50 43 49 30 2E 47 50 49 30 00 79 00           // .PCI0.GPI0.y.

                    Return (UBUF)
                }


  85F2: A4 55 42 55 46                                   // .UBUF

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  85F7: 14 18 5F 53 54 41 00                             // .._STA.

                    If (LEqual (And (SDS5, One), One))
                    {

  85FE: A0 0D 93 7B 53 44 53 35 01 00 01                 // ...{SDS5...

                        Return (0x0F)
                    }

  8609: A4 0A 0F                                         // ...

                    Else
                    {

  860C: A1 03                                            // ..

                        Return (Zero)
                    }
                }
            }


  860E: A4 00                                            // ..

            Device (BTH2)
            {

  8610: 5B 82 44 0E 42 54 48 32                          // [.D.BTH2

                Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
                {

  8618: 14 24 5F 48 49 44 00                             // .$_HID.

                    If (LEqual (BCV4, Zero))
                    {

  861F: A0 11 93 42 43 56 34 00                          // ...BCV4.

                        Return ("BCM2E20")
                    }

  8627: A4 0D 42 43 4D 32 45 32 30 00                    // ..BCM2E20.

                    Else
                    {

  8631: A1 0B                                            // ..

                        Return ("BCM2E40")
                    }
                }


  8633: A4 0D 42 43 4D 32 45 34 30 00                    // ..BCM2E40.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  863D: 14 46 09 5F 43 52 53 00                          // .F._CRS.

                    Name (UBUF, 
  8645: 08 55 42 55 46                                   // .UBUF

ResourceTemplate ()
                    {
                        UartSerialBusV2 (0x0001C200, DataBitsEight, StopBitsOne,
                            0xC0, LittleEndian, ParityTypeNone, FlowControlHardware,
                            0x0020, 0x0020, "\\_SB.PCI0.UA01",
                            0x00, ResourceConsumer, , Exclusive,
                            )
                        Interrupt (ResourceConsumer, Edge, ActiveLow, Exclusive, ,, )
                        {
                            0x00000019,
                        }
                        GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                            "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0039
                            }
                        GpioIo (Exclusive, PullDefault, 0x0000, 0x0000, IoRestrictionOutputOnly,
                            "\\_SB.PCI0.GPI0", 0x00, ResourceConsumer, ,
                            )
                            {   // Pin list
                                0x0057
                            }
                    })

  864A: 11 44 08 0A 80 8E 22 00 01 00 03 02 35 00 01 0A  // .D....".....5...
  865A: 00 00 C2 01 00 20 00 20 00 00 C0 5C 5F 53 42 2E  // ..... . ...\_SB.
  866A: 50 43 49 30 2E 55 41 30 31 00 89 06 00 07 01 19  // PCI0.UA01.......
  867A: 00 00 00 8C 25 00 01 01 01 00 02 00 00 00 00 00  // ....%...........
  868A: 00 17 00 00 19 00 28 00 00 00 39 00 5C 5F 53 42  // ......(...9.\_SB
  869A: 2E 50 43 49 30 2E 47 50 49 30 00 8C 25 00 01 01  // .PCI0.GPI0..%...
  86AA: 01 00 02 00 00 00 00 00 00 17 00 00 19 00 28 00  // ..............(.
  86BA: 00 00 57 00 5C 5F 53 42 2E 50 43 49 30 2E 47 50  // ..W.\_SB.PCI0.GP
  86CA: 49 30 00 79 00                                   // I0.y.

                    Return (UBUF)
                }


  86CF: A4 55 42 55 46                                   // .UBUF

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  86D4: 14 1A 5F 53 54 41 00                             // .._STA.

                    If (LEqual (And (SDS5, 0x02), 0x02))
                    {

  86DB: A0 0F 93 7B 53 44 53 35 0A 02 00 0A 02           // ...{SDS5.....

                        Return (0x0F)
                    }

  86E8: A4 0A 0F                                         // ...

                    Else
                    {

  86EB: A1 03                                            // ..

                        Return (Zero)
                    }
                }


  86ED: A4 00                                            // ..

                Name (_S0W, 0x02)  // _S0W: S0 Device Wake State
            }
        }


  86EF: 08 5F 53 30 57 0A 02                             // ._S0W..

        Scope (SDHC)
        {

  86F6: 10 44 15 53 44 48 43                             // .D.SDHC

            Device (WI01)
            {

  86FD: 5B 82 4C 14 57 49 30 31                          // [.L.WI01

                Name (_ADR, One)  // _ADR: Address

  8705: 08 5F 41 44 52 01                                // ._ADR.

                Name (_DDN, "SDIO Wifi device Function 1")  // _DDN: DOS Device Name

  870B: 08 5F 44 44 4E 0D 53 44 49 4F 20 57 69 66 69 20  // ._DDN.SDIO Wifi 
  871B: 64 65 76 69 63 65 20 46 75 6E 63 74 69 6F 6E 20  // device Function 
  872B: 31 00                                            // 1.

                Method (_STA, 0, NotSerialized)  // _STA: Status
                {

  872D: 14 09 5F 53 54 41 00                             // .._STA.

                    Return (0x0F)
                }


  8734: A4 0A 0F                                         // ...

                Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
                {

  8737: 14 08 5F 52 4D 56 00                             // .._RMV.

                    Return (Zero)
                }


  873E: A4 00                                            // ..

                Name (_S4W, 0x02)  // _S4W: S4 Device Wake State

  8740: 08 5F 53 34 57 0A 02                             // ._S4W..

                Name (_S0W, 0x02)  // _S0W: S0 Device Wake State

  8747: 08 5F 53 30 57 0A 02                             // ._S0W..

                Method (_PS0, 0, Serialized)  // _PS0: Power State 0
                {
                    ADBG ("WiFi1 Enter D0")

  874E: 14 3A 5F 50 53 30 08 41 44 42 47 0D 57 69 46 69  // .:_PS0.ADBG.WiFi
  875E: 31 20 45 6E 74 65 72 20 44 30 00                 // 1 Enter D0.

                    If (CondRefOf (\_SB.PCI0.SDHC.WI01.PS0X))
                    {
                        PS0X ()
                    }
                }


  8769: A0 1F 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 53  // ..[.\/._SB_PCI0S
  8779: 44 48 43 57 49 30 31 50 53 30 58 00 50 53 30 58  // DHCWI01PS0X.PS0X

                Method (_PS2, 0, Serialized)  // _PS2: Power State 2
                {
                    ADBG ("WiFi1 Enter D2")
                }


  8789: 14 1A 5F 50 53 32 08 41 44 42 47 0D 57 69 46 69  // .._PS2.ADBG.WiFi
  8799: 31 20 45 6E 74 65 72 20 44 32 00                 // 1 Enter D2.

                Method (_PS3, 0, Serialized)  // _PS3: Power State 3
                {
                    ADBG ("WiFi1 Enter D3")

  87A4: 14 3A 5F 50 53 33 08 41 44 42 47 0D 57 69 46 69  // .:_PS3.ADBG.WiFi
  87B4: 31 20 45 6E 74 65 72 20 44 33 00                 // 1 Enter D3.

                    If (CondRefOf (\_SB.PCI0.SDHC.WI01.PS3X))
                    {
                        PS3X ()
                    }
                }


  87BF: A0 1F 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 53  // ..[.\/._SB_PCI0S
  87CF: 44 48 43 57 49 30 31 50 53 33 58 00 50 53 33 58  // DHCWI01PS3X.PS3X

                Name (RBUF, 
  87DF: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
                {
                    Memory32Fixed (ReadWrite,
                        0x00000000,         // Address Base
                        0x00000000,         // Address Length
                        _Y2D)
                    Interrupt (ResourceConsumer, Level, ActiveLow, SharedAndWake, ,, )
                    {
                        0x00000026,
                    }
                })

  87E4: 11 1A 0A 17 86 09 00 01 00 00 00 00 00 00 00 00  // ................
  87F4: 89 06 00 1D 01 26 00 00 00 79 00                 // .....&...y.

                Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
                {

  87FF: 14 4B 04 5F 43 52 53 00                          // .K._CRS.

                    CreateDWordField (^^RBUF, \_SB.PCI0.SDHC._Y26._BAS, AVAL)  // _BAS: Base Address

  8807: 8A 5E 5E 52 42 55 46 0A 04 41 56 41 4C           // .^^RBUF..AVAL

                    If (
  8814: A0 31 92                                         // .1.

LNotEqual (AVAL, Zero))
                    {

  8817: 93 41 56 41 4C 00                                // .AVAL.

                        CreateDWordField (RBUF, \_SB.PCI0.SDHC.WI01._Y2D._LEN, WLN0)  // _LEN: Length
                        Store (0x0C, WLN0)

  881D: 8A 52 42 55 46 0A 08 57 4C 4E 30 70 0A 0C 57 4C  // .RBUF..WLN0p..WL
  882D: 4E 30                                            // N0

                        CreateDWordField (RBUF, \_SB.PCI0.SDHC.WI01._Y2D._BAS, WVAL)  // _BAS: Base Address

  882F: 8A 52 42 55 46 0A 04 57 56 41 4C                 // .RBUF..WVAL

                        Add (AVAL, 0x1008, WVAL)
                    }


  883A: 72 41 56 41 4C 0B 08 10 57 56 41 4C              // rAVAL...WVAL

                    Return (RBUF)
                }
            }
        }


  8846: A4 52 42 55 46                                   // .RBUF

        Device (ADSP)
        {

  884B: 5B 82 49 2C 41 44 53 50                          // [.I,ADSP

            Name (_ADR, Zero)  // _ADR: Address

  8853: 08 5F 41 44 52 00                                // ._ADR.

            Name (_HID, "INT33C8")  // _HID: Hardware ID

  8859: 08 5F 48 49 44 0D 49 4E 54 33 33 43 38 00        // ._HID.INT33C8.

            Name (_CID, "INT33C8")  // _CID: Compatible ID

  8867: 08 5F 43 49 44 0D 49 4E 54 33 33 43 38 00        // ._CID.INT33C8.

            Name (_DDN, "Intel(R) Smart Sound Technology Host Controller - INT33C8")  // _DDN: DOS Device Name

  8875: 08 5F 44 44 4E 0D 49 6E 74 65 6C 28 52 29 20 53  // ._DDN.Intel(R) S
  8885: 6D 61 72 74 20 53 6F 75 6E 64 20 54 65 63 68 6E  // mart Sound Techn
  8895: 6F 6C 6F 67 79 20 48 6F 73 74 20 43 6F 6E 74 72  // ology Host Contr
  88A5: 6F 6C 6C 65 72 20 2D 20 49 4E 54 33 33 43 38 00  // oller - INT33C8.

            Name (_UID, One)  // _UID: Unique ID

  88B5: 08 5F 55 49 44 01                                // ._UID.

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                ADBG ("ADSP DEP Call")

  88BB: 14 41 05 5F 44 45 50 00 41 44 42 47 0D 41 44 53  // .A._DEP.ADBG.ADS
  88CB: 50 20 44 45 50 20 43 61 6C 6C 00                 // P DEP Call.

                If (LEqual (S0ID, One))
                {
                    ADBG ("ADSP DEP")

  88D6: A0 1D 93 53 30 49 44 01 41 44 42 47 0D 41 44 53  // ...S0ID.ADBG.ADS
  88E6: 50 20 44 45 50 00                                // P DEP.

                    Return (
  88EC: A4                                               // .

Package (0x01)
                    {
                        PEPD
                    })
                }

  88ED: 12 06 01 50 45 50 44                             // ...PEPD

                Else
                {
                    ADBG ("ADSP DEP NULL")

  88F4: A1 18 41 44 42 47 0D 41 44 53 50 20 44 45 50 20  // ..ADBG.ADSP DEP 
  8904: 4E 55 4C 4C 00                                   // NULL.

                    Return (
  8909: A4                                               // .

Package (0x00){})
                }
            }


  890A: 12 02 00                                         // ...

            Name (MCLK, Zero)

  890D: 08 4D 43 4C 4B 00                                // .MCLK.

            Name (SCLK, 0x09)

  8913: 08 53 43 4C 4B 0A 09                             // .SCLK..

            Name (SSPM, Zero)

  891A: 08 53 53 50 4D 00                                // .SSPM.

            Name (ABTH, Zero)

  8920: 08 41 42 54 48 00                                // .ABTH.

            Name (RBUF, 
  8926: 08 52 42 55 46                                   // .RBUF

ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00100000,         // Address Length
                    _Y2E)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    )
                Interrupt (ResourceConsumer, Level, ActiveLow, Exclusive, ,, )
                {
                    0x00000003,
                }
            })

  892B: 11 26 0A 23 86 09 00 01 00 00 00 00 00 00 10 00  // .&.#............
  893B: 86 09 00 01 00 00 00 00 00 10 00 00 89 06 00 05  // ................
  894B: 01 03 00 00 00 79 00                             // .....y.

            Name (EOD, One)

  8952: 08 45 4F 44 5F 01                                // .EOD_.

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

  8958: 14 43 14 5F 43 52 53 08                          // .C._CRS.


  8960: 08 5F 54 5F 30 00                                // ._T_0.

                Switch (ToInteger (CODS))
                {

  8966: A2 40 13 01 70 99 43 4F 44 53 00 5F 54 5F 30     // .@..p.CODS._T_0

                    Case (Zero)
                    {
                        Store (^^I2C0.ACD0.MCLK, MCLK)
                        Store (^^I2C0.ACD0.SCLK, SCLK)

  8975: A0 47 04 93 5F 54 5F 30 00 70 5E 5E 2F 03 49 32  // .G.._T_0.p^^/.I2
  8985: 43 30 41 43 44 30 4D 43 4C 4B 4D 43 4C 4B 70 5E  // C0ACD0MCLKMCLKp^
  8995: 5E 2F 03 49 32 43 30 41 43 44 30 53 43 4C 4B 53  // ^/.I2C0ACD0SCLKS
  89A5: 43 4C 4B                                         // CLK

                        Store (^^I2C0.ACD0.SSPM, SSPM)
                    }

  89A8: 70 5E 5E 2F 03 49 32 43 30 41 43 44 30 53 53 50  // p^^/.I2C0ACD0SSP
  89B8: 4D 53 53 50 4D                                   // MSSPM

                    Case
  89BD: A1 48 0D                                         // .H.

 (One)
                    {
                        Store (^^I2C0.ACD1.MCLK, MCLK)
                        Store (^^I2C0.ACD1.SCLK, SCLK)

  89C0: A0 47 04 93 5F 54 5F 30 01 70 5E 5E 2F 03 49 32  // .G.._T_0.p^^/.I2
  89D0: 43 30 41 43 44 31 4D 43 4C 4B 4D 43 4C 4B 70 5E  // C0ACD1MCLKMCLKp^
  89E0: 5E 2F 03 49 32 43 30 41 43 44 31 53 43 4C 4B 53  // ^/.I2C0ACD1SCLKS
  89F0: 43 4C 4B                                         // CLK

                        Store (^^I2C0.ACD1.SSPM, SSPM)
                    }

  89F3: 70 5E 5E 2F 03 49 32 43 30 41 43 44 31 53 53 50  // p^^/.I2C0ACD1SSP
  8A03: 4D 53 53 50 4D                                   // MSSPM

                    Case
  8A08: A1 4D 08                                         // .M.

 (0x02)
                    {
                        Store (^^I2C0.ACD2.MCLK, MCLK)
                        Store (^^I2C0.ACD2.SCLK, SCLK)

  8A0B: A0 48 04 93 5F 54 5F 30 0A 02 70 5E 5E 2F 03 49  // .H.._T_0..p^^/.I
  8A1B: 32 43 30 41 43 44 32 4D 43 4C 4B 4D 43 4C 4B 70  // 2C0ACD2MCLKMCLKp
  8A2B: 5E 5E 2F 03 49 32 43 30 41 43 44 32 53 43 4C 4B  // ^^/.I2C0ACD2SCLK
  8A3B: 53 43 4C 4B                                      // SCLK

                        Store (^^I2C0.ACD2.SSPM, SSPM)
                    }

  8A3F: 70 5E 5E 2F 03 49 32 43 30 41 43 44 32 53 53 50  // p^^/.I2C0ACD2SSP
  8A4F: 4D 53 53 50 4D                                   // MSSPM

                    Default
                    {
                        Store (^^I2C0.ACD0.MCLK, MCLK)
                        Store (^^I2C0.ACD0.SCLK, SCLK)

  8A54: A1 41 04 70 5E 5E 2F 03 49 32 43 30 41 43 44 30  // .A.p^^/.I2C0ACD0
  8A64: 4D 43 4C 4B 4D 43 4C 4B 70 5E 5E 2F 03 49 32 43  // MCLKMCLKp^^/.I2C
  8A74: 30 41 43 44 30 53 43 4C 4B 53 43 4C 4B           // 0ACD0SCLKSCLK

                        Store (^^I2C0.ACD0.SSPM, SSPM)
                    }


  8A81: 70 5E 5E 2F 03 49 32 43 30 41 43 44 30 53 53 50  // p^^/.I2C0ACD0SSP
  8A91: 4D 53 53 50 4D                                   // MSSPM

                }


  8A96: A5                                               // .

                Return (RBUF)
            }


  8A97: A4 52 42 55 46                                   // .RBUF

            Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
            {

  8A9C: 14 0C 5F 53 52 53 09                             // .._SRS.

                Store (One, EOD)
            }


  8AA3: 70 01 45 4F 44 5F                                // p.EOD_

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  8AA9: 14 45 04 5F 53 54 41 00                          // .E._STA.

                If (
  8AB1: A0 3B 92                                         // .;.

LGreaterEqual (OSYS, 0x07DC))
                {

  8AB4: 95 4F 53 59 53 0B DC 07                          // .OSYS...

                    If (LEqual (S0ID, One))
                    {

  8ABC: A0 30 93 53 30 49 44 01                          // .0.S0ID.

                        CreateDWordField (RBUF, \_SB.PCI0.ADSP._Y2E._BAS, BVAL)  // _BAS: Base Address

  8AC4: 8A 52 42 55 46 0A 04 42 56 41 4C                 // .RBUF..BVAL

                        If (LEqual (BVAL, Zero))
                        {

  8ACF: A0 09 93 42 56 41 4C 00                          // ...BVAL.

                            Return (Zero)
                        }


  8AD7: A4 00                                            // ..

                        If (And (EOD, One, EOD))
                        {

  8AD9: A0 0E 7B 45 4F 44 5F 01 45 4F 44 5F              // ..{EOD_.EOD_

                            Return (0x0F)
                        }

  8AE5: A4 0A 0F                                         // ...

                        Else
                        {

  8AE8: A1 04                                            // ..

                            Return (0x0D)
                        }
                    }
                }


  8AEA: A4 0A 0D                                         // ...

                Return (Zero)
            }


  8AED: A4 00                                            // ..

            Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
            {

  8AEF: 14 0C 5F 44 49 53 00                             // .._DIS.

                Store (Zero, EOD)
            }


  8AF6: 70 00 45 4F 44 5F                                // p.EOD_

            Device (I2S0)
            {

  8AFC: 5B 82 0B 49 32 53 30                             // [..I2S0

                Name (_ADR, Zero)  // _ADR: Address
            }


  8B03: 08 5F 41 44 52 00                                // ._ADR.

            Device (I2S1)
            {

  8B09: 5B 82 0B 49 32 53 31                             // [..I2S1

                Name (_ADR, One)  // _ADR: Address
            }
        }


  8B10: 08 5F 41 44 52 01                                // ._ADR.

        Device (SAT0)
        {

  8B16: 5B 82 4A 26 53 41 54 30                          // [.J&SAT0

            Name (_ADR, 0x001F0002)  // _ADR: Address

  8B1E: 08 5F 41 44 52 0C 02 00 1F 00                    // ._ADR.....

            Name (FDEV, Zero)

  8B28: 08 46 44 45 56 00                                // .FDEV.

            Name (FDRP, Zero)

  8B2E: 08 46 44 52 50 00                                // .FDRP.

            Device (PRT0)
            {

  8B34: 5B 82 47 08 50 52 54 30                          // [.G.PRT0

                Name (_ADR, 0xFFFF)  // _ADR: Address

  8B3C: 08 5F 41 44 52 0B FF FF                          // ._ADR...

                Method (_SDD, 1, Serialized)  // _SDD: Set Device Data
                {

  8B44: 14 28 5F 53 44 44 09                             // .(_SDD.

                    CreateByteField (Arg0, 0x9D, BFDS)
                    ToInteger (BFDS, FDEV)

  8B4B: 8C 68 0A 9D 42 46 44 53 99 42 46 44 53 46 44 45  // .h..BFDS.BFDSFDE
  8B5B: 56                                               // V

                    CreateByteField (Arg0, 0x9A, BFRP)

  8B5C: 8C 68 0A 9A 42 46 52 50                          // .h..BFRP

                    ToInteger (BFRP, FDRP)
                }


  8B64: 99 42 46 52 50 46 44 52 50                       // .BFRPFDRP

                Method (_GTF, 0, Serialized)  // _GTF: Get Task File
                {

  8B6D: 14 4F 04 5F 47 54 46 08                          // .O._GTF.

                    If (LAnd (LAnd (LEqual (DVS0, One), 
  8B75: A0 32 90 90 93 44 56 53 30 01                    // .2...DVS0.

LEqual (And (FDEV, One), One)), 
  8B7F: 93 7B 46 44 45 56 01 00 01                       // .{FDEV...

LEqual (And (FDRP, 0x80), 0x80)))
                    {

  8B88: 93 7B 46 44 52 50 0A 80 00 0A 80                 // .{FDRP.....

                        Name (PIB1, 
  8B93: 08 50 49 42 31                                   // .PIB1

Buffer (0x07)
                        {
                             0x10, 0x09, 0x00, 0x00, 0x00, 0xB0, 0xEF       
                        })

  8B98: 11 0A 0A 07 10 09 00 00 00 B0 EF                 // ...........

                        Return (PIB1)
                    }


  8BA3: A4 50 49 42 31                                   // .PIB1

                    Name (PIB2, 
  8BA8: 08 50 49 42 32                                   // .PIB2

Buffer (0x07)
                    {
                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00       
                    })

  8BAD: 11 0A 0A 07 00 00 00 00 00 00 00                 // ...........

                    Return (PIB2)
                }
            }


  8BB8: A4 50 49 42 32                                   // .PIB2

            Device (PRT1)
            {

  8BBD: 5B 82 45 09 50 52 54 31                          // [.E.PRT1

                Name (_ADR, 0x0001FFFF)  // _ADR: Address

  8BC5: 08 5F 41 44 52 0C FF FF 01 00                    // ._ADR.....

                Name (FDEV, Zero)

  8BCF: 08 46 44 45 56 00                                // .FDEV.

                Name (FDRP, Zero)

  8BD5: 08 46 44 52 50 00                                // .FDRP.

                Method (_SDD, 1, Serialized)  // _SDD: Set Device Data
                {

  8BDB: 14 28 5F 53 44 44 09                             // .(_SDD.

                    CreateByteField (Arg0, 0x9D, BFDS)
                    ToInteger (BFDS, FDEV)

  8BE2: 8C 68 0A 9D 42 46 44 53 99 42 46 44 53 46 44 45  // .h..BFDS.BFDSFDE
  8BF2: 56                                               // V

                    CreateByteField (Arg0, 0x9A, BFRP)

  8BF3: 8C 68 0A 9A 42 46 52 50                          // .h..BFRP

                    ToInteger (BFRP, FDRP)
                }


  8BFB: 99 42 46 52 50 46 44 52 50                       // .BFRPFDRP

                Method (_GTF, 0, Serialized)  // _GTF: Get Task File
                {

  8C04: 14 4F 04 5F 47 54 46 08                          // .O._GTF.

                    If (LAnd (LAnd (LEqual (DVS1, One), 
  8C0C: A0 32 90 90 93 44 56 53 31 01                    // .2...DVS1.

LEqual (And (FDEV, One), One)), 
  8C16: 93 7B 46 44 45 56 01 00 01                       // .{FDEV...

LEqual (And (FDRP, 0x80), 0x80)))
                    {

  8C1F: 93 7B 46 44 52 50 0A 80 00 0A 80                 // .{FDRP.....

                        Name (PIB1, 
  8C2A: 08 50 49 42 31                                   // .PIB1

Buffer (0x07)
                        {
                             0x10, 0x09, 0x00, 0x00, 0x00, 0xB0, 0xEF       
                        })

  8C2F: 11 0A 0A 07 10 09 00 00 00 B0 EF                 // ...........

                        Return (PIB1)
                    }


  8C3A: A4 50 49 42 31                                   // .PIB1

                    Name (PIB2, 
  8C3F: 08 50 49 42 32                                   // .PIB2

Buffer (0x07)
                    {
                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00       
                    })

  8C44: 11 0A 0A 07 00 00 00 00 00 00 00                 // ...........

                    Return (PIB2)
                }
            }


  8C4F: A4 50 49 42 32                                   // .PIB2

            Device (PRT2)
            {

  8C54: 5B 82 45 09 50 52 54 32                          // [.E.PRT2

                Name (_ADR, 0x0002FFFF)  // _ADR: Address

  8C5C: 08 5F 41 44 52 0C FF FF 02 00                    // ._ADR.....

                Name (FDEV, Zero)

  8C66: 08 46 44 45 56 00                                // .FDEV.

                Name (FDRP, Zero)

  8C6C: 08 46 44 52 50 00                                // .FDRP.

                Method (_SDD, 1, Serialized)  // _SDD: Set Device Data
                {

  8C72: 14 28 5F 53 44 44 09                             // .(_SDD.

                    CreateByteField (Arg0, 0x9D, BFDS)
                    ToInteger (BFDS, FDEV)

  8C79: 8C 68 0A 9D 42 46 44 53 99 42 46 44 53 46 44 45  // .h..BFDS.BFDSFDE
  8C89: 56                                               // V

                    CreateByteField (Arg0, 0x9A, BFRP)

  8C8A: 8C 68 0A 9A 42 46 52 50                          // .h..BFRP

                    ToInteger (BFRP, FDRP)
                }


  8C92: 99 42 46 52 50 46 44 52 50                       // .BFRPFDRP

                Method (_GTF, 0, Serialized)  // _GTF: Get Task File
                {

  8C9B: 14 4F 04 5F 47 54 46 08                          // .O._GTF.

                    If (LAnd (LAnd (LEqual (DVS2, One), 
  8CA3: A0 32 90 90 93 44 56 53 32 01                    // .2...DVS2.

LEqual (And (FDEV, One), One)), 
  8CAD: 93 7B 46 44 45 56 01 00 01                       // .{FDEV...

LEqual (And (FDRP, 0x80), 0x80)))
                    {

  8CB6: 93 7B 46 44 52 50 0A 80 00 0A 80                 // .{FDRP.....

                        Name (PIB1, 
  8CC1: 08 50 49 42 31                                   // .PIB1

Buffer (0x07)
                        {
                             0x10, 0x09, 0x00, 0x00, 0x00, 0xB0, 0xEF       
                        })

  8CC6: 11 0A 0A 07 10 09 00 00 00 B0 EF                 // ...........

                        Return (PIB1)
                    }


  8CD1: A4 50 49 42 31                                   // .PIB1

                    Name (PIB2, 
  8CD6: 08 50 49 42 32                                   // .PIB2

Buffer (0x07)
                    {
                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00       
                    })

  8CDB: 11 0A 0A 07 00 00 00 00 00 00 00                 // ...........

                    Return (PIB2)
                }
            }


  8CE6: A4 50 49 42 32                                   // .PIB2

            Device (PRT3)
            {

  8CEB: 5B 82 45 09 50 52 54 33                          // [.E.PRT3

                Name (_ADR, 0x0003FFFF)  // _ADR: Address

  8CF3: 08 5F 41 44 52 0C FF FF 03 00                    // ._ADR.....

                Name (FDEV, Zero)

  8CFD: 08 46 44 45 56 00                                // .FDEV.

                Name (FDRP, Zero)

  8D03: 08 46 44 52 50 00                                // .FDRP.

                Method (_SDD, 1, Serialized)  // _SDD: Set Device Data
                {

  8D09: 14 28 5F 53 44 44 09                             // .(_SDD.

                    CreateByteField (Arg0, 0x9D, BFDS)
                    ToInteger (BFDS, FDEV)

  8D10: 8C 68 0A 9D 42 46 44 53 99 42 46 44 53 46 44 45  // .h..BFDS.BFDSFDE
  8D20: 56                                               // V

                    CreateByteField (Arg0, 0x9A, BFRP)

  8D21: 8C 68 0A 9A 42 46 52 50                          // .h..BFRP

                    ToInteger (BFRP, FDRP)
                }


  8D29: 99 42 46 52 50 46 44 52 50                       // .BFRPFDRP

                Method (_GTF, 0, Serialized)  // _GTF: Get Task File
                {

  8D32: 14 4F 04 5F 47 54 46 08                          // .O._GTF.

                    If (LAnd (LAnd (LEqual (DVS3, One), 
  8D3A: A0 32 90 90 93 44 56 53 33 01                    // .2...DVS3.

LEqual (And (FDEV, One), One)), 
  8D44: 93 7B 46 44 45 56 01 00 01                       // .{FDEV...

LEqual (And (FDRP, 0x80), 0x80)))
                    {

  8D4D: 93 7B 46 44 52 50 0A 80 00 0A 80                 // .{FDRP.....

                        Name (PIB1, 
  8D58: 08 50 49 42 31                                   // .PIB1

Buffer (0x07)
                        {
                             0x10, 0x09, 0x00, 0x00, 0x00, 0xB0, 0xEF       
                        })

  8D5D: 11 0A 0A 07 10 09 00 00 00 B0 EF                 // ...........

                        Return (PIB1)
                    }


  8D68: A4 50 49 42 31                                   // .PIB1

                    Name (PIB2, 
  8D6D: 08 50 49 42 32                                   // .PIB2

Buffer (0x07)
                    {
                         0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00       
                    })

  8D72: 11 0A 0A 07 00 00 00 00 00 00 00                 // ...........

                    Return (PIB2)
                }
            }
        }


  8D7D: A4 50 49 42 32                                   // .PIB2

        Device (SAT1)
        {

  8D82: 5B 82 0F 53 41 54 31                             // [..SAT1

            Name (_ADR, 0x001F0005)  // _ADR: Address
        }


  8D89: 08 5F 41 44 52 0C 05 00 1F 00                    // ._ADR.....

        Device (SBUS)
        {

  8D93: 5B 82 44 47 53 42 55 53                          // [.DGSBUS

            Name (_ADR, 0x001F0003)  // _ADR: Address

  8D9B: 08 5F 41 44 52 0C 03 00 1F 00                    // ._ADR.....

            OperationRegion (SMBP, PCI_Config, 0x40, 0xC0)

  8DA5: 5B 80 53 4D 42 50 02 0A 40 0A C0                 // [.SMBP..@..

            Field (SMBP, DWordAcc, NoLock, Preserve)
            {
                    ,   2, 
                I2CE,   1
            }


  8DB0: 5B 81 0D 53 4D 42 50 03 00 02 49 32 43 45 01     // [..SMBP...I2CE.

            OperationRegion (SMPB, PCI_Config, 0x20, 0x04)

  8DBF: 5B 80 53 4D 50 42 02 0A 20 0A 04                 // [.SMPB.. ..

            Field (SMPB, DWordAcc, NoLock, Preserve)
            {
                    ,   5, 
                SBAR,   11
            }


  8DCA: 5B 81 0D 53 4D 50 42 03 00 05 53 42 41 52 0B     // [..SMPB...SBAR.

            OperationRegion (SMBI, SystemIO, ShiftLeft (SBAR, 0x05), 0x10)

  8DD9: 5B 80 53 4D 42 49 01 79 53 42 41 52 0A 05 00 0A  // [.SMBI.ySBAR....
  8DE9: 10                                               // .

            Field (SMBI, ByteAcc, NoLock, Preserve)
            {
                HSTS,   8, 
                Offset (0x02), 
                HCON,   8, 
                HCOM,   8, 
                TXSA,   8, 
                DAT0,   8, 
                DAT1,   8, 
                HBDR,   8, 
                PECR,   8, 
                RXSA,   8, 
                SDAT,   16
            }


  8DEA: 5B 81 3A 53 4D 42 49 01 48 53 54 53 08 00 08 48  // [.:SMBI.HSTS...H
  8DFA: 43 4F 4E 08 48 43 4F 4D 08 54 58 53 41 08 44 41  // CON.HCOM.TXSA.DA
  8E0A: 54 30 08 44 41 54 31 08 48 42 44 52 08 50 45 43  // T0.DAT1.HBDR.PEC
  8E1A: 52 08 52 58 53 41 08 53 44 41 54 10              // R.RXSA.SDAT.

            Method (SSXB, 2, Serialized)
            {

  8E26: 14 44 04 53 53 58 42 0A                          // .D.SSXB.

                If (STRT ())
                {

  8E2E: A0 07 53 54 52 54                                // ..STRT

                    Return (Zero)
                }

                Store (Zero, I2CE)
                Store (0xBF, HSTS)
                Store (Arg0, TXSA)
                Store (Arg1, HCOM)
                Store (0x48, HCON)

  8E34: A4 00 70 00 49 32 43 45 70 0A BF 48 53 54 53 70  // ..p.I2CEp..HSTSp
  8E44: 68 54 58 53 41 70 69 48 43 4F 4D 70 0A 48 48 43  // hTXSApiHCOMp.HHC
  8E54: 4F 4E                                            // ON

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS)

  8E56: A0 12 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
  8E66: 53                                               // S

                    Return (One)
                }


  8E67: A4 01                                            // ..

                Return (Zero)
            }


  8E69: A4 00                                            // ..

            Method (SRXB, 1, Serialized)
            {

  8E6B: 14 48 04 53 52 58 42 09                          // .H.SRXB.

                If (STRT ())
                {

  8E73: A0 09 53 54 52 54                                // ..STRT

                    Return (0xFFFF)
                }

                Store (Zero, I2CE)
                Store (0xBF, HSTS)
                Store (Or (Arg0, One), TXSA)
                Store (0x44, HCON)

  8E79: A4 0B FF FF 70 00 49 32 43 45 70 0A BF 48 53 54  // ....p.I2CEp..HST
  8E89: 53 70 7D 68 01 00 54 58 53 41 70 0A 44 48 43 4F  // Sp}h..TXSAp.DHCO
  8E99: 4E                                               // N

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS)

  8E9A: A0 15 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
  8EAA: 53                                               // S

                    Return (DAT0)
                }


  8EAB: A4 44 41 54 30                                   // .DAT0

                Return (0xFFFF)
            }


  8EB0: A4 0B FF FF                                      // ....

            Method (SWRB, 3, Serialized)
            {

  8EB4: 14 4A 04 53 57 52 42 0B                          // .J.SWRB.

                If (STRT ())
                {

  8EBC: A0 07 53 54 52 54                                // ..STRT

                    Return (Zero)
                }

                Store (Zero, I2CE)
                Store (0xBF, HSTS)
                Store (Arg0, TXSA)
                Store (Arg1, HCOM)
                Store (Arg2, DAT0)
                Store (0x48, HCON)

  8EC2: A4 00 70 00 49 32 43 45 70 0A BF 48 53 54 53 70  // ..p.I2CEp..HSTSp
  8ED2: 68 54 58 53 41 70 69 48 43 4F 4D 70 6A 44 41 54  // hTXSApiHCOMpjDAT
  8EE2: 30 70 0A 48 48 43 4F 4E                          // 0p.HHCON

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS)

  8EEA: A0 12 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
  8EFA: 53                                               // S

                    Return (One)
                }


  8EFB: A4 01                                            // ..

                Return (Zero)
            }


  8EFD: A4 00                                            // ..

            Method (SRDB, 2, Serialized)
            {

  8EFF: 14 4E 04 53 52 44 42 0A                          // .N.SRDB.

                If (STRT ())
                {

  8F07: A0 09 53 54 52 54                                // ..STRT

                    Return (0xFFFF)
                }

                Store (Zero, I2CE)
                Store (0xBF, HSTS)
                Store (Or (Arg0, One), TXSA)
                Store (Arg1, HCOM)
                Store (0x48, HCON)

  8F0D: A4 0B FF FF 70 00 49 32 43 45 70 0A BF 48 53 54  // ....p.I2CEp..HST
  8F1D: 53 70 7D 68 01 00 54 58 53 41 70 69 48 43 4F 4D  // Sp}h..TXSApiHCOM
  8F2D: 70 0A 48 48 43 4F 4E                             // p.HHCON

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS)

  8F34: A0 15 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
  8F44: 53                                               // S

                    Return (DAT0)
                }


  8F45: A4 44 41 54 30                                   // .DAT0

                Return (0xFFFF)
            }


  8F4A: A4 0B FF FF                                      // ....

            Method (SWRW, 3, Serialized)
            {

  8F4E: 14 48 05 53 57 52 57 0B                          // .H.SWRW.

                If (STRT ())
                {

  8F56: A0 07 53 54 52 54                                // ..STRT

                    Return (Zero)
                }

                Store (Zero, I2CE)
                Store (0xBF, HSTS)
                Store (Arg0, TXSA)
                Store (Arg1, HCOM)
                And (Arg2, 0xFF, DAT1)
                And (ShiftRight (Arg2, 0x08), 0xFF, DAT0)
                Store (0x4C, HCON)

  8F5C: A4 00 70 00 49 32 43 45 70 0A BF 48 53 54 53 70  // ..p.I2CEp..HSTSp
  8F6C: 68 54 58 53 41 70 69 48 43 4F 4D 7B 6A 0A FF 44  // hTXSApiHCOM{j..D
  8F7C: 41 54 31 7B 7A 6A 0A 08 00 0A FF 44 41 54 30 70  // AT1{zj.....DAT0p
  8F8C: 0A 4C 48 43 4F 4E                                // .LHCON

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS)

  8F92: A0 12 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
  8FA2: 53                                               // S

                    Return (One)
                }


  8FA3: A4 01                                            // ..

                Return (Zero)
            }


  8FA5: A4 00                                            // ..

            Method (SRDW, 2, Serialized)
            {

  8FA7: 14 4A 05 53 52 44 57 0A                          // .J.SRDW.

                If (STRT ())
                {

  8FAF: A0 09 53 54 52 54                                // ..STRT

                    Return (0xFFFF)
                }

                Store (Zero, I2CE)
                Store (0xBF, HSTS)
                Store (Or (Arg0, One), TXSA)
                Store (Arg1, HCOM)
                Store (0x4C, HCON)

  8FB5: A4 0B FF FF 70 00 49 32 43 45 70 0A BF 48 53 54  // ....p.I2CEp..HST
  8FC5: 53 70 7D 68 01 00 54 58 53 41 70 69 48 43 4F 4D  // Sp}h..TXSApiHCOM
  8FD5: 70 0A 4C 48 43 4F 4E                             // p.LHCON

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS)

  8FDC: A0 1F 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
  8FEC: 53                                               // S

                    Return (
  8FED: A4                                               // .

Or (ShiftLeft (DAT0, 0x08), DAT1))
                }


  8FEE: 7D 79 44 41 54 30 0A 08 00 44 41 54 31 00        // }yDAT0...DAT1.

                Return (0xFFFFFFFF)
            }


  8FFC: A4 0C FF FF FF FF                                // ......

            Method (SBLW, 4, Serialized)
            {

  9002: 14 4A 09 53 42 4C 57 0C                          // .J.SBLW.

                If (STRT ())
                {

  900A: A0 07 53 54 52 54                                // ..STRT

                    Return (Zero)
                }

                Store (Arg3, I2CE)
                Store (0xBF, HSTS)
                Store (Arg0, TXSA)
                Store (Arg1, HCOM)
                Store (SizeOf (Arg2), DAT0)
                Store (Zero, Local1)
                Store (DerefOf (
  9010: A4 00 70 6B 49 32 43 45 70 0A BF 48 53 54 53 70  // ..pkI2CEp..HSTSp
  9020: 68 54 58 53 41 70 69 48 43 4F 4D 70 87 6A 44 41  // hTXSApiHCOMp.jDA
  9030: 54 30 70 00 61 70 83                             // T0p.ap.

Index (Arg2, Zero)), HBDR)
                Store (0x54, HCON)

  9037: 88 6A 00 00 48 42 44 52 70 0A 54 48 43 4F 4E     // .j..HBDRp.THCON

                While (LGreater (SizeOf (Arg2), Local1))
                {
                    Store (0x0FA0, Local0)

  9046: A2 41 04 94 87 6A 61 70 0B A0 0F 60              // .A...jap...`

                    While (LAnd (LNot (
  9052: A2 12 90 92                                      // ....

And (HSTS, 0x80)), Local0))
                    {
                        Decrement (Local0)

  9056: 7B 48 53 54 53 0A 80 00 60 76 60                 // {HSTS...`v`

                        Stall (0x32)
                    }


  9061: 5B 21 0A 32                                      // [!.2

                    If (LNot (Local0))
                    {
                        KILL ()

  9065: A0 09 92 60 4B 49 4C 4C                          // ...`KILL

                        Return (Zero)
                    }

                    Store (0x80, HSTS)
                    Increment (Local1)

  906D: A4 00 70 0A 80 48 53 54 53 75 61                 // ..p..HSTSua

                    If (LGreater (SizeOf (Arg2), Local1))
                    {

  9078: A0 0F 94 87 6A 61                                // ....ja

                        Store (DerefOf (
  907E: 70 83                                            // p.

Index (Arg2, Local1)), HBDR)
                    }
                }


  9080: 88 6A 61 00 48 42 44 52                          // .ja.HBDR

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS)

  9088: A0 12 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
  9098: 53                                               // S

                    Return (One)
                }


  9099: A4 01                                            // ..

                Return (Zero)
            }


  909B: A4 00                                            // ..

            Method (SBLR, 3, Serialized)
            {

  909D: 14 40 0D 53 42 4C 52 0B                          // .@.SBLR.

                Name (TBUF, 
  90A5: 08 54 42 55 46                                   // .TBUF

Buffer (0x0100){})

  90AA: 11 04 0B 00 01                                   // .....

                If (STRT ())
                {

  90AF: A0 07 53 54 52 54                                // ..STRT

                    Return (Zero)
                }

                Store (Arg2, I2CE)
                Store (0xBF, HSTS)
                Store (Or (Arg0, One), TXSA)
                Store (Arg1, HCOM)
                Store (0x54, HCON)
                Store (0x0FA0, Local0)

  90B5: A4 00 70 6A 49 32 43 45 70 0A BF 48 53 54 53 70  // ..pjI2CEp..HSTSp
  90C5: 7D 68 01 00 54 58 53 41 70 69 48 43 4F 4D 70 0A  // }h..TXSApiHCOMp.
  90D5: 54 48 43 4F 4E 70 0B A0 0F 60                    // THCONp...`

                While (LAnd (LNot (
  90DF: A2 12 90 92                                      // ....

And (HSTS, 0x80)), Local0))
                {
                    Decrement (Local0)

  90E3: 7B 48 53 54 53 0A 80 00 60 76 60                 // {HSTS...`v`

                    Stall (0x32)
                }


  90EE: 5B 21 0A 32                                      // [!.2

                If (LNot (Local0))
                {
                    KILL ()

  90F2: A0 09 92 60 4B 49 4C 4C                          // ...`KILL

                    Return (Zero)
                }

                Store (DAT0, 
  90FA: A4 00 70 44 41 54 30                             // ..pDAT0

Index (TBUF, Zero))
                Store (0x80, HSTS)
                Store (One, Local1)

  9101: 88 54 42 55 46 00 00 70 0A 80 48 53 54 53 70 01  // .TBUF..p..HSTSp.
  9111: 61                                               // a

                While (LLess (Local1, 
  9112: A2 43 04 95 61                                   // .C..a

DerefOf (
  9117: 83                                               // .

Index (TBUF, Zero))))
                {
                    Store (0x0FA0, Local0)

  9118: 88 54 42 55 46 00 00 70 0B A0 0F 60              // .TBUF..p...`

                    While (LAnd (LNot (
  9124: A2 12 90 92                                      // ....

And (HSTS, 0x80)), Local0))
                    {
                        Decrement (Local0)

  9128: 7B 48 53 54 53 0A 80 00 60 76 60                 // {HSTS...`v`

                        Stall (0x32)
                    }


  9133: 5B 21 0A 32                                      // [!.2

                    If (LNot (Local0))
                    {
                        KILL ()

  9137: A0 09 92 60 4B 49 4C 4C                          // ...`KILL

                        Return (Zero)
                    }

                    Store (HBDR, 
  913F: A4 00 70 48 42 44 52                             // ..pHBDR

Index (TBUF, Local1))
                    Store (0x80, HSTS)

  9146: 88 54 42 55 46 61 00 70 0A 80 48 53 54 53        // .TBUFa.p..HSTS

                    Increment (Local1)
                }


  9154: 75 61                                            // ua

                If (COMP ())
                {
                    Or (HSTS, 0xFF, HSTS)

  9156: A0 15 43 4F 4D 50 7D 48 53 54 53 0A FF 48 53 54  // ..COMP}HSTS..HST
  9166: 53                                               // S

                    Return (TBUF)
                }


  9167: A4 54 42 55 46                                   // .TBUF

                Return (Zero)
            }


  916C: A4 00                                            // ..

            Method (STRT, 0, Serialized)
            {
                Store (0xC8, Local0)

  916E: 14 4F 04 53 54 52 54 08 70 0A C8 60              // .O.STRT.p..`

                While (Local0)
                {

  917A: A2 1D 60                                         // ..`

                    If (And (HSTS, 0x40))
                    {
                        Decrement (Local0)
                        Sleep (One)

  917D: A0 15 7B 48 53 54 53 0A 40 00 76 60 5B 22 01     // ..{HSTS.@.v`[".

                        If (LEqual (Local0, Zero))
                        {

  918C: A0 06 93 60 00                                   // ...`.

                            Return (One)
                        }
                    }

  9191: A4 01                                            // ..

                    Else
                    {

  9193: A1 04                                            // ..

                        Store (Zero, Local0)
                    }
                }

                Store (0x0FA0, Local0)

  9195: 70 00 60 70 0B A0 0F 60                          // p.`p...`

                While (Local0)
                {

  919D: A2 1E 60                                         // ..`

                    If (And (HSTS, One))
                    {
                        Decrement (Local0)
                        Stall (0x32)

  91A0: A0 17 7B 48 53 54 53 01 00 76 60 5B 21 0A 32     // ..{HSTS..v`[!.2

                        If (LEqual (Local0, Zero))
                        {
                            KILL ()
                        }
                    }

  91AF: A0 08 93 60 00 4B 49 4C 4C                       // ...`.KILL

                    Else
                    {

  91B8: A1 03                                            // ..

                        Return (Zero)
                    }
                }


  91BA: A4 00                                            // ..

                Return (One)
            }


  91BC: A4 01                                            // ..

            Method (COMP, 0, Serialized)
            {
                Store (0x0FA0, Local0)

  91BE: 14 2D 43 4F 4D 50 08 70 0B A0 0F 60              // .-COMP.p...`

                While (Local0)
                {

  91CA: A2 1F 60                                         // ..`

                    If (And (HSTS, 0x02))
                    {

  91CD: A0 0B 7B 48 53 54 53 0A 02 00                    // ..{HSTS...

                        Return (One)
                    }

  91D7: A4 01                                            // ..

                    Else
                    {
                        Decrement (Local0)
                        Stall (0x32)

  91D9: A1 10 76 60 5B 21 0A 32                          // ..v`[!.2

                        If (LEqual (Local0, Zero))
                        {
                            KILL ()
                        }
                    }
                }


  91E1: A0 08 93 60 00 4B 49 4C 4C                       // ...`.KILL

                Return (Zero)
            }


  91EA: A4 00                                            // ..

            Method (KILL, 0, Serialized)
            {
                Or (HCON, 0x02, HCON)

  91EC: 14 1C 4B 49 4C 4C 08 7D 48 43 4F 4E 0A 02 48 43  // ..KILL.}HCON..HC
  91FC: 4F 4E                                            // ON

                Or (HSTS, 0xFF, HSTS)
            }
        }
    }


  91FE: 7D 48 53 54 53 0A FF 48 53 54 53                 // }HSTS..HSTS

    Scope (_SB.PCI0.LPCB)
    {

  9209: 10 47 58 2F 03 5F 53 42 5F 50 43 49 30 4C 50 43  // .GX/._SB_PCI0LPC
  9219: 42                                               // B

        OperationRegion (CPSB, SystemMemory, 0xC7108E18, 0x10)

  921A: 5B 80 43 50 53 42 00 0C 18 8E 10 C7 0A 10        // [.CPSB........

        Field (CPSB, AnyAcc, NoLock, Preserve)
        {
            RTCX,   1, 
            SBB0,   7, 
            SBB1,   8, 
            SBB2,   8, 
            SBB3,   8, 
            SBB4,   8, 
            SBB5,   8, 
            SBB6,   8, 
            SBB7,   8, 
            SBB8,   8, 
            SBB9,   8, 
            SBBA,   8, 
            SBBB,   8, 
            SBBC,   8, 
            SBBD,   8, 
            SBBE,   8, 
            SBBF,   8
        }


  9228: 5B 81 4C 05 43 50 53 42 00 52 54 43 58 01 53 42  // [.L.CPSB.RTCX.SB
  9238: 42 30 07 53 42 42 31 08 53 42 42 32 08 53 42 42  // B0.SBB1.SBB2.SBB
  9248: 33 08 53 42 42 34 08 53 42 42 35 08 53 42 42 36  // 3.SBB4.SBB5.SBB6
  9258: 08 53 42 42 37 08 53 42 42 38 08 53 42 42 39 08  // .SBB7.SBB8.SBB9.
  9268: 53 42 42 41 08 53 42 42 42 08 53 42 42 43 08 53  // SBBA.SBBB.SBBC.S
  9278: 42 42 44 08 53 42 42 45 08 53 42 42 46 08        // BBD.SBBE.SBBF.

        Method (SPTS, 1, NotSerialized)
        {
            Store (One, SLPX)
            Store (One, SLPE)
            Store (Zero, ^^^WMI.HKDR)

  9286: 14 44 1B 53 50 54 53 01 70 01 53 4C 50 58 70 01  // .D.SPTS.p.SLPXp.
  9296: 53 4C 50 45 70 00 5E 5E 5E 2E 57 4D 49 5F 48 4B  // SLPEp.^^^.WMI_HK
  92A6: 44 52                                            // DR

            If (^EC.ECOK)
            {

  92A8: A0 46 10 5E 2E 45 43 5F 5F 45 43 4F 4B           // .F.^.EC__ECOK

                If (LEqual (Arg0, 0x03))
                {

  92B5: A0 4D 0E 93 68 0A 03                             // .M..h..

                    If (CondRefOf (\_SB.IFFS.FFSS))
                    {
                        Store (^EC.ECOS, ^EC.XX68)
                        Store (^EC.VGAT, ^EC.XXC7)
                        Store (^EC.OEM3, ^EC.XXCA)
                        Store (^EC.DTHL, ^EC.XXD7)
                        Store (^EC.WINF, ^EC.XXDA)
                        Store (^EC.INF2, ^EC.XXDD)
                        Store (^EC.ECKS, ^EC.XXE2)
                        Store (^EC.PL1T, ^EC.XXF0)
                        Store (^EC.PL2T, ^EC.XXF2)

  92BC: A0 46 0E 5B 12 5C 2F 03 5F 53 42 5F 49 46 46 53  // .F.[.\/._SB_IFFS
  92CC: 46 46 53 53 00 70 5E 2E 45 43 5F 5F 45 43 4F 53  // FFSS.p^.EC__ECOS
  92DC: 5E 2E 45 43 5F 5F 58 58 36 38 70 5E 2E 45 43 5F  // ^.EC__XX68p^.EC_
  92EC: 5F 56 47 41 54 5E 2E 45 43 5F 5F 58 58 43 37 70  // _VGAT^.EC__XXC7p
  92FC: 5E 2E 45 43 5F 5F 4F 45 4D 33 5E 2E 45 43 5F 5F  // ^.EC__OEM3^.EC__
  930C: 58 58 43 41 70 5E 2E 45 43 5F 5F 44 54 48 4C 5E  // XXCAp^.EC__DTHL^
  931C: 2E 45 43 5F 5F 58 58 44 37 70 5E 2E 45 43 5F 5F  // .EC__XXD7p^.EC__
  932C: 57 49 4E 46 5E 2E 45 43 5F 5F 58 58 44 41 70 5E  // WINF^.EC__XXDAp^
  933C: 2E 45 43 5F 5F 49 4E 46 32 5E 2E 45 43 5F 5F 58  // .EC__INF2^.EC__X
  934C: 58 44 44 70 5E 2E 45 43 5F 5F 45 43 4B 53 5E 2E  // XDDp^.EC__ECKS^.
  935C: 45 43 5F 5F 58 58 45 32 70 5E 2E 45 43 5F 5F 50  // EC__XXE2p^.EC__P
  936C: 4C 31 54 5E 2E 45 43 5F 5F 58 58 46 30 70 5E 2E  // L1T^.EC__XXF0p^.
  937C: 45 43 5F 5F 50 4C 32 54 5E 2E 45 43 5F 5F 58 58  // EC__PL2T^.EC__XX
  938C: 46 32                                            // F2

                        Store (^EC.TAUT, ^EC.XXF4)
                    }
                }


  938E: 70 5E 2E 45 43 5F 5F 54 41 55 54 5E 2E 45 43 5F  // p^.EC__TAUT^.EC_
  939E: 5F 58 58 46 34                                   // _XXF4

                Store (Zero, ^EC.WFNO)
            }


  93A3: 70 00 5E 2E 45 43 5F 5F 57 46 4E 4F              // p.^.EC__WFNO

            If (LEqual (Arg0, 0x04))
            {
                Store (0x05, PRM0)

  93AF: A0 13 93 68 0A 04 70 0A 05 50 52 4D 30           // ...h..p..PRM0

                Store (0xE0, SSMP)
            }

  93BC: 70 0A E0 53 53 4D 50                             // p..SSMP

            Else
            {
                Store (0x04, PRM0)

  93C3: A1 0F 70 0A 04 50 52 4D 30                       // ..p..PRM0

                Store (0xE0, SSMP)
            }

            Store (Zero, ^^RP01.RPAV)
            Store (Zero, ^^RP02.RPAV)
            Store (Zero, ^^RP03.RPAV)
            Store (Zero, ^^RP04.RPAV)
            Store (Zero, ^^RP05.RPAV)
            Store (Zero, ^^RP06.RPAV)
            Store (Zero, ^^RP07.RPAV)

  93CC: 70 0A E0 53 53 4D 50 70 00 5E 5E 2E 52 50 30 31  // p..SSMPp.^^.RP01
  93DC: 52 50 41 56 70 00 5E 5E 2E 52 50 30 32 52 50 41  // RPAVp.^^.RP02RPA
  93EC: 56 70 00 5E 5E 2E 52 50 30 33 52 50 41 56 70 00  // Vp.^^.RP03RPAVp.
  93FC: 5E 5E 2E 52 50 30 34 52 50 41 56 70 00 5E 5E 2E  // ^^.RP04RPAVp.^^.
  940C: 52 50 30 35 52 50 41 56 70 00 5E 5E 2E 52 50 30  // RP05RPAVp.^^.RP0
  941C: 36 52 50 41 56 70 00 5E 5E 2E 52 50 30 37 52 50  // 6RPAVp.^^.RP07RP
  942C: 41 56                                            // AV

            Store (Zero, ^^RP08.RPAV)
        }


  942E: 70 00 5E 5E 2E 52 50 30 38 52 50 41 56           // p.^^.RP08RPAV

        Method (SWAK, 1, NotSerialized)
        {
            Store (Zero, SLPE)

  943B: 14 4F 2F 53 57 41 4B 01 70 00 53 4C 50 45        // .O/SWAK.p.SLPE

            If (LEqual (And (OEMF, 0x0400), Zero))
            {

  9449: A0 1C 93 7B 4F 45 4D 46 0B 00 04 00 00           // ...{OEMF.....

                Store (LIDS, ^^GFX0.CLID)
            }


  9456: 70 4C 49 44 53 5E 5E 2E 47 46 58 30 43 4C 49 44  // pLIDS^^.GFX0CLID

            If (And (OEMF, 0x2000))
            {

  9466: A0 24 7B 4F 45 4D 46 0B 00 20 00                 // .${OEMF.. .

                If (LEqual (And (OEMF, 0x0400), Zero))
                {

  9471: A0 19 93 7B 4F 45 4D 46 0B 00 04 00 00           // ...{OEMF.....

                    Store (One, ^^GFX0.SKIP)
                }
            }

            Store (Zero, ^^^AC.IGNR)
            Store (0xA55A, ^^^AC.CTMS)

  947E: 70 01 5E 5E 2E 47 46 58 30 53 4B 49 50 70 00 5E  // p.^^.GFX0SKIPp.^
  948E: 5E 5E 2E 41 43 5F 5F 49 47 4E 52 70 0B 5A A5 5E  // ^^.AC__IGNRp.Z.^
  949E: 5E 5E 2E 41 43 5F 5F 43 54 4D 53                 // ^^.AC__CTMS

            If (LEqual (Arg0, 0x04))
            {

  94A9: A0 13 93 68 0A 04                                // ...h..

                Store (Zero, ^^^AC.PSSN)
            }

            Store (Zero, ^EC.SLFG)
            Store (Zero, ^EC.ECTB)
            Store (Zero, ^EC.B15C)

  94AF: 70 00 5E 5E 5E 2E 41 43 5F 5F 50 53 53 4E 70 00  // p.^^^.AC__PSSNp.
  94BF: 5E 2E 45 43 5F 5F 53 4C 46 47 70 00 5E 2E 45 43  // ^.EC__SLFGp.^.EC
  94CF: 5F 5F 45 43 54 42 70 00 5E 2E 45 43 5F 5F 42 31  // __ECTBp.^.EC__B1
  94DF: 35 43                                            // 5C

            If (^EC.ECOK)
            {
                Store (^EC.ADP, ^^^AC.ACFG)
                ^^^BAT0.UPBI ()
                ^^^BAT0.UPBS ()
                Notify (BAT0, Zero)
                Notify (AC, Zero)

  94E1: A0 4A 24 5E 2E 45 43 5F 5F 45 43 4F 4B 70 5E 2E  // .J$^.EC__ECOKp^.
  94F1: 45 43 5F 5F 41 44 50 5F 5E 5E 5E 2E 41 43 5F 5F  // EC__ADP_^^^.AC__
  9501: 41 43 46 47 5E 5E 5E 2E 42 41 54 30 55 50 42 49  // ACFG^^^.BAT0UPBI
  9511: 5E 5E 5E 2E 42 41 54 30 55 50 42 53 86 42 41 54  // ^^^.BAT0UPBS.BAT
  9521: 30 00 86 41 43 5F 5F 00                          // 0..AC__.

                If (LEqual (Arg0, 0x03))
                {

  9529: A0 46 10 93 68 0A 03                             // .F..h..

                    If (CondRefOf (\_SB.IFFS.FFSS))
                    {

  9530: A0 4F 0F 5B 12 5C 2F 03 5F 53 42 5F 49 46 46 53  // .O.[.\/._SB_IFFS
  9540: 46 46 53 53 00                                   // FFSS.

                        If (
  9545: A0 4A 0E 92                                      // .J..

LNotEqual (^EC.XXDA, ^EC.WINF))
                        {
                            Store (^EC.XX68, ^EC.ECOS)
                            Store (^EC.XXC7, ^EC.VGAT)
                            Store (^EC.XXCA, ^EC.OEM3)
                            Store (^EC.XXD7, ^EC.DTHL)
                            Store (^EC.XXDA, ^EC.WINF)
                            Store (^EC.XXDD, ^EC.INF2)
                            Store (^EC.ECKS, ^EC.XXE2)
                            Store (^EC.XXF0, ^EC.PL1T)
                            Store (^EC.XXF2, ^EC.PL2T)

  9549: 93 5E 2E 45 43 5F 5F 58 58 44 41 5E 2E 45 43 5F  // .^.EC__XXDA^.EC_
  9559: 5F 57 49 4E 46 70 5E 2E 45 43 5F 5F 58 58 36 38  // _WINFp^.EC__XX68
  9569: 5E 2E 45 43 5F 5F 45 43 4F 53 70 5E 2E 45 43 5F  // ^.EC__ECOSp^.EC_
  9579: 5F 58 58 43 37 5E 2E 45 43 5F 5F 56 47 41 54 70  // _XXC7^.EC__VGATp
  9589: 5E 2E 45 43 5F 5F 58 58 43 41 5E 2E 45 43 5F 5F  // ^.EC__XXCA^.EC__
  9599: 4F 45 4D 33 70 5E 2E 45 43 5F 5F 58 58 44 37 5E  // OEM3p^.EC__XXD7^
  95A9: 2E 45 43 5F 5F 44 54 48 4C 70 5E 2E 45 43 5F 5F  // .EC__DTHLp^.EC__
  95B9: 58 58 44 41 5E 2E 45 43 5F 5F 57 49 4E 46 70 5E  // XXDA^.EC__WINFp^
  95C9: 2E 45 43 5F 5F 58 58 44 44 5E 2E 45 43 5F 5F 49  // .EC__XXDD^.EC__I
  95D9: 4E 46 32 70 5E 2E 45 43 5F 5F 45 43 4B 53 5E 2E  // NF2p^.EC__ECKS^.
  95E9: 45 43 5F 5F 58 58 45 32 70 5E 2E 45 43 5F 5F 58  // EC__XXE2p^.EC__X
  95F9: 58 46 30 5E 2E 45 43 5F 5F 50 4C 31 54 70 5E 2E  // XF0^.EC__PL1Tp^.
  9609: 45 43 5F 5F 58 58 46 32 5E 2E 45 43 5F 5F 50 4C  // EC__XXF2^.EC__PL
  9619: 32 54                                            // 2T

                            Store (^EC.XXF4, ^EC.TAUT)
                        }
                    }
                }


  961B: 70 5E 2E 45 43 5F 5F 58 58 46 34 5E 2E 45 43 5F  // p^.EC__XXF4^.EC_
  962B: 5F 54 41 55 54                                   // _TAUT

                If (LEqual (Arg0, 0x04))
                {

  9630: A0 49 0C 93 68 0A 04                             // .I..h..

                    If (LLess (OSYS, 0x07DC))
                    {

  9637: A0 15 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                        Store (Zero, ^EC.ECOS)
                    }

  9641: 70 00 5E 2E 45 43 5F 5F 45 43 4F 53              // p.^.EC__ECOS

                    Else
                    {

  964D: A1 0E                                            // ..

                        Store (0x02, ^EC.ECOS)
                    }


  964F: 70 0A 02 5E 2E 45 43 5F 5F 45 43 4F 53           // p..^.EC__ECOS

                    If (
  965C: A0 20 92                                         // . .

LGreaterEqual (OSYS, 0x07D6))
                    {

  965F: 95 4F 53 59 53 0B D6 07                          // .OSYS...

                        Or (^EC.WINF, One, ^EC.WINF)
                    }

  9667: 7D 5E 2E 45 43 5F 5F 57 49 4E 46 01 5E 2E 45 43  // }^.EC__WINF.^.EC
  9677: 5F 5F 57 49 4E 46                                // __WINF

                    ElseIf
  967D: A1 21                                            // .!

 (LEqual (OSYS, 0x03E8))
                    {

  967F: A0 1F 93 4F 53 59 53 0B E8 03                    // ...OSYS...

                        Or (^EC.WINF, One, ^EC.WINF)
                    }


  9689: 7D 5E 2E 45 43 5F 5F 57 49 4E 46 01 5E 2E 45 43  // }^.EC__WINF.^.EC
  9699: 5F 5F 57 49 4E 46                                // __WINF

                    If (And (OEMF, 0x4000))
                    {

  969F: A0 20 7B 4F 45 4D 46 0B 00 40 00                 // . {OEMF..@.

                        Or (^EC.INF2, One, ^EC.INF2)
                    }

  96AA: 7D 5E 2E 45 43 5F 5F 49 4E 46 32 01 5E 2E 45 43  // }^.EC__INF2.^.EC
  96BA: 5F 5F 49 4E 46 32                                // __INF2

                    Else
                    {

  96C0: A1 18                                            // ..

                        And (^EC.INF2, 0xFE, ^EC.INF2)
                    }


  96C2: 7B 5E 2E 45 43 5F 5F 49 4E 46 32 0A FE 5E 2E 45  // {^.EC__INF2..^.E
  96D2: 43 5F 5F 49 4E 46 32                             // C__INF2

                    If (LLess (OSYS, 0x07D9))
                    {

  96D9: A0 20 95 4F 53 59 53 0B D9 07                    // . .OSYS...

                        And (^EC.INF2, 0xFD, ^EC.INF2)
                    }
                }


  96E3: 7B 5E 2E 45 43 5F 5F 49 4E 46 32 0A FD 5E 2E 45  // {^.EC__INF2..^.E
  96F3: 43 5F 5F 49 4E 46 32                             // C__INF2

                If (And (OEMF, 0x40))
                {
                    Store (Zero, \_TZ.TZ0.PPFG)

  96FA: A0 31 7B 4F 45 4D 46 0A 40 00 70 00 5C 2F 03 5F  // .1{OEMF.@.p.\/._
  970A: 54 5A 5F 54 5A 30 5F 50 50 46 47                 // TZ_TZ0_PPFG

                    And (^EC.INF2, 0xDF, ^EC.INF2)
                }
            }


  9715: 7B 5E 2E 45 43 5F 5F 49 4E 46 32 0A DF 5E 2E 45  // {^.EC__INF2..^.E
  9725: 43 5F 5F 49 4E 46 32                             // C__INF2

            If (RTCS){}

  972C: A0 05 52 54 43 53                                // ..RTCS

            Else
            {

  9732: A1 08                                            // ..

                Notify (PWRB, 0x02)
            }
        }


  9734: 86 50 57 52 42 0A 02                             // .PWRB..

        OperationRegion (SMIE, SystemIO, PMBS, 0x04)

  973B: 5B 80 53 4D 49 45 01 50 4D 42 53 0A 04           // [.SMIE.PMBS..

        Field (SMIE, ByteAcc, NoLock, Preserve)
        {
                ,   10, 
            RTCS,   1, 
                ,   3, 
            PEXS,   1, 
            WAKS,   1, 
            Offset (0x03), 
            PWBT,   1, 
            Offset (0x04)
        }


  9748: 5B 81 22 53 4D 49 45 01 00 0A 52 54 43 53 01 00  // [."SMIE...RTCS..
  9758: 03 50 45 58 53 01 57 41 4B 53 01 00 08 50 57 42  // .PEXS.WAKS...PWB
  9768: 54 01 00 07                                      // T...

        OperationRegion (SLPR, SystemIO, SMCR, 0x08)

  976C: 5B 80 53 4C 50 52 01 53 4D 43 52 0A 08           // [.SLPR.SMCR..

        Field (SLPR, ByteAcc, NoLock, Preserve)
        {
                ,   4, 
            SLPE,   1, 
                ,   31, 
            SLPX,   1, 
            Offset (0x08)
        }
    }


  9779: 5B 81 16 53 4C 50 52 01 00 04 53 4C 50 45 01 00  // [..SLPR...SLPE..
  9789: 1F 53 4C 50 58 01 00 1B                          // .SLPX...

    Scope (_SB.PCI0.RP01)
    {

  9791: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 31  // ../._SB_PCI0RP01

        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
        {

  97A1: 14 0F 5F 50 52 57 00                             // .._PRW.

            Return (GPRW (0x09, 0x04))
        }
    }


  97A8: A4 47 50 52 57 0A 09 0A 04                       // .GPRW....

    Scope (_SB.PCI0.RP02)
    {

  97B1: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 32  // ../._SB_PCI0RP02

        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
        {

  97C1: 14 0F 5F 50 52 57 00                             // .._PRW.

            Return (GPRW (0x09, 0x04))
        }
    }


  97C8: A4 47 50 52 57 0A 09 0A 04                       // .GPRW....

    Scope (_SB.PCI0.RP03)
    {

  97D1: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 33  // ../._SB_PCI0RP03

        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
        {

  97E1: 14 0F 5F 50 52 57 00                             // .._PRW.

            Return (GPRW (0x09, 0x04))
        }
    }


  97E8: A4 47 50 52 57 0A 09 0A 04                       // .GPRW....

    Scope (_SB.PCI0.RP04)
    {

  97F1: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 34  // ../._SB_PCI0RP04

        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
        {

  9801: 14 0F 5F 50 52 57 00                             // .._PRW.

            Return (GPRW (0x09, 0x04))
        }
    }


  9808: A4 47 50 52 57 0A 09 0A 04                       // .GPRW....

    Scope (_SB.PCI0.RP05)
    {

  9811: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 35  // ../._SB_PCI0RP05

        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
        {

  9821: 14 0F 5F 50 52 57 00                             // .._PRW.

            Return (GPRW (0x09, 0x04))
        }
    }


  9828: A4 47 50 52 57 0A 09 0A 04                       // .GPRW....

    Scope (_SB.PCI0.RP06)
    {

  9831: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 36  // ../._SB_PCI0RP06

        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
        {

  9841: 14 0F 5F 50 52 57 00                             // .._PRW.

            Return (GPRW (0x09, 0x04))
        }
    }


  9848: A4 47 50 52 57 0A 09 0A 04                       // .GPRW....

    Scope (_SB.PCI0.RP07)
    {

  9851: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 37  // ../._SB_PCI0RP07

        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
        {

  9861: 14 0F 5F 50 52 57 00                             // .._PRW.

            Return (GPRW (0x09, 0x04))
        }
    }


  9868: A4 47 50 52 57 0A 09 0A 04                       // .GPRW....

    Scope (_SB.PCI0.RP08)
    {

  9871: 10 1F 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 38  // ../._SB_PCI0RP08

        Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
        {

  9881: 14 0F 5F 50 52 57 00                             // .._PRW.

            Return (GPRW (0x09, 0x04))
        }
    }


  9888: A4 47 50 52 57 0A 09 0A 04                       // .GPRW....

    Scope (_SB.PCI0)
    {

  9891: 10 43 15 2E 5F 53 42 5F 50 43 49 30              // .C.._SB_PCI0

        Name (PA0H, Zero)

  989D: 08 50 41 30 48 00                                // .PA0H.

        Name (PA1H, Zero)

  98A3: 08 50 41 31 48 00                                // .PA1H.

        Name (PA1L, Zero)

  98A9: 08 50 41 31 4C 00                                // .PA1L.

        Name (PA2H, Zero)

  98AF: 08 50 41 32 48 00                                // .PA2H.

        Name (PA2L, Zero)

  98B5: 08 50 41 32 4C 00                                // .PA2L.

        Name (PA3H, Zero)

  98BB: 08 50 41 33 48 00                                // .PA3H.

        Name (PA3L, Zero)

  98C1: 08 50 41 33 4C 00                                // .PA3L.

        Name (PA4H, Zero)

  98C7: 08 50 41 34 48 00                                // .PA4H.

        Name (PA4L, Zero)

  98CD: 08 50 41 34 4C 00                                // .PA4L.

        Name (PA5H, Zero)

  98D3: 08 50 41 35 48 00                                // .PA5H.

        Name (PA5L, Zero)

  98D9: 08 50 41 35 4C 00                                // .PA5L.

        Name (PA6H, Zero)

  98DF: 08 50 41 36 48 00                                // .PA6H.

        Name (PA6L, Zero)

  98E5: 08 50 41 36 4C 00                                // .PA6L.

        Method (NPTS, 1, NotSerialized)
        {
            Store (PM0H, PA0H)
            Store (PM1H, PA1H)
            Store (PM1L, PA1L)
            Store (PM2H, PA2H)
            Store (PM2L, PA2L)
            Store (PM3H, PA3H)
            Store (PM3L, PA3L)
            Store (PM4H, PA4H)
            Store (PM4L, PA4L)
            Store (PM5H, PA5H)
            Store (PM5L, PA5L)
            Store (PM6H, PA6H)

  98EB: 14 4C 07 4E 50 54 53 01 70 50 4D 30 48 50 41 30  // .L.NPTS.pPM0HPA0
  98FB: 48 70 50 4D 31 48 50 41 31 48 70 50 4D 31 4C 50  // HpPM1HPA1HpPM1LP
  990B: 41 31 4C 70 50 4D 32 48 50 41 32 48 70 50 4D 32  // A1LpPM2HPA2HpPM2
  991B: 4C 50 41 32 4C 70 50 4D 33 48 50 41 33 48 70 50  // LPA2LpPM3HPA3HpP
  992B: 4D 33 4C 50 41 33 4C 70 50 4D 34 48 50 41 34 48  // M3LPA3LpPM4HPA4H
  993B: 70 50 4D 34 4C 50 41 34 4C 70 50 4D 35 48 50 41  // pPM4LPA4LpPM5HPA
  994B: 35 48 70 50 4D 35 4C 50 41 35 4C 70 50 4D 36 48  // 5HpPM5LPA5LpPM6H
  995B: 50 41 36 48                                      // PA6H

            Store (PM6L, PA6L)
        }


  995F: 70 50 4D 36 4C 50 41 36 4C                       // pPM6LPA6L

        Method (NWAK, 1, NotSerialized)
        {
            Store (PA0H, PM0H)
            Store (PA1H, PM1H)
            Store (PA1L, PM1L)
            Store (PA2H, PM2H)
            Store (PA2L, PM2L)
            Store (PA3H, PM3H)
            Store (PA3L, PM3L)
            Store (PA4H, PM4H)
            Store (PA4L, PM4L)
            Store (PA5H, PM5H)
            Store (PA5L, PM5L)
            Store (PA6H, PM6H)

  9968: 14 4C 07 4E 57 41 4B 01 70 50 41 30 48 50 4D 30  // .L.NWAK.pPA0HPM0
  9978: 48 70 50 41 31 48 50 4D 31 48 70 50 41 31 4C 50  // HpPA1HPM1HpPA1LP
  9988: 4D 31 4C 70 50 41 32 48 50 4D 32 48 70 50 41 32  // M1LpPA2HPM2HpPA2
  9998: 4C 50 4D 32 4C 70 50 41 33 48 50 4D 33 48 70 50  // LPM2LpPA3HPM3HpP
  99A8: 41 33 4C 50 4D 33 4C 70 50 41 34 48 50 4D 34 48  // A3LPM3LpPA4HPM4H
  99B8: 70 50 41 34 4C 50 4D 34 4C 70 50 41 35 48 50 4D  // pPA4LPM4LpPA5HPM
  99C8: 35 48 70 50 41 35 4C 50 4D 35 4C 70 50 41 36 48  // 5HpPA5LPM5LpPA6H
  99D8: 50 4D 36 48                                      // PM6H

            Store (PA6L, PM6L)
        }
    }


  99DC: 70 50 41 36 4C 50 4D 36 4C                       // pPA6LPM6L

    Scope (_PR)
    {

  99E5: 10 46 33 5F 50 52 5F                             // .F3_PR_

        Processor (CPU0, 0x01, 0x00001810, 0x06)
        {

  99EC: 5B 83 44 06 43 50 55 30 01 10 18 00 00 06        // [.D.CPU0......

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                ADBG ("CPU0 DEP Call")

  99FA: 14 47 05 5F 44 45 50 00 41 44 42 47 0D 43 50 55  // .G._DEP.ADBG.CPU
  9A0A: 30 20 44 45 50 20 43 61 6C 6C 00                 // 0 DEP Call.

                If (LEqual (S0ID, One))
                {
                    ADBG ("CPU0 DEP")

  9A15: A0 23 93 53 30 49 44 01 41 44 42 47 0D 43 50 55  // .#.S0ID.ADBG.CPU
  9A25: 30 20 44 45 50 00                                // 0 DEP.

                    Return (
  9A2B: A4                                               // .

Package (0x01)
                    {
                        \_SB.PEPD
                    })
                }

  9A2C: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

                Else
                {
                    ADBG ("CPU0 DEP NULL")

  9A39: A1 18 41 44 42 47 0D 43 50 55 30 20 44 45 50 20  // ..ADBG.CPU0 DEP 
  9A49: 4E 55 4C 4C 00                                   // NULL.

                    Return (
  9A4E: A4                                               // .

Package (0x00){})
                }
            }
        }


  9A4F: 12 02 00                                         // ...

        Processor (CPU1, 0x02, 0x00001810, 0x06)
        {

  9A52: 5B 83 44 06 43 50 55 31 02 10 18 00 00 06        // [.D.CPU1......

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                ADBG ("CPU1 DEP Call")

  9A60: 14 47 05 5F 44 45 50 00 41 44 42 47 0D 43 50 55  // .G._DEP.ADBG.CPU
  9A70: 31 20 44 45 50 20 43 61 6C 6C 00                 // 1 DEP Call.

                If (LEqual (S0ID, One))
                {
                    ADBG ("CPU1 DEP")

  9A7B: A0 23 93 53 30 49 44 01 41 44 42 47 0D 43 50 55  // .#.S0ID.ADBG.CPU
  9A8B: 31 20 44 45 50 00                                // 1 DEP.

                    Return (
  9A91: A4                                               // .

Package (0x01)
                    {
                        \_SB.PEPD
                    })
                }

  9A92: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

                Else
                {
                    ADBG ("CPU1 DEP NULL")

  9A9F: A1 18 41 44 42 47 0D 43 50 55 31 20 44 45 50 20  // ..ADBG.CPU1 DEP 
  9AAF: 4E 55 4C 4C 00                                   // NULL.

                    Return (
  9AB4: A4                                               // .

Package (0x00){})
                }
            }
        }


  9AB5: 12 02 00                                         // ...

        Processor (CPU2, 0x03, 0x00001810, 0x06)
        {

  9AB8: 5B 83 44 06 43 50 55 32 03 10 18 00 00 06        // [.D.CPU2......

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                ADBG ("CPU2 DEP Call")

  9AC6: 14 47 05 5F 44 45 50 00 41 44 42 47 0D 43 50 55  // .G._DEP.ADBG.CPU
  9AD6: 32 20 44 45 50 20 43 61 6C 6C 00                 // 2 DEP Call.

                If (LEqual (S0ID, One))
                {
                    ADBG ("CPU2 DEP")

  9AE1: A0 23 93 53 30 49 44 01 41 44 42 47 0D 43 50 55  // .#.S0ID.ADBG.CPU
  9AF1: 32 20 44 45 50 00                                // 2 DEP.

                    Return (
  9AF7: A4                                               // .

Package (0x01)
                    {
                        \_SB.PEPD
                    })
                }

  9AF8: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

                Else
                {
                    ADBG ("CPU2 DEP NULL")

  9B05: A1 18 41 44 42 47 0D 43 50 55 32 20 44 45 50 20  // ..ADBG.CPU2 DEP 
  9B15: 4E 55 4C 4C 00                                   // NULL.

                    Return (
  9B1A: A4                                               // .

Package (0x00){})
                }
            }
        }


  9B1B: 12 02 00                                         // ...

        Processor (CPU3, 0x04, 0x00001810, 0x06)
        {

  9B1E: 5B 83 44 06 43 50 55 33 04 10 18 00 00 06        // [.D.CPU3......

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                ADBG ("CPU3 DEP Call")

  9B2C: 14 47 05 5F 44 45 50 00 41 44 42 47 0D 43 50 55  // .G._DEP.ADBG.CPU
  9B3C: 33 20 44 45 50 20 43 61 6C 6C 00                 // 3 DEP Call.

                If (LEqual (S0ID, One))
                {
                    ADBG ("CPU3 DEP")

  9B47: A0 23 93 53 30 49 44 01 41 44 42 47 0D 43 50 55  // .#.S0ID.ADBG.CPU
  9B57: 33 20 44 45 50 00                                // 3 DEP.

                    Return (
  9B5D: A4                                               // .

Package (0x01)
                    {
                        \_SB.PEPD
                    })
                }

  9B5E: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

                Else
                {
                    ADBG ("CPU3 DEP NULL")

  9B6B: A1 18 41 44 42 47 0D 43 50 55 33 20 44 45 50 20  // ..ADBG.CPU3 DEP 
  9B7B: 4E 55 4C 4C 00                                   // NULL.

                    Return (
  9B80: A4                                               // .

Package (0x00){})
                }
            }
        }


  9B81: 12 02 00                                         // ...

        Processor (CPU4, 0x05, 0x00001810, 0x06)
        {

  9B84: 5B 83 44 06 43 50 55 34 05 10 18 00 00 06        // [.D.CPU4......

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                ADBG ("CPU4 DEP Call")

  9B92: 14 47 05 5F 44 45 50 00 41 44 42 47 0D 43 50 55  // .G._DEP.ADBG.CPU
  9BA2: 34 20 44 45 50 20 43 61 6C 6C 00                 // 4 DEP Call.

                If (LEqual (S0ID, One))
                {
                    ADBG ("CPU4 DEP")

  9BAD: A0 23 93 53 30 49 44 01 41 44 42 47 0D 43 50 55  // .#.S0ID.ADBG.CPU
  9BBD: 34 20 44 45 50 00                                // 4 DEP.

                    Return (
  9BC3: A4                                               // .

Package (0x01)
                    {
                        \_SB.PEPD
                    })
                }

  9BC4: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

                Else
                {
                    ADBG ("CPU4 DEP NULL")

  9BD1: A1 18 41 44 42 47 0D 43 50 55 34 20 44 45 50 20  // ..ADBG.CPU4 DEP 
  9BE1: 4E 55 4C 4C 00                                   // NULL.

                    Return (
  9BE6: A4                                               // .

Package (0x00){})
                }
            }
        }


  9BE7: 12 02 00                                         // ...

        Processor (CPU5, 0x06, 0x00001810, 0x06)
        {

  9BEA: 5B 83 44 06 43 50 55 35 06 10 18 00 00 06        // [.D.CPU5......

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                ADBG ("CPU5 DEP Call")

  9BF8: 14 47 05 5F 44 45 50 00 41 44 42 47 0D 43 50 55  // .G._DEP.ADBG.CPU
  9C08: 35 20 44 45 50 20 43 61 6C 6C 00                 // 5 DEP Call.

                If (LEqual (S0ID, One))
                {
                    ADBG ("CPU5 DEP")

  9C13: A0 23 93 53 30 49 44 01 41 44 42 47 0D 43 50 55  // .#.S0ID.ADBG.CPU
  9C23: 35 20 44 45 50 00                                // 5 DEP.

                    Return (
  9C29: A4                                               // .

Package (0x01)
                    {
                        \_SB.PEPD
                    })
                }

  9C2A: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

                Else
                {
                    ADBG ("CPU5 DEP NULL")

  9C37: A1 18 41 44 42 47 0D 43 50 55 35 20 44 45 50 20  // ..ADBG.CPU5 DEP 
  9C47: 4E 55 4C 4C 00                                   // NULL.

                    Return (
  9C4C: A4                                               // .

Package (0x00){})
                }
            }
        }


  9C4D: 12 02 00                                         // ...

        Processor (CPU6, 0x07, 0x00001810, 0x06)
        {

  9C50: 5B 83 44 06 43 50 55 36 07 10 18 00 00 06        // [.D.CPU6......

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                ADBG ("CPU6 DEP Call")

  9C5E: 14 47 05 5F 44 45 50 00 41 44 42 47 0D 43 50 55  // .G._DEP.ADBG.CPU
  9C6E: 36 20 44 45 50 20 43 61 6C 6C 00                 // 6 DEP Call.

                If (LEqual (S0ID, One))
                {
                    ADBG ("CPU6 DEP")

  9C79: A0 23 93 53 30 49 44 01 41 44 42 47 0D 43 50 55  // .#.S0ID.ADBG.CPU
  9C89: 36 20 44 45 50 00                                // 6 DEP.

                    Return (
  9C8F: A4                                               // .

Package (0x01)
                    {
                        \_SB.PEPD
                    })
                }

  9C90: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

                Else
                {
                    ADBG ("CPU6 DEP NULL")

  9C9D: A1 18 41 44 42 47 0D 43 50 55 36 20 44 45 50 20  // ..ADBG.CPU6 DEP 
  9CAD: 4E 55 4C 4C 00                                   // NULL.

                    Return (
  9CB2: A4                                               // .

Package (0x00){})
                }
            }
        }


  9CB3: 12 02 00                                         // ...

        Processor (CPU7, 0x08, 0x00001810, 0x06)
        {

  9CB6: 5B 83 44 06 43 50 55 37 08 10 18 00 00 06        // [.D.CPU7......

            Method (_DEP, 0, NotSerialized)  // _DEP: Dependencies
            {
                ADBG ("CPU7 DEP Call")

  9CC4: 14 47 05 5F 44 45 50 00 41 44 42 47 0D 43 50 55  // .G._DEP.ADBG.CPU
  9CD4: 37 20 44 45 50 20 43 61 6C 6C 00                 // 7 DEP Call.

                If (LEqual (S0ID, One))
                {
                    ADBG ("CPU7 DEP")

  9CDF: A0 23 93 53 30 49 44 01 41 44 42 47 0D 43 50 55  // .#.S0ID.ADBG.CPU
  9CEF: 37 20 44 45 50 00                                // 7 DEP.

                    Return (
  9CF5: A4                                               // .

Package (0x01)
                    {
                        \_SB.PEPD
                    })
                }

  9CF6: 12 0C 01 5C 2E 5F 53 42 5F 50 45 50 44           // ...\._SB_PEPD

                Else
                {
                    ADBG ("CPU7 DEP NULL")

  9D03: A1 18 41 44 42 47 0D 43 50 55 37 20 44 45 50 20  // ..ADBG.CPU7 DEP 
  9D13: 4E 55 4C 4C 00                                   // NULL.

                    Return (
  9D18: A4                                               // .

Package (0x00){})
                }
            }
        }
    }


  9D19: 12 02 00                                         // ...

    Scope (\)
    {

  9D1C: 10 4B 07 5C 00                                   // .K.\.

        Device (NFC1)
        {

  9D21: 5B 82 26 4E 46 43 31                             // [.&NFC1

            Name (_HID, EisaId ("SKTD000"))  // _HID: Hardware ID

  9D28: 08 5F 48 49 44 0C 4D 74 D0 00                    // ._HID.Mt..

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  9D32: 14 16 5F 53 54 41 00                             // .._STA.

                If (LEqual (NFCE, 0x03))
                {

  9D39: A0 0B 93 4E 46 43 45 0A 03                       // ...NFCE..

                    Return (0x0F)
                }

  9D42: A4 0A 0F                                         // ...

                Else
                {

  9D45: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }


  9D47: A4 00                                            // ..

        Device (NFC2)
        {

  9D49: 5B 82 26 4E 46 43 32                             // [.&NFC2

            Name (_HID, EisaId ("NXP5442"))  // _HID: Hardware ID

  9D50: 08 5F 48 49 44 0C 3B 10 54 42                    // ._HID.;.TB

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  9D5A: 14 16 5F 53 54 41 00                             // .._STA.

                If (LEqual (NFCE, 0x02))
                {

  9D61: A0 0B 93 4E 46 43 45 0A 02                       // ...NFCE..

                    Return (0x0F)
                }

  9D6A: A4 0A 0F                                         // ...

                Else
                {

  9D6D: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }


  9D6F: A4 00                                            // ..

        Device (NFC3)
        {

  9D71: 5B 82 25 4E 46 43 33                             // [.%NFC3

            Name (_HID, EisaId ("ICV0A12"))  // _HID: Hardware ID

  9D78: 08 5F 48 49 44 0C 24 76 0A 12                    // ._HID.$v..

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  9D82: 14 15 5F 53 54 41 00                             // .._STA.

                If (LEqual (NFCE, One))
                {

  9D89: A0 0A 93 4E 46 43 45 01                          // ...NFCE.

                    Return (0x0F)
                }

  9D91: A4 0A 0F                                         // ...

                Else
                {

  9D94: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }
    }


  9D96: A4 00                                            // ..

    Mutex (MUTX, 0x00)

  9D98: 5B 01 4D 55 54 58 00                             // [.MUTX.

    OperationRegion (DEB0, SystemIO, 0x80, One)

  9D9F: 5B 80 44 45 42 30 01 0A 80 01                    // [.DEB0....

    Field (DEB0, ByteAcc, NoLock, Preserve)
    {
        DBG8,   8
    }


  9DA9: 5B 81 0B 44 45 42 30 01 44 42 47 38 08           // [..DEB0.DBG8.

    OperationRegion (DEB1, SystemIO, 0x90, 0x02)

  9DB6: 5B 80 44 45 42 31 01 0A 90 0A 02                 // [.DEB1.....

    Field (DEB1, WordAcc, NoLock, Preserve)
    {
        DBG9,   16
    }


  9DC1: 5B 81 0B 44 45 42 31 02 44 42 47 39 10           // [..DEB1.DBG9.

    OperationRegion (PRT0, SystemIO, 0x80, 0x04)

  9DCE: 5B 80 50 52 54 30 01 0A 80 0A 04                 // [.PRT0.....

    Field (PRT0, DWordAcc, Lock, Preserve)
    {
        P80H,   32
    }


  9DD9: 5B 81 0B 50 52 54 30 13 50 38 30 48 20           // [..PRT0.P80H 

    Method (P8XH, 2, Serialized)
    {

  9DE6: 14 4E 07 50 38 58 48 0A                          // .N.P8XH.

        If (LEqual (Arg0, Zero))
        {

  9DEE: A0 17 93 68 00                                   // ...h.

            Store (Or (And (P80D, 0xFFFFFF00), Arg1), P80D)
        }


  9DF3: 70 7D 7B 50 38 30 44 0C 00 FF FF FF 00 69 00 50  // p}{P80D......i.P
  9E03: 38 30 44                                         // 80D

        If (LEqual (Arg0, One))
        {

  9E06: A0 1B 93 68 01                                   // ...h.

            Store (Or (And (P80D, 0xFFFF00FF), ShiftLeft (Arg1, 0x08)), P80D)
        }


  9E0B: 70 7D 7B 50 38 30 44 0C FF 00 FF FF 00 79 69 0A  // p}{P80D......yi.
  9E1B: 08 00 00 50 38 30 44                             // ...P80D

        If (LEqual (Arg0, 0x02))
        {

  9E22: A0 1C 93 68 0A 02                                // ...h..

            Store (Or (And (P80D, 0xFF00FFFF), ShiftLeft (Arg1, 0x10)), P80D)
        }


  9E28: 70 7D 7B 50 38 30 44 0C FF FF 00 FF 00 79 69 0A  // p}{P80D......yi.
  9E38: 10 00 00 50 38 30 44                             // ...P80D

        If (LEqual (Arg0, 0x03))
        {

  9E3F: A0 1C 93 68 0A 03                                // ...h..

            Store (Or (And (P80D, 0x00FFFFFF), ShiftLeft (Arg1, 0x18)), P80D)
        }


  9E45: 70 7D 7B 50 38 30 44 0C FF FF FF 00 00 79 69 0A  // p}{P80D......yi.
  9E55: 18 00 00 50 38 30 44                             // ...P80D

        Store (P80D, P80H)
    }


  9E5C: 70 50 38 30 44 50 38 30 48                       // pP80DP80H

    Method (ADBG, 1, Serialized)
    {

  9E65: 14 17 41 44 42 47 09                             // ..ADBG.

        If (CondRefOf (MDBG))
        {

  9E6C: A0 0E 5B 12 4D 44 42 47 00                       // ..[.MDBG.

            Return (MDBG (Arg0))
        }


  9E75: A4 4D 44 42 47 68                                // .MDBGh

        Return (Zero)
    }


  9E7B: A4 00                                            // ..

    OperationRegion (SPRT, SystemIO, 0xB2, 0x02)

  9E7D: 5B 80 53 50 52 54 01 0A B2 0A 02                 // [.SPRT.....

    Field (SPRT, ByteAcc, Lock, Preserve)
    {
        SSMP,   8
    }


  9E88: 5B 81 0B 53 50 52 54 11 53 53 4D 50 08           // [..SPRT.SSMP.

    Method (_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
    {
        Store (Arg0, GPIC)

  9E95: 14 12 5F 50 49 43 01 70 68 47 50 49 43           // .._PIC.phGPIC

        Store (Arg0, PICM)
    }


  9EA2: 70 68 50 49 43 4D                                // phPICM

    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
    {
        Store (Zero, P80D)
        P8XH (Zero, Arg0)
        PTS (Arg0)

  9EA8: 14 40 5B 5F 50 54 53 01 70 00 50 38 30 44 50 38  // .@[_PTS.p.P80DP8
  9EB8: 58 48 00 68 50 54 53 5F 68                       // XH.hPTS_h

        If (LEqual (ECNO, One))
        {
            ADBG ("EC Notify")

  9EC1: A0 2F 93 45 43 4E 4F 01 41 44 42 47 0D 45 43 20  // ./.ECNO.ADBG.EC 
  9ED1: 4E 6F 74 69 66 79 00                             // Notify.

            If (
  9ED8: A0 0A                                            // ..

LEqual (BID, BHB)){}
            ADBG ("EC Debug")
        }

        ADBG (
  9EDA: 93 42 49 44 5F 42 48 42 5F 41 44 42 47 0D 45 43  // .BID_BHB_ADBG.EC
  9EEA: 20 44 65 62 75 67 00 41 44 42 47                 //  Debug.ADBG

Concatenate ("_PTS=", ToHexString (Arg0)))

  9EF5: 73 0D 5F 50 54 53 3D 00 98 68 00 00              // s._PTS=..h..

        If (And (ICNF, 0x10))
        {

  9F01: A0 2E 7B 49 43 4E 46 0A 10 00                    // ..{ICNF...

            If (CondRefOf (\_SB.IAOE.PTSL))
            {

  9F0B: A0 24 5B 12 5C 2F 03 5F 53 42 5F 49 41 4F 45 50  // .$[.\/._SB_IAOEP
  9F1B: 54 53 4C 00                                      // TSL.

                Store (Arg0, \_SB.IAOE.PTSL)
            }
        }


  9F1F: 70 68 5C 2F 03 5F 53 42 5F 49 41 4F 45 50 54 53  // ph\/._SB_IAOEPTS
  9F2F: 4C                                               // L

        If (LEqual (Arg0, 0x03))
        {

  9F30: A0 44 50 93 68 0A 03                             // .DP.h..

            If (LAnd (DTSE, 
  9F37: A0 16 90 44 54 53 45                             // ...DTSE

LGreater (TCNT, One)))
            {
                TRAP (TRTD, 0x1E)
            }


  9F3E: 94 54 43 4E 54 01 54 52 41 50 54 52 54 44 0A 1E  // .TCNT.TRAPTRTD..

            If (And (ICNF, One))
            {

  9F4E: A0 46 4E 7B 49 43 4E 46 01 00                    // .FN{ICNF..

                If (CondRefOf (\_SB.IAOE.ITMR))
                {

  9F58: A0 48 19 5B 12 5C 2F 03 5F 53 42 5F 49 41 4F 45  // .H.[.\/._SB_IAOE
  9F68: 49 54 4D 52 00                                   // ITMR.

                    If (And (ICNF, 0x10))
                    {

  9F6D: A0 43 18 7B 49 43 4E 46 0A 10 00                 // .C.{ICNF...

                        If (\_SB.PCI0.LPCB.EC.ECOK)
                        {

  9F78: A0 45 0B 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // .E.\/._SB_PCI0LP
  9F88: 43 42 45 43 5F 5F 45 43 4F 4B                    // CBEC__ECOK

                            If (And (\_SB.IAOE.IBT1, One))
                            {

  9F92: A0 45 04 7B 5C 2F 03 5F 53 42 5F 49 41 4F 45 49  // .E.{\/._SB_IAOEI
  9FA2: 42 54 31 01 00                                   // BT1..

                                Or (\_SB.PCI0.LPCB.EC.INF2, 0x80, \_SB.PCI0.LPCB.EC.INF2)
                            }

  9FA7: 7D 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // }\/._SB_PCI0LPCB
  9FB7: 45 43 5F 5F 49 4E 46 32 0A 80 5C 2F 05 5F 53 42  // EC__INF2..\/._SB
  9FC7: 5F 50 43 49 30 4C 50 43 42 45 43 5F 5F 49 4E 46  // _PCI0LPCBEC__INF
  9FD7: 32                                               // 2

                            Else
                            {
                                And (\_SB.PCI0.LPCB.EC.INF2, 0x7F, \_SB.PCI0.LPCB.EC.INF2)
                                Store (Zero, \_SB.IAOE.RCTM)

  9FD8: A1 45 05 7B 5C 2F 05 5F 53 42 5F 50 43 49 30 4C  // .E.{\/._SB_PCI0L
  9FE8: 50 43 42 45 43 5F 5F 49 4E 46 32 0A 7F 5C 2F 05  // PCBEC__INF2..\/.
  9FF8: 5F 53 42 5F 50 43 49 30 4C 50 43 42 45 43 5F 5F  // _SB_PCI0LPCBEC__
  A008: 49 4E 46 32 70 00 5C 2F 03 5F 53 42 5F 49 41 4F  // INF2p.\/._SB_IAO
  A018: 45 52 43 54 4D                                   // ERCTM

                                Store (Zero, \_SB.IAOE.ECTM)
                            }
                        }


  A01D: 70 00 5C 2F 03 5F 53 42 5F 49 41 4F 45 45 43 54  // p.\/._SB_IAOEECT
  A02D: 4D                                               // M

                        If (LEqual (\_SB.IAOE.ITMR, Zero))
                        {

  A02E: A0 42 0C 93 5C 2F 03 5F 53 42 5F 49 41 4F 45 49  // .B..\/._SB_IAOEI
  A03E: 54 4D 52 00                                      // TMR.

                            If (LGreater (\_SB.IAOE.ECTM, Zero))
                            {
                                Store (And (\_SB.IAOE.ECTM, 0xFF), \_SB.IAOE.AWT0)
                                Store (ShiftRight (And (\_SB.IAOE.ECTM, 0xFF00), 0x08), \_SB.IAOE.AWT1)
                                Store (ShiftRight (And (\_SB.IAOE.ECTM, 0x00FF0000), 0x10), \_SB.IAOE.AWT2)
                                Store (\_SB.IAOE.WTMS, Local0)

  A042: A0 4E 0A 94 5C 2F 03 5F 53 42 5F 49 41 4F 45 45  // .N..\/._SB_IAOEE
  A052: 43 54 4D 00 70 7B 5C 2F 03 5F 53 42 5F 49 41 4F  // CTM.p{\/._SB_IAO
  A062: 45 45 43 54 4D 0A FF 00 5C 2F 03 5F 53 42 5F 49  // EECTM...\/._SB_I
  A072: 41 4F 45 41 57 54 30 70 7A 7B 5C 2F 03 5F 53 42  // AOEAWT0pz{\/._SB
  A082: 5F 49 41 4F 45 45 43 54 4D 0B 00 FF 00 0A 08 00  // _IAOEECTM.......
  A092: 5C 2F 03 5F 53 42 5F 49 41 4F 45 41 57 54 31 70  // \/._SB_IAOEAWT1p
  A0A2: 7A 7B 5C 2F 03 5F 53 42 5F 49 41 4F 45 45 43 54  // z{\/._SB_IAOEECT
  A0B2: 4D 0C 00 00 FF 00 00 0A 10 00 5C 2F 03 5F 53 42  // M.........\/._SB
  A0C2: 5F 49 41 4F 45 41 57 54 32 70 5C 2F 03 5F 53 42  // _IAOEAWT2p\/._SB
  A0D2: 5F 49 41 4F 45 57 54 4D 53 60                    // _IAOEWTMS`

                                Store (Or (0x81, Local0), \_SB.IAOE.WTMS)
                            }
                        }
                    }
                }


  A0DC: 70 7D 0A 81 60 00 5C 2F 03 5F 53 42 5F 49 41 4F  // p}..`.\/._SB_IAO
  A0EC: 45 57 54 4D 53                                   // EWTMS

                If (And (ICNF, 0x10))
                {

  A0F1: A0 43 34 7B 49 43 4E 46 0A 10 00                 // .C4{ICNF...

                    If (CondRefOf (\_SB.IAOE.FFSE))
                    {

  A0FC: A0 48 33 5B 12 5C 2F 03 5F 53 42 5F 49 41 4F 45  // .H3[.\/._SB_IAOE
  A10C: 46 46 53 45 00                                   // FFSE.

                        If (CondRefOf (\_SB.IFFS.FFSS))
                        {

  A111: A0 40 31 5B 12 5C 2F 03 5F 53 42 5F 49 46 46 53  // .@1[.\/._SB_IFFS
  A121: 46 46 53 53 00                                   // FFSS.

                            If (And (\_SB.IFFS.FFSS, One))
                            {
                                Store (One, \_SB.IAOE.FFSE)

  A126: A0 48 2E 7B 5C 2F 03 5F 53 42 5F 49 46 46 53 46  // .H.{\/._SB_IFFSF
  A136: 46 53 53 01 00 70 01 5C 2F 03 5F 53 42 5F 49 41  // FSS..p.\/._SB_IA
  A146: 4F 45 46 46 53 45                                // OEFFSE

                                If (LAnd (\_SB.IAOE.WTMS, 
  A14C: A0 42 2C 90 5C 2F 03 5F 53 42 5F 49 41 4F 45 57  // .B,.\/._SB_IAOEW
  A15C: 54 4D 53                                         // TMS

LEqual (\_SB.IAOE.PTSL, 0x03)))
                                {
                                    Store (\_SB.IAOE.WTMS, Local0)
                                    Store (Or (0x02, Local0), \_SB.IAOE.WTMS)

  A15F: 93 5C 2F 03 5F 53 42 5F 49 41 4F 45 50 54 53 4C  // .\/._SB_IAOEPTSL
  A16F: 0A 03 70 5C 2F 03 5F 53 42 5F 49 41 4F 45 57 54  // ..p\/._SB_IAOEWT
  A17F: 4D 53 60 70 7D 0A 02 60 00 5C 2F 03 5F 53 42 5F  // MS`p}..`.\/._SB_
  A18F: 49 41 4F 45 57 54 4D 53                          // IAOEWTMS

                                    Name (TMR, 
  A197: 08 54 4D 52 5F                                   // .TMR_

Buffer (0x04)
                                    {
                                         0x00, 0x00, 0x00, 0x00                         
                                    })

  A19C: 11 07 0A 04 00 00 00 00                          // ........

                                    CreateField (TMR, Zero, 0x06, SEC)

  A1A4: 5B 13 54 4D 52 5F 00 0A 06 53 45 43 5F           // [.TMR_...SEC_

                                    CreateField (TMR, 0x06, 0x06, MIN)

  A1B1: 5B 13 54 4D 52 5F 0A 06 0A 06 4D 49 4E 5F        // [.TMR_....MIN_

                                    CreateField (TMR, 0x0C, 0x05, HUR)

  A1BF: 5B 13 54 4D 52 5F 0A 0C 0A 05 48 55 52 5F        // [.TMR_....HUR_

                                    CreateField (TMR, 0x11, 0x05, DAY)

  A1CD: 5B 13 54 4D 52 5F 0A 11 0A 05 44 41 59 5F        // [.TMR_....DAY_

                                    CreateField (TMR, 0x16, 0x04, MON)

  A1DB: 5B 13 54 4D 52 5F 0A 16 0A 04 4D 4F 4E 5F        // [.TMR_....MON_

                                    CreateField (TMR, 0x1A, 0x05, YEAR)

  A1E9: 5B 13 54 4D 52 5F 0A 1A 0A 05 59 45 41 52        // [.TMR_....YEAR

                                    CreateField (TMR, 0x1F, One, TMFG)

  A1F7: 5B 13 54 4D 52 5F 0A 1F 01 54 4D 46 47           // [.TMR_...TMFG

                                    If (\_SB.IAOE.ITMR)
                                    {

  A204: A0 4B 0D 5C 2F 03 5F 53 42 5F 49 41 4F 45 49 54  // .K.\/._SB_IAOEIT
  A214: 4D 52                                            // MR

                                        If (\_SB.IAOE.RCTM)
                                        {

  A216: A0 49 0C 5C 2F 03 5F 53 42 5F 49 41 4F 45 52 43  // .I.\/._SB_IAOERC
  A226: 54 4D                                            // TM

                                            If (And (\_SB.IAOE.RCTM, 0x80000000))
                                            {
                                                Store (\_SB.IAOE.RCTM, TMR)
                                                Add (\_SB.IFFS.FFST, ToInteger (MIN), Local0)

  A228: A0 43 08 7B 5C 2F 03 5F 53 42 5F 49 41 4F 45 52  // .C.{\/._SB_IAOER
  A238: 43 54 4D 0C 00 00 00 80 00 70 5C 2F 03 5F 53 42  // CTM......p\/._SB
  A248: 5F 49 41 4F 45 52 43 54 4D 54 4D 52 5F 72 5C 2F  // _IAOERCTMTMR_r\/
  A258: 03 5F 53 42 5F 49 46 46 53 46 46 53 54 99 4D 49  // ._SB_IFFSFFST.MI
  A268: 4E 5F 00 60                                      // N_.`

                                                If (
  A26C: A0 25 92                                         // .%.

LGreaterEqual (Local0, 0x3C))
                                                {
                                                    Subtract (Local0, 0x3C, Local0)
                                                    Increment (HUR)

  A26F: 95 60 0A 3C 74 60 0A 3C 60 75 48 55 52 5F        // .`.<t`.<`uHUR_

                                                    If (
  A27D: A0 14 92                                         // ...

LGreaterEqual (HUR, 0x18))
                                                    {

  A280: 95 48 55 52 5F 0A 18                             // .HUR_..

                                                        Subtract (HUR, 0x18, HUR)
                                                    }
                                                }

                                                Store (Local0, MIN)

  A287: 74 48 55 52 5F 0A 18 48 55 52 5F 70 60 4D 49 4E  // tHUR_..HUR_p`MIN
  A297: 5F                                               // _

                                                Store (TMR, \_SB.IAOE.RCTM)
                                            }

  A298: 70 54 4D 52 5F 5C 2F 03 5F 53 42 5F 49 41 4F 45  // pTMR_\/._SB_IAOE
  A2A8: 52 43 54 4D                                      // RCTM

                                            Else
                                            {

  A2AC: A1 33                                            // .3

                                                Add (Multiply (\_SB.IFFS.FFST, 0x3C), \_SB.IAOE.RCTM, \_SB.IAOE.RCTM)
                                            }
                                        }
                                    }

  A2AE: 72 77 5C 2F 03 5F 53 42 5F 49 46 46 53 46 46 53  // rw\/._SB_IFFSFFS
  A2BE: 54 0A 3C 00 5C 2F 03 5F 53 42 5F 49 41 4F 45 52  // T.<.\/._SB_IAOER
  A2CE: 43 54 4D 5C 2F 03 5F 53 42 5F 49 41 4F 45 52 43  // CTM\/._SB_IAOERC
  A2DE: 54 4D                                            // TM

                                    ElseIf
  A2E0: A1 4C 0C                                         // .L.

 (\_SB.IAOE.ECTM)
                                    {

  A2E3: A0 49 0C 5C 2F 03 5F 53 42 5F 49 41 4F 45 45 43  // .I.\/._SB_IAOEEC
  A2F3: 54 4D                                            // TM

                                        If (And (\_SB.IAOE.ECTM, 0x80000000))
                                        {
                                            Store (\_SB.IAOE.ECTM, TMR)
                                            Add (\_SB.IFFS.FFST, ToInteger (MIN), Local0)

  A2F5: A0 43 08 7B 5C 2F 03 5F 53 42 5F 49 41 4F 45 45  // .C.{\/._SB_IAOEE
  A305: 43 54 4D 0C 00 00 00 80 00 70 5C 2F 03 5F 53 42  // CTM......p\/._SB
  A315: 5F 49 41 4F 45 45 43 54 4D 54 4D 52 5F 72 5C 2F  // _IAOEECTMTMR_r\/
  A325: 03 5F 53 42 5F 49 46 46 53 46 46 53 54 99 4D 49  // ._SB_IFFSFFST.MI
  A335: 4E 5F 00 60                                      // N_.`

                                            If (
  A339: A0 25 92                                         // .%.

LGreaterEqual (Local0, 0x3C))
                                            {
                                                Subtract (Local0, 0x3C, Local0)
                                                Increment (HUR)

  A33C: 95 60 0A 3C 74 60 0A 3C 60 75 48 55 52 5F        // .`.<t`.<`uHUR_

                                                If (
  A34A: A0 14 92                                         // ...

LGreaterEqual (HUR, 0x18))
                                                {

  A34D: 95 48 55 52 5F 0A 18                             // .HUR_..

                                                    Subtract (HUR, 0x18, HUR)
                                                }
                                            }

                                            Store (Local0, MIN)

  A354: 74 48 55 52 5F 0A 18 48 55 52 5F 70 60 4D 49 4E  // tHUR_..HUR_p`MIN
  A364: 5F                                               // _

                                            Store (TMR, \_SB.IAOE.ECTM)
                                        }

  A365: 70 54 4D 52 5F 5C 2F 03 5F 53 42 5F 49 41 4F 45  // pTMR_\/._SB_IAOE
  A375: 45 43 54 4D                                      // ECTM

                                        Else
                                        {

  A379: A1 33                                            // .3

                                            Add (Multiply (\_SB.IFFS.FFST, 0x3C), \_SB.IAOE.ECTM, \_SB.IAOE.ECTM)
                                        }
                                    }


  A37B: 72 77 5C 2F 03 5F 53 42 5F 49 46 46 53 46 46 53  // rw\/._SB_IFFSFFS
  A38B: 54 0A 3C 00 5C 2F 03 5F 53 42 5F 49 41 4F 45 45  // T.<.\/._SB_IAOEE
  A39B: 43 54 4D 5C 2F 03 5F 53 42 5F 49 41 4F 45 45 43  // CTM\/._SB_IAOEEC
  A3AB: 54 4D                                            // TM

                                    If (And (\_SB.IAOE.IBT1, One))
                                    {

  A3AD: A0 41 06 7B 5C 2F 03 5F 53 42 5F 49 41 4F 45 49  // .A.{\/._SB_IAOEI
  A3BD: 42 54 31 01 00                                   // BT1..

                                        If (\_SB.PCI0.LPCB.EC.ECOK)
                                        {
                                            Store (One, \_SB.PCI0.LPCB.EC.FDAT)

  A3C2: A0 4C 04 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // .L.\/._SB_PCI0LP
  A3D2: 43 42 45 43 5F 5F 45 43 4F 4B 70 01 5C 2F 05 5F  // CBEC__ECOKp.\/._
  A3E2: 53 42 5F 50 43 49 30 4C 50 43 42 45 43 5F 5F 46  // SB_PCI0LPCBEC__F
  A3F2: 44 41 54                                         // DAT

                                            Store (0xB9, \_SB.PCI0.LPCB.EC.FCMD)
                                        }
                                    }
                                }
                            }

  A3F5: 70 0A B9 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // p..\/._SB_PCI0LP
  A405: 43 42 45 43 5F 5F 46 43 4D 44                    // CBEC__FCMD

                            Else
                            {

  A40F: A1 12                                            // ..

                                Store (Zero, \_SB.IAOE.FFSE)
                            }
                        }

  A411: 70 00 5C 2F 03 5F 53 42 5F 49 41 4F 45 46 46 53  // p.\/._SB_IAOEFFS
  A421: 45                                               // E

                        Else
                        {

  A422: A1 12                                            // ..

                            Store (Zero, \_SB.IAOE.FFSE)
                        }
                    }
                }
            }
        }


  A424: 70 00 5C 2F 03 5F 53 42 5F 49 41 4F 45 46 46 53  // p.\/._SB_IAOEFFS
  A434: 45                                               // E

        If (CondRefOf (\_SB.TPM.PTS))
        {
            \_SB.TPM.PTS (Arg0)
        }
    }


  A435: A0 23 5B 12 5C 2F 03 5F 53 42 5F 54 50 4D 5F 50  // .#[.\/._SB_TPM_P
  A445: 54 53 5F 00 5C 2F 03 5F 53 42 5F 54 50 4D 5F 50  // TS_.\/._SB_TPM_P
  A455: 54 53 5F 68                                      // TS_h

    Method (_WAK, 1, Serialized)  // _WAK: Wake
    {
        P8XH (One, 0xAB)
        WAK (Arg0)
        ADBG ("_WAK")

  A459: 14 4D 58 5F 57 41 4B 09 50 38 58 48 01 0A AB 57  // .MX_WAK.P8XH...W
  A469: 41 4B 5F 68 41 44 42 47 0D 5F 57 41 4B 00        // AK_hADBG._WAK.

        If (
  A477: A0 3A 92                                         // .:.

LGreaterEqual (OSYS, 0x07D6))
        {

  A47A: 95 4F 53 59 53 0B D6 07                          // .OSYS...

            Or (\_SB.PCI0.LPCB.EC.WINF, One, \_SB.PCI0.LPCB.EC.WINF)
        }

  A482: 7D 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // }\/._SB_PCI0LPCB
  A492: 45 43 5F 5F 57 49 4E 46 01 5C 2F 05 5F 53 42 5F  // EC__WINF.\/._SB_
  A4A2: 50 43 49 30 4C 50 43 42 45 43 5F 5F 57 49 4E 46  // PCI0LPCBEC__WINF

        ElseIf
  A4B2: A1 3B                                            // .;

 (LEqual (OSYS, 0x03E8))
        {

  A4B4: A0 39 93 4F 53 59 53 0B E8 03                    // .9.OSYS...

            Or (\_SB.PCI0.LPCB.EC.WINF, One, \_SB.PCI0.LPCB.EC.WINF)
        }


  A4BE: 7D 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // }\/._SB_PCI0LPCB
  A4CE: 45 43 5F 5F 57 49 4E 46 01 5C 2F 05 5F 53 42 5F  // EC__WINF.\/._SB_
  A4DE: 50 43 49 30 4C 50 43 42 45 43 5F 5F 57 49 4E 46  // PCI0LPCBEC__WINF

        If (
  A4EE: A0 3A 92                                         // .:.

LGreaterEqual (OSYS, 0x07D6))
        {

  A4F1: 95 4F 53 59 53 0B D6 07                          // .OSYS...

            Or (\_SB.PCI0.LPCB.EC.WINF, One, \_SB.PCI0.LPCB.EC.WINF)
        }


  A4F9: 7D 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43 42  // }\/._SB_PCI0LPCB
  A509: 45 43 5F 5F 57 49 4E 46 01 5C 2F 05 5F 53 42 5F  // EC__WINF.\/._SB_
  A519: 50 43 49 30 4C 50 43 42 45 43 5F 5F 57 49 4E 46  // PCI0LPCBEC__WINF

        If (LOr (LEqual (Arg0, 0x03), 
  A529: A0 40 12 91 93 68 0A 03                          // .@...h..

LEqual (Arg0, 0x04)))
        {

  A531: 93 68 0A 04                                      // .h..

            If (LLess (OSYS, 0x07D9))
            {

  A535: A0 22 95 4F 53 59 53 0B D9 07                    // .".OSYS...

                Store (One, \_SB.PCI0.LPCB.EC.ECOS)
            }

  A53F: 70 01 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43  // p.\/._SB_PCI0LPC
  A54F: 42 45 43 5F 5F 45 43 4F 53                       // BEC__ECOS

            ElseIf
  A558: A1 49 06                                         // .I.

 (LEqual (OSYS, 0x07D9))
            {

  A55B: A0 23 93 4F 53 59 53 0B D9 07                    // .#.OSYS...

                Store (0x08, \_SB.PCI0.LPCB.EC.ECOS)
            }

  A565: 70 0A 08 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // p..\/._SB_PCI0LP
  A575: 43 42 45 43 5F 5F 45 43 4F 53                    // CBEC__ECOS

            ElseIf
  A57F: A1 42 04                                         // .B.

 (LEqual (OSYS, 0x07DC))
            {

  A582: A0 23 93 4F 53 59 53 0B DC 07                    // .#.OSYS...

                Store (0x02, \_SB.PCI0.LPCB.EC.ECOS)
            }

  A58C: 70 0A 02 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // p..\/._SB_PCI0LP
  A59C: 43 42 45 43 5F 5F 45 43 4F 53                    // CBEC__ECOS

            Else
            {

  A5A6: A1 1B                                            // ..

                Store (0x02, \_SB.PCI0.LPCB.EC.ECOS)
            }


  A5A8: 70 0A 02 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // p..\/._SB_PCI0LP
  A5B8: 43 42 45 43 5F 5F 45 43 4F 53                    // CBEC__ECOS

            If (CondRefOf (\_SB.PCI0.PEG0.PEGP.EPON))
            {
                \_SB.PCI0.PEG0.PEGP.EPON ()
            }


  A5C2: A0 32 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 50  // .2[.\/._SB_PCI0P
  A5D2: 45 47 30 50 45 47 50 45 50 4F 4E 00 5C 2F 05 5F  // EG0PEGPEPON.\/._
  A5E2: 53 42 5F 50 43 49 30 50 45 47 30 50 45 47 50 45  // SB_PCI0PEG0PEGPE
  A5F2: 50 4F 4E                                         // PON

            If (CondRefOf (\_SB.PCI0.RP05.PEGP.EPON))
            {
                \_SB.PCI0.RP05.PEGP.EPON ()
            }

            Store (One, \_SB.PCI0.GFX0.CLID)

  A5F5: A0 32 5B 12 5C 2F 05 5F 53 42 5F 50 43 49 30 52  // .2[.\/._SB_PCI0R
  A605: 50 30 35 50 45 47 50 45 50 4F 4E 00 5C 2F 05 5F  // P05PEGPEPON.\/._
  A615: 53 42 5F 50 43 49 30 52 50 30 35 50 45 47 50 45  // SB_PCI0RP05PEGPE
  A625: 50 4F 4E 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30  // PONp.\/._SB_PCI0
  A635: 47 46 58 30 43 4C 49 44                          // GFX0CLID

            Notify (\_SB.PWRB, 0x02)
        }


  A63D: 86 5C 2E 5F 53 42 5F 50 57 52 42 0A 02           // .\._SB_PWRB..

        If (LAnd (
  A64A: A0 48 06 90 92                                   // .H...

LNotEqual (And (\_SB.PCI0.B0D3.ABAR, 0xFFFFC004), 0xFFFFC004), 
  A64F: 93 7B 5C 2F 04 5F 53 42 5F 50 43 49 30 42 30 44  // .{\/._SB_PCI0B0D
  A65F: 33 41 42 41 52 0C 04 C0 FF FF 00 0C 04 C0 FF FF  // 3ABAR...........


  A66F: 92                                               // .

LNotEqual (And (\_SB.PCI0.B0D3.ABAR, 0xFFFFC000), Zero)))
        {

  A670: 93 7B 5C 2F 04 5F 53 42 5F 50 43 49 30 42 30 44  // .{\/._SB_PCI0B0D
  A680: 33 41 42 41 52 0C 00 C0 FF FF 00 00              // 3ABAR.......

            Store (\_SB.PCI0.B0D3.ABAR, \_SB.PCI0.B0D3.BARA)
        }


  A68C: 70 5C 2F 04 5F 53 42 5F 50 43 49 30 42 30 44 33  // p\/._SB_PCI0B0D3
  A69C: 41 42 41 52 5C 2F 04 5F 53 42 5F 50 43 49 30 42  // ABAR\/._SB_PCI0B
  A6AC: 30 44 33 42 41 52 41                             // 0D3BARA

        If (And (ICNF, 0x10))
        {

  A6B3: A0 4E 0E 7B 49 43 4E 46 0A 10 00                 // .N.{ICNF...

            If (CondRefOf (\_SB.IAOE.PTSL))
            {

  A6BE: A0 24 5B 12 5C 2F 03 5F 53 42 5F 49 41 4F 45 50  // .$[.\/._SB_IAOEP
  A6CE: 54 53 4C 00                                      // TSL.

                Store (Zero, \_SB.IAOE.PTSL)
            }


  A6D2: 70 00 5C 2F 03 5F 53 42 5F 49 41 4F 45 50 54 53  // p.\/._SB_IAOEPTS
  A6E2: 4C                                               // L

            If (CondRefOf (\_SB.IAOE.ITMR))
            {

  A6E3: A0 44 07 5B 12 5C 2F 03 5F 53 42 5F 49 41 4F 45  // .D.[.\/._SB_IAOE
  A6F3: 49 54 4D 52 00                                   // ITMR.

                If (
  A6F8: A0 12                                            // ..

LEqual (\_SB.IAOE.ITMR, Zero)){}

  A6FA: 93 5C 2F 03 5F 53 42 5F 49 41 4F 45 49 54 4D 52  // .\/._SB_IAOEITMR
  A70A: 00                                               // .

                If (\_SB.PCI0.LPCB.EC.ECOK)
                {
                    Store (Zero, \_SB.PCI0.LPCB.EC.FDAT)

  A70B: A0 4C 04 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // .L.\/._SB_PCI0LP
  A71B: 43 42 45 43 5F 5F 45 43 4F 4B 70 00 5C 2F 05 5F  // CBEC__ECOKp.\/._
  A72B: 53 42 5F 50 43 49 30 4C 50 43 42 45 43 5F 5F 46  // SB_PCI0LPCBEC__F
  A73B: 44 41 54                                         // DAT

                    Store (0xB9, \_SB.PCI0.LPCB.EC.FCMD)
                }
            }


  A73E: 70 0A B9 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // p..\/._SB_PCI0LP
  A74E: 43 42 45 43 5F 5F 46 43 4D 44                    // CBEC__FCMD

            If (CondRefOf (\_SB.IAOE.ECTM))
            {

  A758: A0 24 5B 12 5C 2F 03 5F 53 42 5F 49 41 4F 45 45  // .$[.\/._SB_IAOEE
  A768: 43 54 4D 00                                      // CTM.

                Store (Zero, \_SB.IAOE.ECTM)
            }


  A76C: 70 00 5C 2F 03 5F 53 42 5F 49 41 4F 45 45 43 54  // p.\/._SB_IAOEECT
  A77C: 4D                                               // M

            If (CondRefOf (\_SB.IAOE.RCTM))
            {

  A77D: A0 24 5B 12 5C 2F 03 5F 53 42 5F 49 41 4F 45 52  // .$[.\/._SB_IAOER
  A78D: 43 54 4D 00                                      // CTM.

                Store (Zero, \_SB.IAOE.RCTM)
            }
        }


  A791: 70 00 5C 2F 03 5F 53 42 5F 49 41 4F 45 52 43 54  // p.\/._SB_IAOERCT
  A7A1: 4D                                               // M

        If (NEXP)
        {

  A7A2: A0 36 4E 45 58 50                                // .6NEXP

            If (And (OSCC, One))
            {
                \_SB.PCI0.NHPG ()
            }


  A7A8: A0 17 7B 4F 53 43 43 01 00 5C 2F 03 5F 53 42 5F  // ..{OSCC..\/._SB_
  A7B8: 50 43 49 30 4E 48 50 47                          // PCI0NHPG

            If (And (OSCC, 0x04))
            {
                \_SB.PCI0.NPME ()
            }
        }


  A7C0: A0 18 7B 4F 53 43 43 0A 04 00 5C 2F 03 5F 53 42  // ..{OSCC...\/._SB
  A7D0: 5F 50 43 49 30 4E 50 4D 45                       // _PCI0NPME

        If (LEqual (Arg0, 0x03))
        {
            Store (0x0E, PRM0)

  A7D9: A0 13 93 68 0A 03 70 0A 0E 50 52 4D 30           // ...h..p..PRM0

            Store (0xE0, SSMP)
        }


  A7E6: 70 0A E0 53 53 4D 50                             // p..SSMP

        If (LOr (LEqual (Arg0, 0x03), 
  A7ED: A0 4C 1B 91 93 68 0A 03                          // .L...h..

LEqual (Arg0, 0x04)))
        {

  A7F5: 93 68 0A 04                                      // .h..

            If (LAnd (DTSE, 
  A7F9: A0 16 90 44 54 53 45                             // ...DTSE

LGreater (TCNT, One)))
            {
                TRAP (TRTD, 0x14)
            }


  A800: 94 54 43 4E 54 01 54 52 41 50 54 52 54 44 0A 14  // .TCNT.TRAPTRTD..

            If (LEqual (OSYS, 0x07D2))
            {

  A810: A0 41 0C 93 4F 53 59 53 0B D2 07                 // .A..OSYS...

                If (And (\_PR.CFGD, One))
                {

  A81B: A0 46 0B 7B 5C 2E 5F 50 52 5F 43 46 47 44 01 00  // .F.{\._PR_CFGD..

                    If (LGreater (\_PR.CPU0._PPC, Zero))
                    {
                        Subtract (\_PR.CPU0._PPC, One, \_PR.CPU0._PPC)
                        PNOT ()
                        Add (\_PR.CPU0._PPC, One, \_PR.CPU0._PPC)
                        PNOT ()
                    }

  A82B: A0 4B 05 94 5C 2F 03 5F 50 52 5F 43 50 55 30 5F  // .K..\/._PR_CPU0_
  A83B: 50 50 43 00 74 5C 2F 03 5F 50 52 5F 43 50 55 30  // PPC.t\/._PR_CPU0
  A84B: 5F 50 50 43 01 5C 2F 03 5F 50 52 5F 43 50 55 30  // _PPC.\/._PR_CPU0
  A85B: 5F 50 50 43 50 4E 4F 54 72 5C 2F 03 5F 50 52 5F  // _PPCPNOTr\/._PR_
  A86B: 43 50 55 30 5F 50 50 43 01 5C 2F 03 5F 50 52 5F  // CPU0_PPC.\/._PR_
  A87B: 43 50 55 30 5F 50 50 43 50 4E 4F 54              // CPU0_PPCPNOT

                    Else
                    {
                        Add (\_PR.CPU0._PPC, One, \_PR.CPU0._PPC)
                        PNOT ()
                        Subtract (\_PR.CPU0._PPC, One, \_PR.CPU0._PPC)
                        PNOT ()
                    }
                }
            }


  A887: A1 4A 04 72 5C 2F 03 5F 50 52 5F 43 50 55 30 5F  // .J.r\/._PR_CPU0_
  A897: 50 50 43 01 5C 2F 03 5F 50 52 5F 43 50 55 30 5F  // PPC.\/._PR_CPU0_
  A8A7: 50 50 43 50 4E 4F 54 74 5C 2F 03 5F 50 52 5F 43  // PPCPNOTt\/._PR_C
  A8B7: 50 55 30 5F 50 50 43 01 5C 2F 03 5F 50 52 5F 43  // PU0_PPC.\/._PR_C
  A8C7: 50 55 30 5F 50 50 43 50 4E 4F 54                 // PU0_PPCPNOT

            If (LEqual (RP1D, Zero))
            {

  A8D2: A0 18 93 52 50 31 44 00                          // ...RP1D.

                Notify (\_SB.PCI0.RP01, Zero)
            }


  A8DA: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
  A8EA: 00                                               // .

            If (LEqual (RP2D, Zero))
            {

  A8EB: A0 18 93 52 50 32 44 00                          // ...RP2D.

                Notify (\_SB.PCI0.RP02, Zero)
            }


  A8F3: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
  A903: 00                                               // .

            If (LEqual (RP3D, Zero))
            {

  A904: A0 18 93 52 50 33 44 00                          // ...RP3D.

                Notify (\_SB.PCI0.RP03, Zero)
            }


  A90C: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
  A91C: 00                                               // .

            If (LEqual (RP4D, Zero))
            {

  A91D: A0 18 93 52 50 34 44 00                          // ...RP4D.

                Notify (\_SB.PCI0.RP04, Zero)
            }


  A925: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
  A935: 00                                               // .

            If (LEqual (RP5D, Zero))
            {

  A936: A0 18 93 52 50 35 44 00                          // ...RP5D.

                Notify (\_SB.PCI0.RP05, Zero)
            }


  A93E: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
  A94E: 00                                               // .

            If (LEqual (RP6D, Zero))
            {

  A94F: A0 18 93 52 50 36 44 00                          // ...RP6D.

                Notify (\_SB.PCI0.RP06, Zero)
            }


  A957: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
  A967: 00                                               // .

            If (LEqual (RP7D, Zero))
            {

  A968: A0 20 93 52 50 37 44 00                          // . .RP7D.

                If (LEqual (DSTS, Zero))
                {

  A970: A0 18 93 44 53 54 53 00                          // ...DSTS.

                    Notify (\_SB.PCI0.RP07, Zero)
                }
            }


  A978: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
  A988: 00                                               // .

            If (LEqual (RP8D, Zero))
            {

  A989: A0 20 93 52 50 38 44 00                          // . .RP8D.

                If (LEqual (DSTS, Zero))
                {

  A991: A0 18 93 44 53 54 53 00                          // ...DSTS.

                    Notify (\_SB.PCI0.RP08, Zero)
                }
            }
        }


  A999: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
  A9A9: 00                                               // .

        If (LOr (LEqual (Arg0, 0x03), 
  A9AA: A0 1D 91 93 68 0A 03                             // ....h..

LEqual (Arg0, 0x04)))
        {
            \_SB.PCI0.XHC.XWAK ()
        }

        Store (Zero, \_SB.PCI0.PEG0.PEGP.NHDM)

  A9B1: 93 68 0A 04 5C 2F 04 5F 53 42 5F 50 43 49 30 58  // .h..\/._SB_PCI0X
  A9C1: 48 43 5F 58 57 41 4B 70 00 5C 2F 05 5F 53 42 5F  // HC_XWAKp.\/._SB_
  A9D1: 50 43 49 30 50 45 47 30 50 45 47 50 4E 48 44 4D  // PCI0PEG0PEGPNHDM

        Return (
  A9E1: A4                                               // .

Package (0x02)
        {
            Zero, 
            Zero
        })
    }


  A9E2: 12 04 02 00 00                                   // .....

    Method (GETB, 3, Serialized)
    {
        Multiply (Arg0, 0x08, Local0)
        Multiply (Arg1, 0x08, Local1)

  A9E7: 14 1E 47 45 54 42 0B 77 68 0A 08 60 77 69 0A 08  // ..GETB.wh..`wi..
  A9F7: 61                                               // a

        CreateField (Arg2, Local0, Local1, TBF3)

  A9F8: 5B 13 6A 60 61 54 42 46 33                       // [.j`aTBF3

        Return (TBF3)
    }


  AA01: A4 54 42 46 33                                   // .TBF3

    Method (PNOT, 0, Serialized)
    {

  AA06: 14 48 22 50 4E 4F 54 08                          // .H"PNOT.

        If (CondRefOf (\_SB.PCCD.PENB))
        {

  AA0E: A0 20 5B 12 5C 2F 03 5F 53 42 5F 50 43 43 44 50  // . [.\/._SB_PCCDP
  AA1E: 45 4E 42 00                                      // ENB.

            Notify (\_SB.PCCD, 0x82)
        }

  AA22: 86 5C 2E 5F 53 42 5F 50 43 43 44 0A 82           // .\._SB_PCCD..

        ElseIf
  AA2F: A1 42 0D                                         // .B.

 (LGreater (TCNT, One))
        {

  AA32: A0 40 0C 94 54 43 4E 54 01                       // .@..TCNT.

            If (And (PDC0, 0x08))
            {

  AA3B: A0 16 7B 50 44 43 30 0A 08 00                    // ..{PDC0...

                Notify (\_PR.CPU0, 0x80)
            }


  AA45: 86 5C 2E 5F 50 52 5F 43 50 55 30 0A 80           // .\._PR_CPU0..

            If (And (PDC1, 0x08))
            {

  AA52: A0 16 7B 50 44 43 31 0A 08 00                    // ..{PDC1...

                Notify (\_PR.CPU1, 0x80)
            }


  AA5C: 86 5C 2E 5F 50 52 5F 43 50 55 31 0A 80           // .\._PR_CPU1..

            If (And (PDC2, 0x08))
            {

  AA69: A0 16 7B 50 44 43 32 0A 08 00                    // ..{PDC2...

                Notify (\_PR.CPU2, 0x80)
            }


  AA73: 86 5C 2E 5F 50 52 5F 43 50 55 32 0A 80           // .\._PR_CPU2..

            If (And (PDC3, 0x08))
            {

  AA80: A0 16 7B 50 44 43 33 0A 08 00                    // ..{PDC3...

                Notify (\_PR.CPU3, 0x80)
            }


  AA8A: 86 5C 2E 5F 50 52 5F 43 50 55 33 0A 80           // .\._PR_CPU3..

            If (And (PDC4, 0x08))
            {

  AA97: A0 16 7B 50 44 43 34 0A 08 00                    // ..{PDC4...

                Notify (\_PR.CPU4, 0x80)
            }


  AAA1: 86 5C 2E 5F 50 52 5F 43 50 55 34 0A 80           // .\._PR_CPU4..

            If (And (PDC5, 0x08))
            {

  AAAE: A0 16 7B 50 44 43 35 0A 08 00                    // ..{PDC5...

                Notify (\_PR.CPU5, 0x80)
            }


  AAB8: 86 5C 2E 5F 50 52 5F 43 50 55 35 0A 80           // .\._PR_CPU5..

            If (And (PDC6, 0x08))
            {

  AAC5: A0 16 7B 50 44 43 36 0A 08 00                    // ..{PDC6...

                Notify (\_PR.CPU6, 0x80)
            }


  AACF: 86 5C 2E 5F 50 52 5F 43 50 55 36 0A 80           // .\._PR_CPU6..

            If (And (PDC7, 0x08))
            {

  AADC: A0 16 7B 50 44 43 37 0A 08 00                    // ..{PDC7...

                Notify (\_PR.CPU7, 0x80)
            }
        }

  AAE6: 86 5C 2E 5F 50 52 5F 43 50 55 37 0A 80           // .\._PR_CPU7..

        Else
        {

  AAF3: A1 0E                                            // ..

            Notify (\_PR.CPU0, 0x80)
        }


  AAF5: 86 5C 2E 5F 50 52 5F 43 50 55 30 0A 80           // .\._PR_CPU0..

        If (LGreater (TCNT, One))
        {

  AB02: A0 48 10 94 54 43 4E 54 01                       // .H..TCNT.

            If (LAnd (And (PDC0, 0x08), 
  AB0B: A0 1F 90 7B 50 44 43 30 0A 08 00                 // ...{PDC0...

And (PDC0, 0x10)))
            {

  AB16: 7B 50 44 43 30 0A 10 00                          // {PDC0...

                Notify (\_PR.CPU0, 0x81)
            }


  AB1E: 86 5C 2E 5F 50 52 5F 43 50 55 30 0A 81           // .\._PR_CPU0..

            If (LAnd (And (PDC1, 0x08), 
  AB2B: A0 1F 90 7B 50 44 43 31 0A 08 00                 // ...{PDC1...

And (PDC1, 0x10)))
            {

  AB36: 7B 50 44 43 31 0A 10 00                          // {PDC1...

                Notify (\_PR.CPU1, 0x81)
            }


  AB3E: 86 5C 2E 5F 50 52 5F 43 50 55 31 0A 81           // .\._PR_CPU1..

            If (LAnd (And (PDC2, 0x08), 
  AB4B: A0 1F 90 7B 50 44 43 32 0A 08 00                 // ...{PDC2...

And (PDC2, 0x10)))
            {

  AB56: 7B 50 44 43 32 0A 10 00                          // {PDC2...

                Notify (\_PR.CPU2, 0x81)
            }


  AB5E: 86 5C 2E 5F 50 52 5F 43 50 55 32 0A 81           // .\._PR_CPU2..

            If (LAnd (And (PDC3, 0x08), 
  AB6B: A0 1F 90 7B 50 44 43 33 0A 08 00                 // ...{PDC3...

And (PDC3, 0x10)))
            {

  AB76: 7B 50 44 43 33 0A 10 00                          // {PDC3...

                Notify (\_PR.CPU3, 0x81)
            }


  AB7E: 86 5C 2E 5F 50 52 5F 43 50 55 33 0A 81           // .\._PR_CPU3..

            If (LAnd (And (PDC4, 0x08), 
  AB8B: A0 1F 90 7B 50 44 43 34 0A 08 00                 // ...{PDC4...

And (PDC4, 0x10)))
            {

  AB96: 7B 50 44 43 34 0A 10 00                          // {PDC4...

                Notify (\_PR.CPU4, 0x81)
            }


  AB9E: 86 5C 2E 5F 50 52 5F 43 50 55 34 0A 81           // .\._PR_CPU4..

            If (LAnd (And (PDC5, 0x08), 
  ABAB: A0 1F 90 7B 50 44 43 35 0A 08 00                 // ...{PDC5...

And (PDC5, 0x10)))
            {

  ABB6: 7B 50 44 43 35 0A 10 00                          // {PDC5...

                Notify (\_PR.CPU5, 0x81)
            }


  ABBE: 86 5C 2E 5F 50 52 5F 43 50 55 35 0A 81           // .\._PR_CPU5..

            If (LAnd (And (PDC6, 0x08), 
  ABCB: A0 1F 90 7B 50 44 43 36 0A 08 00                 // ...{PDC6...

And (PDC6, 0x10)))
            {

  ABD6: 7B 50 44 43 36 0A 10 00                          // {PDC6...

                Notify (\_PR.CPU6, 0x81)
            }


  ABDE: 86 5C 2E 5F 50 52 5F 43 50 55 36 0A 81           // .\._PR_CPU6..

            If (LAnd (And (PDC7, 0x08), 
  ABEB: A0 1F 90 7B 50 44 43 37 0A 08 00                 // ...{PDC7...

And (PDC7, 0x10)))
            {

  ABF6: 7B 50 44 43 37 0A 10 00                          // {PDC7...

                Notify (\_PR.CPU7, 0x81)
            }
        }

  ABFE: 86 5C 2E 5F 50 52 5F 43 50 55 37 0A 81           // .\._PR_CPU7..

        Else
        {

  AC0B: A1 0E                                            // ..

            Notify (\_PR.CPU0, 0x81)
        }


  AC0D: 86 5C 2E 5F 50 52 5F 43 50 55 30 0A 81           // .\._PR_CPU0..

        If (LEqual (DPTF, One))
        {

  AC1A: A0 14 93 44 50 54 46 01                          // ...DPTF.

            Notify (\_SB.IETM, 0x86)
        }
    }


  AC22: 86 5C 2E 5F 53 42 5F 49 45 54 4D 0A 86           // .\._SB_IETM..

    OperationRegion (MBAR, SystemMemory, Add (ShiftLeft (\_SB.PCI0.MHBR, 0x0F), 0x5000), 0x1000)

  AC2F: 5B 80 4D 42 41 52 00 72 79 5C 2F 03 5F 53 42 5F  // [.MBAR.ry\/._SB_
  AC3F: 50 43 49 30 4D 48 42 52 0A 0F 00 0B 00 50 00 0B  // PCI0MHBR.....P..
  AC4F: 00 10                                            // ..

    Field (MBAR, ByteAcc, NoLock, Preserve)
    {
        Offset (0x938), 
        PWRU,   4, 
        Offset (0x9A0), 
        PPL1,   15, 
        PL1E,   1, 
        CLP1,   1
    }


  AC51: 5B 81 21 4D 42 41 52 01 00 80 9C 04 50 57 52 55  // [.!MBAR.....PWRU
  AC61: 04 00 4C 33 50 50 4C 31 0F 50 4C 31 45 01 43 4C  // ..L3PPL1.PL1E.CL
  AC71: 50 31 01                                         // P1.

    Name (CLMP, Zero)

  AC74: 08 43 4C 4D 50 00                                // .CLMP.

    Name (PLEN, Zero)

  AC7A: 08 50 4C 45 4E 00                                // .PLEN.

    Name (PLSV, 0x8000)

  AC80: 08 50 4C 53 56 0B 00 80                          // .PLSV...

    Name (CSEM, Zero)

  AC88: 08 43 53 45 4D 00                                // .CSEM.

    Method (SPL1, 0, Serialized)
    {

  AC8E: 14 47 07 53 50 4C 31 08                          // .G.SPL1.

        Name (PPUU, Zero)

  AC96: 08 50 50 55 55 00                                // .PPUU.

        If (LEqual (CSEM, One))
        {

  AC9C: A0 09 93 43 53 45 4D 01                          // ...CSEM.

            Return (Zero)
        }

        Store (One, CSEM)
        Store (PPL1, PLSV)
        Store (PL1E, PLEN)
        Store (CLP1, CLMP)

  ACA4: A4 00 70 01 43 53 45 4D 70 50 50 4C 31 50 4C 53  // ..p.CSEMpPPL1PLS
  ACB4: 56 70 50 4C 31 45 50 4C 45 4E 70 43 4C 50 31 43  // VpPL1EPLENpCLP1C
  ACC4: 4C 4D 50                                         // LMP

        If (LEqual (PWRU, Zero))
        {

  ACC7: A0 0D 93 50 57 52 55 00                          // ...PWRU.

            Store (One, PPUU)
        }

  ACCF: 70 01 50 50 55 55                                // p.PPUU

        Else
        {

  ACD5: A1 0D                                            // ..

            ShiftLeft (Decrement (PWRU), 0x02, PPUU)
        }

        Multiply (PLVL, PPUU, Local0)
        Divide (Local0, 0x03E8, , Local1)
        Store (Local1, PPL1)
        Store (One, PL1E)

  ACD7: 79 76 50 57 52 55 0A 02 50 50 55 55 77 50 4C 56  // yvPWRU..PPUUwPLV
  ACE7: 4C 50 50 55 55 60 78 60 0B E8 03 00 61 70 61 50  // LPPUU`x`....apaP
  ACF7: 50 4C 31 70 01 50 4C 31 45                       // PL1p.PL1E

        Store (One, CLP1)
    }


  AD00: 70 01 43 4C 50 31                                // p.CLP1

    Method (RPL1, 0, Serialized)
    {
        Store (PLSV, PPL1)
        Store (PLEN, PL1E)
        Store (CLMP, CLP1)

  AD06: 14 27 52 50 4C 31 08 70 50 4C 53 56 50 50 4C 31  // .'RPL1.pPLSVPPL1
  AD16: 70 50 4C 45 4E 50 4C 31 45 70 43 4C 4D 50 43 4C  // pPLENPL1EpCLMPCL
  AD26: 50 31                                            // P1

        Store (Zero, CSEM)
    }


  AD28: 70 00 43 53 45 4D                                // p.CSEM

    Name (DDPS, Zero)

  AD2E: 08 44 44 50 53 00                                // .DDPS.

    Name (UAMS, Zero)

  AD34: 08 55 41 4D 53 00                                // .UAMS.

    Method (TRAP, 2, Serialized)
    {
        Store (Arg1, SMIF)

  AD3A: 14 47 04 54 52 41 50 0A 70 69 53 4D 49 46        // .G.TRAP.piSMIF

        If (LEqual (Arg0, TRTD))
        {
            Store (Arg1, DTSF)
            Store (Zero, TRPD)

  AD48: A0 18 93 68 54 52 54 44 70 69 44 54 53 46 70 00  // ...hTRTDpiDTSFp.
  AD58: 54 52 50 44                                      // TRPD

            Return (DTSF)
        }


  AD5C: A4 44 54 53 46                                   // .DTSF

        If (LEqual (Arg0, TRTI))
        {

  AD61: A0 0D 93 68 54 52 54 49                          // ...hTRTI

            Store (Zero, TRPH)
        }


  AD69: 70 00 54 52 50 48                                // p.TRPH

        If (LEqual (Arg0, PFTI))
        {

  AD6F: A0 0D 93 68 50 46 54 49                          // ...hPFTI

            Store (Zero, TRPF)
        }


  AD77: 70 00 54 52 50 46                                // p.TRPF

        Return (SMIF)
    }


  AD7D: A4 53 4D 49 46                                   // .SMIF

    Scope (_SB.PCI0)
    {

  AD82: 10 4F 37 2E 5F 53 42 5F 50 43 49 30              // .O7._SB_PCI0

        Method (PTMA, 0, NotSerialized)
        {

  AD8E: 14 0B 50 54 4D 41 00                             // ..PTMA.

            Return (PFMA)
        }


  AD95: A4 50 46 4D 41                                   // .PFMA

        Method (PTMS, 0, NotSerialized)
        {

  AD9A: 14 0B 50 54 4D 53 00                             // ..PTMS.

            Return (PFMS)
        }


  ADA1: A4 50 46 4D 53                                   // .PFMS

        Method (PTIA, 0, NotSerialized)
        {

  ADA6: 14 0B 50 54 49 41 00                             // ..PTIA.

            Return (PFIA)
        }


  ADAD: A4 50 46 49 41                                   // .PFIA

        Method (_INI, 0, NotSerialized)  // _INI: Initialize
        {
            Store (0x07D0, OSYS)

  ADB2: 14 40 17 5F 49 4E 49 00 70 0B D0 07 4F 53 59 53  // .@._INI.p...OSYS

            If (CondRefOf (\_OSI, Local0))
            {

  ADC2: A0 41 14 5B 12 5C 5F 4F 53 49 60                 // .A.[.\_OSI`

                If (_OSI ("Linux"))
                {

  ADCD: A0 14 5F 4F 53 49 0D 4C 69 6E 75 78 00           // .._OSI.Linux.

                    Store (0x03E8, OSYS)
                }


  ADDA: 70 0B E8 03 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2001"))
                {

  ADE2: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
  ADF2: 30 30 31 00                                      // 001.

                    Store (0x07D1, OSYS)
                }


  ADF6: 70 0B D1 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2001 SP1"))
                {

  ADFE: A0 1F 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
  AE0E: 30 30 31 20 53 50 31 00                          // 001 SP1.

                    Store (0x07D1, OSYS)
                }


  AE16: 70 0B D1 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2001 SP2"))
                {

  AE1E: A0 1F 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
  AE2E: 30 30 31 20 53 50 32 00                          // 001 SP2.

                    Store (0x07D2, OSYS)
                }


  AE36: 70 0B D2 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2001.1"))
                {

  AE3E: A0 1D 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
  AE4E: 30 30 31 2E 31 00                                // 001.1.

                    Store (0x07D3, OSYS)
                }


  AE54: 70 0B D3 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2006"))
                {

  AE5C: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
  AE6C: 30 30 36 00                                      // 006.

                    Store (0x07D6, OSYS)
                }


  AE70: 70 0B D6 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2009"))
                {

  AE78: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
  AE88: 30 30 39 00                                      // 009.

                    Store (0x07D9, OSYS)
                }


  AE8C: 70 0B D9 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2012"))
                {

  AE94: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
  AEA4: 30 31 32 00                                      // 012.

                    Store (0x07DC, OSYS)
                }


  AEA8: 70 0B DC 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2013"))
                {

  AEB0: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
  AEC0: 30 31 33 00                                      // 013.

                    Store (0x07DD, OSYS)
                }


  AEC4: 70 0B DD 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2014"))
                {

  AECC: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
  AEDC: 30 31 34 00                                      // 014.

                    Store (0x07DE, OSYS)
                }


  AEE0: 70 0B DE 07 4F 53 59 53                          // p...OSYS

                If (_OSI ("Windows 2015"))
                {

  AEE8: A0 1B 5F 4F 53 49 0D 57 69 6E 64 6F 77 73 20 32  // .._OSI.Windows 2
  AEF8: 30 31 35 00                                      // 015.

                    Store (0x07DF, OSYS)
                }
            }

  AEFC: 70 0B DF 07 4F 53 59 53                          // p...OSYS

            ElseIf
  AF04: A1 1A                                            // ..

 (MCTH (_OS, "Linux"))
            {

  AF06: A0 18 4D 43 54 48 5F 4F 53 5F 0D 4C 69 6E 75 78  // ..MCTH_OS_.Linux
  AF16: 00                                               // .

                Store (0x03E8, OSYS)
            }

            PINI ()
        }


  AF17: 70 0B E8 03 4F 53 59 53 50 49 4E 49              // p...OSYSPINI

        Method (MCTH, 2, NotSerialized)
        {

  AF23: 14 4E 04 4D 43 54 48 02                          // .N.MCTH.

            If (LLess (SizeOf (Arg0), 
  AF2B: A0 08 95 87 68                                   // ....h

SizeOf (Arg1)))
            {

  AF30: 87 69                                            // .i

                Return (Zero)
            }

            Add (SizeOf (Arg0), One, Local0)

  AF32: A4 00 72 87 68 01 60                             // ..r.h.`

            Name (BUF0, 
  AF39: 08 42 55 46 30                                   // .BUF0

Buffer (Local0){})

  AF3E: 11 02 60                                         // ..`

            Name (BUF1, 
  AF41: 08 42 55 46 31                                   // .BUF1

Buffer (Local0){})
            Store (Arg0, BUF0)
            Store (Arg1, BUF1)

  AF46: 11 02 60 70 68 42 55 46 30 70 69 42 55 46 31     // ..`phBUF0piBUF1

            While (Local0)
            {
                Decrement (Local0)

  AF55: A2 1A 60 76 60                                   // ..`v`

                If (
  AF5A: A0 15 92                                         // ...

LNotEqual (DerefOf (
  AF5D: 93 83                                            // ..

Index (BUF0, Local0)), 
  AF5F: 88 42 55 46 30 60 00                             // .BUF0`.

DerefOf (
  AF66: 83                                               // .

Index (BUF1, Local0))))
                {

  AF67: 88 42 55 46 31 60 00                             // .BUF1`.

                    Return (Zero)
                }
            }


  AF6E: A4 00                                            // ..

            Return (One)
        }


  AF70: A4 01                                            // ..

        Method (NHPG, 0, Serialized)
        {
            Store (Zero, ^RP01.HPEX)
            Store (Zero, ^RP02.HPEX)
            Store (Zero, ^RP03.HPEX)
            Store (Zero, ^RP04.HPEX)
            Store (Zero, ^RP05.HPEX)
            Store (Zero, ^RP06.HPEX)
            Store (Zero, ^RP07.HPEX)
            Store (Zero, ^RP08.HPEX)
            Store (One, ^RP01.HPSX)
            Store (One, ^RP02.HPSX)
            Store (One, ^RP03.HPSX)
            Store (One, ^RP04.HPSX)
            Store (One, ^RP05.HPSX)
            Store (One, ^RP06.HPSX)
            Store (One, ^RP07.HPSX)

  AF72: 14 47 0C 4E 48 50 47 08 70 00 5E 2E 52 50 30 31  // .G.NHPG.p.^.RP01
  AF82: 48 50 45 58 70 00 5E 2E 52 50 30 32 48 50 45 58  // HPEXp.^.RP02HPEX
  AF92: 70 00 5E 2E 52 50 30 33 48 50 45 58 70 00 5E 2E  // p.^.RP03HPEXp.^.
  AFA2: 52 50 30 34 48 50 45 58 70 00 5E 2E 52 50 30 35  // RP04HPEXp.^.RP05
  AFB2: 48 50 45 58 70 00 5E 2E 52 50 30 36 48 50 45 58  // HPEXp.^.RP06HPEX
  AFC2: 70 00 5E 2E 52 50 30 37 48 50 45 58 70 00 5E 2E  // p.^.RP07HPEXp.^.
  AFD2: 52 50 30 38 48 50 45 58 70 01 5E 2E 52 50 30 31  // RP08HPEXp.^.RP01
  AFE2: 48 50 53 58 70 01 5E 2E 52 50 30 32 48 50 53 58  // HPSXp.^.RP02HPSX
  AFF2: 70 01 5E 2E 52 50 30 33 48 50 53 58 70 01 5E 2E  // p.^.RP03HPSXp.^.
  B002: 52 50 30 34 48 50 53 58 70 01 5E 2E 52 50 30 35  // RP04HPSXp.^.RP05
  B012: 48 50 53 58 70 01 5E 2E 52 50 30 36 48 50 53 58  // HPSXp.^.RP06HPSX
  B022: 70 01 5E 2E 52 50 30 37 48 50 53 58              // p.^.RP07HPSX

            Store (One, ^RP08.HPSX)
        }


  B02E: 70 01 5E 2E 52 50 30 38 48 50 53 58              // p.^.RP08HPSX

        Method (NPME, 0, Serialized)
        {
            Store (Zero, ^RP01.PMEX)
            Store (Zero, ^RP02.PMEX)
            Store (Zero, ^RP03.PMEX)
            Store (Zero, ^RP04.PMEX)
            Store (Zero, ^RP05.PMEX)
            Store (Zero, ^RP06.PMEX)
            Store (Zero, ^RP07.PMEX)
            Store (Zero, ^RP08.PMEX)
            Store (One, ^RP01.PMSX)
            Store (One, ^RP02.PMSX)
            Store (One, ^RP03.PMSX)
            Store (One, ^RP04.PMSX)
            Store (One, ^RP05.PMSX)
            Store (One, ^RP06.PMSX)
            Store (One, ^RP07.PMSX)

  B03A: 14 47 0C 4E 50 4D 45 08 70 00 5E 2E 52 50 30 31  // .G.NPME.p.^.RP01
  B04A: 50 4D 45 58 70 00 5E 2E 52 50 30 32 50 4D 45 58  // PMEXp.^.RP02PMEX
  B05A: 70 00 5E 2E 52 50 30 33 50 4D 45 58 70 00 5E 2E  // p.^.RP03PMEXp.^.
  B06A: 52 50 30 34 50 4D 45 58 70 00 5E 2E 52 50 30 35  // RP04PMEXp.^.RP05
  B07A: 50 4D 45 58 70 00 5E 2E 52 50 30 36 50 4D 45 58  // PMEXp.^.RP06PMEX
  B08A: 70 00 5E 2E 52 50 30 37 50 4D 45 58 70 00 5E 2E  // p.^.RP07PMEXp.^.
  B09A: 52 50 30 38 50 4D 45 58 70 01 5E 2E 52 50 30 31  // RP08PMEXp.^.RP01
  B0AA: 50 4D 53 58 70 01 5E 2E 52 50 30 32 50 4D 53 58  // PMSXp.^.RP02PMSX
  B0BA: 70 01 5E 2E 52 50 30 33 50 4D 53 58 70 01 5E 2E  // p.^.RP03PMSXp.^.
  B0CA: 52 50 30 34 50 4D 53 58 70 01 5E 2E 52 50 30 35  // RP04PMSXp.^.RP05
  B0DA: 50 4D 53 58 70 01 5E 2E 52 50 30 36 50 4D 53 58  // PMSXp.^.RP06PMSX
  B0EA: 70 01 5E 2E 52 50 30 37 50 4D 53 58              // p.^.RP07PMSX

            Store (One, ^RP08.PMSX)
        }
    }


  B0F6: 70 01 5E 2E 52 50 30 38 50 4D 53 58              // p.^.RP08PMSX

    Scope (\)
    {

  B102: 10 45 07 5C 00                                   // .E.\.

        Name (PICM, Zero)

  B107: 08 50 49 43 4D 00                                // .PICM.

        Name (PRWP, 
  B10D: 08 50 52 57 50                                   // .PRWP

Package (0x02)
        {
            Zero, 
            Zero
        })

  B112: 12 04 02 00 00                                   // .....

        Method (GPRW, 2, NotSerialized)
        {
            Store (Arg0, 
  B117: 14 40 06 47 50 52 57 02 70 68                    // .@.GPRW.ph

Index (PRWP, Zero))
            Store (ShiftLeft (SS1, One), Local0)
            Or (Local0, ShiftLeft (SS2, 0x02), Local0)
            Or (Local0, ShiftLeft (SS3, 0x03), Local0)
            Or (Local0, ShiftLeft (SS4, 0x04), Local0)

  B121: 88 50 52 57 50 00 00 70 79 53 53 31 5F 01 00 60  // .PRWP..pySS1_..`
  B131: 7D 60 79 53 53 32 5F 0A 02 00 60 7D 60 79 53 53  // }`ySS2_...`}`ySS
  B141: 33 5F 0A 03 00 60 7D 60 79 53 53 34 5F 0A 04 00  // 3_...`}`ySS4_...
  B151: 60                                               // `

            If (And (ShiftLeft (One, Arg1), Local0))
            {

  B152: A0 11 7B 79 01 69 00 60 00                       // ..{y.i.`.

                Store (Arg1, 
  B15B: 70 69                                            // pi

Index (PRWP, One))
            }

  B15D: 88 50 52 57 50 01 00                             // .PRWP..

            Else
            {
                ShiftRight (Local0, One, Local0)

  B164: A1 0E 7A 60 01 60                                // ..z`.`

                FindSetLeftBit (Local0, 
  B16A: 81 60                                            // .`

Index (PRWP, One))
            }


  B16C: 88 50 52 57 50 01 00                             // .PRWP..

            Return (PRWP)
        }
    }


  B173: A4 50 52 57 50                                   // .PRWP

    Scope (_SB)
    {

  B178: 10 4A 98 5F 53 42 5F                             // .J._SB_

        Name (OSCI, Zero)

  B17F: 08 4F 53 43 49 00                                // .OSCI.

        Name (OSCO, Zero)

  B185: 08 4F 53 43 4F 00                                // .OSCO.

        Method (_OSC, 4, Serialized)  // _OSC: Operating System Capabilities
        {

  B18B: 14 41 13 5F 4F 53 43 0C                          // .A._OSC.

            If (
  B193: A0 0E 92                                         // ...

LNotEqual (OSCM (Arg0, Arg1, Arg2, Arg3), Zero))
            {

  B196: 93 4F 53 43 4D 68 69 6A 6B 00                    // .OSCMhijk.

                Return (Arg3)
            }


  B1A0: A4 6B                                            // .k

            CreateDWordField (Arg3, Zero, STS0)

  B1A2: 8A 6B 00 53 54 53 30                             // .k.STS0

            CreateDWordField (Arg3, 0x04, CAP0)

  B1A9: 8A 6B 0A 04 43 41 50 30                          // .k..CAP0

            If (LEqual (Arg0, 
  B1B1: A0 4E 0E 93 68                                   // .N..h

ToUUID ("0811b06e-4a27-44f9-8d60-3cbbc22e7b48") /* Platform-wide Capabilities */))
            {

  B1B6: 11 13 0A 10 6E B0 11 08 27 4A F9 44 8D 60 3C BB  // ....n...'J.D.`<.
  B1C6: C2 2E 7B 48                                      // ..{H

                If (LEqual (Arg1, One))
                {

  B1CA: A0 4A 0B 93 69 01                                // .J..i.

                    If (And (CAP0, 0x04))
                    {
                        Store (0x04, OSCO)

  B1D0: A0 3C 7B 43 41 50 30 0A 04 00 70 0A 04 4F 53 43  // .<{CAP0...p..OSC
  B1E0: 4F                                               // O

                        If (
  B1E1: A0 2B 92                                         // .+.

LNotEqual (And (SGMD, 0x0F), 0x02))
                        {

  B1E4: 93 7B 53 47 4D 44 0A 0F 00 0A 02                 // .{SGMD.....

                            If (LEqual (RTD3, Zero))
                            {
                                And (CAP0, 0x3B, CAP0)

  B1EF: A0 1D 93 52 54 44 33 00 7B 43 41 50 30 0A 3B 43  // ...RTD3.{CAP0.;C
  B1FF: 41 50 30                                         // AP0

                                Or (STS0, 0x10, STS0)
                            }
                        }
                    }


  B202: 7D 53 54 53 30 0A 10 53 54 53 30                 // }STS0..STS0

                    If (And (CAP0, 0x20))
                    {

  B20D: A0 4A 05 7B 43 41 50 30 0A 20 00                 // .J.{CAP0. .

                        If (CondRefOf (\_SB.PCCD.PENB))
                        {

  B218: A0 37 5B 12 5C 2F 03 5F 53 42 5F 50 43 43 44 50  // .7[.\/._SB_PCCDP
  B228: 45 4E 42 00                                      // ENB.

                            If (LEqual (^PCCD.PENB, Zero))
                            {
                                And (CAP0, 0x1F, CAP0)

  B22C: A0 23 93 5E 2E 50 43 43 44 50 45 4E 42 00 7B 43  // .#.^.PCCDPENB.{C
  B23C: 41 50 30 0A 1F 43 41 50 30                       // AP0..CAP0

                                Or (STS0, 0x10, STS0)
                            }
                        }

  B245: 7D 53 54 53 30 0A 10 53 54 53 30                 // }STS0..STS0

                        Else
                        {
                            And (CAP0, 0x1F, CAP0)

  B250: A1 17 7B 43 41 50 30 0A 1F 43 41 50 30           // ..{CAP0..CAP0

                            Or (STS0, 0x10, STS0)
                        }
                    }

                    Or (CAP0, 0x04, CAP0)
                    Store (STS0, OSCI)

  B25D: 7D 53 54 53 30 0A 10 53 54 53 30 7D 43 41 50 30  // }STS0..STS0}CAP0
  B26D: 0A 04 43 41 50 30 70 53 54 53 30 4F 53 43 49     // ..CAP0pSTS0OSCI

                    Store (CAP0, OSCO)
                }

  B27C: 70 43 41 50 30 4F 53 43 4F                       // pCAP0OSCO

                Else
                {
                    And (STS0, 0xFFFFFF00, STS0)

  B285: A1 1A 7B 53 54 53 30 0C 00 FF FF FF 53 54 53 30  // ..{STS0.....STS0

                    Or (STS0, 0x0A, STS0)
                }
            }

  B295: 7D 53 54 53 30 0A 0A 53 54 53 30                 // }STS0..STS0

            Else
            {
                And (STS0, 0xFFFFFF00, STS0)

  B2A0: A1 1A 7B 53 54 53 30 0C 00 FF FF FF 53 54 53 30  // ..{STS0.....STS0

                Or (STS0, 0x06, STS0)
            }


  B2B0: 7D 53 54 53 30 0A 06 53 54 53 30                 // }STS0..STS0

            Return (Arg3)
        }


  B2BB: A4 6B                                            // .k

        Device (PEPD)
        {

  B2BD: 5B 82 44 84 50 45 50 44                          // [.D.PEPD

            Name (_HID, "INT33A1")  // _HID: Hardware ID

  B2C5: 08 5F 48 49 44 0D 49 4E 54 33 33 41 31 00        // ._HID.INT33A1.

            Name (_CID, EisaId ("PNP0D80"))  // _CID: Compatible ID

  B2D3: 08 5F 43 49 44 0C 41 D0 0D 80                    // ._CID.A...

            Name (_UID, One)  // _UID: Unique ID

  B2DD: 08 5F 55 49 44 01                                // ._UID.

            Name (PEPP, Zero)

  B2E3: 08 50 45 50 50 00                                // .PEPP.

            Name (DEVS, 
  B2E9: 08 44 45 56 53                                   // .DEVS

Package (0x03)
            {
                0x02, 

  B2EE: 12 2F 03 0A 02                                   // ./...

                Package (0x01)
                {
                    "\\_SB.PCI0.GFX0"
                }, 


  B2F3: 12 12 01 0D 5C 5F 53 42 2E 50 43 49 30 2E 47 46  // ....\_SB.PCI0.GF
  B303: 58 30 00                                         // X0.

                Package (0x01)
                {
                    "\\_SB.PCI0.SAT0.PRT1"
                }
            })

  B306: 12 17 01 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // ....\_SB.PCI0.SA
  B316: 54 30 2E 50 52 54 31 00                          // T0.PRT1.

            Name (DEVX, 
  B31E: 08 44 45 56 58                                   // .DEVX

Package (0x08)
            {

  B323: 12 45 10 08                                      // .E..

                Package (0x02)
                {
                    "\\_SB.PCI0.GFX0", 
                    0xFFFFFFFF
                }, 


  B327: 12 17 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 47 46  // ....\_SB.PCI0.GF
  B337: 58 30 00 0C FF FF FF FF                          // X0......

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT1", 
                    0xFFFFFFFF
                }, 


  B33F: 12 1C 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // ....\_SB.PCI0.SA
  B34F: 54 30 2E 50 52 54 31 00 0C FF FF FF FF           // T0.PRT1......

                Package (0x02)
                {
                    "\\_SB.PCI0.UA01", 
                    0xFFFFFFFF
                }, 


  B35C: 12 17 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 55 41  // ....\_SB.PCI0.UA
  B36C: 30 31 00 0C FF FF FF FF                          // 01......

                Package (0x02)
                {
                    "\\_SB.PCI0.SDHC", 
                    0xFFFFFFFF
                }, 


  B374: 12 17 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 44  // ....\_SB.PCI0.SD
  B384: 48 43 00 0C FF FF FF FF                          // HC......

                Package (0x02)
                {
                    "\\_SB.PCI0.I2C0", 
                    0xFFFFFFFF
                }, 


  B38C: 12 17 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
  B39C: 43 30 00 0C FF FF FF FF                          // C0......

                Package (0x02)
                {
                    "\\_SB.PCI0.I2C1", 
                    0xFFFFFFFF
                }, 


  B3A4: 12 17 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
  B3B4: 43 31 00 0C FF FF FF FF                          // C1......

                Package (0x02)
                {
                    "\\_SB.PCI0.XHC", 
                    0xFFFFFFFF
                }, 


  B3BC: 12 16 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 58 48  // ....\_SB.PCI0.XH
  B3CC: 43 00 0C FF FF FF FF                             // C......

                Package (0x02)
                {
                    "HDAUDIO\\FUNC_01&VEN_10EC&DEV_0282&SUBSYS_00000000&REV_1000\\4&a02b74b&0&0001", 
                    0xFFFFFFFF
                }
            })

  B3D3: 12 45 05 02 0D 48 44 41 55 44 49 4F 5C 46 55 4E  // .E...HDAUDIO\FUN
  B3E3: 43 5F 30 31 26 56 45 4E 5F 31 30 45 43 26 44 45  // C_01&VEN_10EC&DE
  B3F3: 56 5F 30 32 38 32 26 53 55 42 53 59 53 5F 30 30  // V_0282&SUBSYS_00
  B403: 30 30 30 30 30 30 26 52 45 56 5F 31 30 30 30 5C  // 000000&REV_1000\
  B413: 34 26 61 30 32 62 37 34 62 26 30 26 30 30 30 31  // 4&a02b74b&0&0001
  B423: 00 0C FF FF FF FF                                // ......

            Name (DEVY, 
  B429: 08 44 45 56 59                                   // .DEVY

Package (0x12)
            {

  B42E: 12 4C 24 12                                      // .L$.

                Package (0x03)
                {
                    "\\_PR.CPU0", 
                    One, 

  B432: 12 18 03 0D 5C 5F 50 52 2E 43 50 55 30 00 01     // ....\_PR.CPU0..

                    Package (0x02)
                    {
                        Zero, 

  B441: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


  B445: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.CPU1", 
                    One, 

  B44B: 12 18 03 0D 5C 5F 50 52 2E 43 50 55 31 00 01     // ....\_PR.CPU1..

                    Package (0x02)
                    {
                        Zero, 

  B45A: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


  B45E: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.CPU2", 
                    One, 

  B464: 12 18 03 0D 5C 5F 50 52 2E 43 50 55 32 00 01     // ....\_PR.CPU2..

                    Package (0x02)
                    {
                        Zero, 

  B473: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


  B477: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_PR.CPU3", 
                    One, 

  B47D: 12 18 03 0D 5C 5F 50 52 2E 43 50 55 33 00 01     // ....\_PR.CPU3..

                    Package (0x02)
                    {
                        Zero, 

  B48C: 12 09 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            Zero
                        }
                    }
                }, 


  B490: 12 05 02 0A FF 00                                // ......

                Package (0x03)
                {
                    "\\_SB.PCI0.GFX0", 
                    One, 

  B496: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 47 46  // ....\_SB.PCI0.GF
  B4A6: 58 30 00 01                                      // X0..

                    Package (0x02)
                    {
                        Zero, 

  B4AA: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


  B4AE: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0", 
                    One, 

  B4B5: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // ....\_SB.PCI0.SA
  B4C5: 54 30 00 01                                      // T0..

                    Package (0x02)
                    {
                        Zero, 

  B4C9: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


  B4CD: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.PRT0", 
                    One, 

  B4D4: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .$..\_SB.PCI0.SA
  B4E4: 54 30 2E 50 52 54 30 00 01                       // T0.PRT0..

                    Package (0x02)
                    {
                        Zero, 

  B4ED: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


  B4F1: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.PRT1", 
                    One, 

  B4F9: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .$..\_SB.PCI0.SA
  B509: 54 30 2E 50 52 54 31 00 01                       // T0.PRT1..

                    Package (0x02)
                    {
                        Zero, 

  B512: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


  B516: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.PRT2", 
                    One, 

  B51E: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .$..\_SB.PCI0.SA
  B52E: 54 30 2E 50 52 54 32 00 01                       // T0.PRT2..

                    Package (0x02)
                    {
                        Zero, 

  B537: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


  B53B: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.SAT0.PRT3", 
                    One, 

  B543: 12 24 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .$..\_SB.PCI0.SA
  B553: 54 30 2E 50 52 54 33 00 01                       // T0.PRT3..

                    Package (0x02)
                    {
                        Zero, 

  B55C: 12 0B 02 00                                      // ....

                        Package (0x03)
                        {
                            0xFF, 
                            Zero, 
                            0x81
                        }
                    }
                }, 


  B560: 12 07 03 0A FF 00 0A 81                          // ........

                Package (0x03)
                {
                    "\\_SB.PCI0.UA00", 
                    One, 

  B568: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 55 41  // ....\_SB.PCI0.UA
  B578: 30 30 00 01                                      // 00..

                    Package (0x02)
                    {
                        Zero, 

  B57C: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


  B580: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.UA01", 
                    One, 

  B587: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 55 41  // ....\_SB.PCI0.UA
  B597: 30 31 00 01                                      // 01..

                    Package (0x02)
                    {
                        Zero, 

  B59B: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


  B59F: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.SDHC", 
                    One, 

  B5A6: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 44  // ....\_SB.PCI0.SD
  B5B6: 48 43 00 01                                      // HC..

                    Package (0x02)
                    {
                        Zero, 

  B5BA: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


  B5BE: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C0", 
                    One, 

  B5C5: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
  B5D5: 43 30 00 01                                      // C0..

                    Package (0x02)
                    {
                        Zero, 

  B5D9: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


  B5DD: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.I2C1", 
                    One, 

  B5E4: 12 1E 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 49 32  // ....\_SB.PCI0.I2
  B5F4: 43 31 00 01                                      // C1..

                    Package (0x02)
                    {
                        Zero, 

  B5F8: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


  B5FC: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "\\_SB.PCI0.XHC", 
                    One, 

  B603: 12 1D 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 58 48  // ....\_SB.PCI0.XH
  B613: 43 00 01                                         // C..

                    Package (0x02)
                    {
                        Zero, 

  B616: 12 0A 02 00                                      // ....

                        Package (0x02)
                        {
                            0xFF, 
                            0x03
                        }
                    }
                }, 


  B61A: 12 06 02 0A FF 0A 03                             // .......

                Package (0x03)
                {
                    "HDAUDIO\\FUNC_01&VEN_10EC&DEV_0282*", 
                    One, 

  B621: 12 36 03 0D 48 44 41 55 44 49 4F 5C 46 55 4E 43  // .6..HDAUDIO\FUNC
  B631: 5F 30 31 26 56 45 4E 5F 31 30 45 43 26 44 45 56  // _01&VEN_10EC&DEV
  B641: 5F 30 32 38 32 2A 00 01                          // _0282*..

                    Package (0x03)
                    {
                        Zero, 

  B649: 12 0E 03 00                                      // ....

                        Package (0x02)
                        {
                            Zero, 
                            Zero
                        }, 


  B64D: 12 04 02 00 00                                   // .....

                        Package (0x02)
                        {
                            One, 
                            0x03
                        }
                    }
                }, 


  B652: 12 05 02 01 0A 03                                // ......

                Package (0x03)
                {
                    "\\_SB.PCI0.ADSP", 
                    One, 

  B658: 12 22 03 0D 5C 5F 53 42 2E 50 43 49 30 2E 41 44  // ."..\_SB.PCI0.AD
  B668: 53 50 00 01                                      // SP..

                    Package (0x03)
                    {
                        Zero, 

  B66C: 12 0E 03 00                                      // ....

                        Package (0x02)
                        {
                            Zero, 
                            Zero
                        }, 


  B670: 12 04 02 00 00                                   // .....

                        Package (0x02)
                        {
                            One, 
                            0x03
                        }
                    }
                }
            })

  B675: 12 05 02 01 0A 03                                // ......

            Name (BCCD, 
  B67B: 08 42 43 43 44                                   // .BCCD

Package (0x05)
            {

  B680: 12 48 0F 05                                      // .H..

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0", 

  B684: 12 2C 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .,..\_SB.PCI0.SA
  B694: 54 30 00                                         // T0.

                    Package (0x01)
                    {

  B697: 12 19 01                                         // ...

                        Package (0x03)
                        {

  B69A: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


  B69D: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


  B6A7: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT0", 

  B6B1: 12 31 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .1..\_SB.PCI0.SA
  B6C1: 54 30 2E 50 52 54 30 00                          // T0.PRT0.

                    Package (0x01)
                    {

  B6C9: 12 19 01                                         // ...

                        Package (0x03)
                        {

  B6CC: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


  B6CF: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


  B6D9: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT1", 

  B6E3: 12 31 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .1..\_SB.PCI0.SA
  B6F3: 54 30 2E 50 52 54 31 00                          // T0.PRT1.

                    Package (0x01)
                    {

  B6FB: 12 19 01                                         // ...

                        Package (0x03)
                        {

  B6FE: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


  B701: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


  B70B: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT2", 

  B715: 12 31 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .1..\_SB.PCI0.SA
  B725: 54 30 2E 50 52 54 32 00                          // T0.PRT2.

                    Package (0x01)
                    {

  B72D: 12 19 01                                         // ...

                        Package (0x03)
                        {

  B730: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


  B733: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }, 


  B73D: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

                Package (0x02)
                {
                    "\\_SB.PCI0.SAT0.PRT3", 

  B747: 12 31 02 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // .1..\_SB.PCI0.SA
  B757: 54 30 2E 50 52 54 33 00                          // T0.PRT3.

                    Package (0x01)
                    {

  B75F: 12 19 01                                         // ...

                        Package (0x03)
                        {

  B762: 12 16 03                                         // ...

                            Package (0x05)
                            {
                                One, 
                                0x08, 
                                Zero, 
                                One, 
                                0xB2
                            }, 


  B765: 12 09 05 01 0A 08 00 01 0A B2                    // ..........

                            Package (0x03)
                            {
                                Zero, 
                                0xCD, 
                                One
                            }, 

                            0x3E80
                        }
                    }
                }
            })

  B76F: 12 06 03 00 0A CD 01 0B 80 3E                    // .........>

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  B779: 14 2D 5F 53 54 41 00                             // .-_STA.

                If (
  B780: A0 24 92                                         // .$.

LGreaterEqual (OSYS, 0x07DC))
                {

  B783: 95 4F 53 59 53 0B DC 07                          // .OSYS...

                    If (LEqual (And (CDID, 0xF000), 0x9000))
                    {

  B78B: A0 19 93 7B 43 44 49 44 0B 00 F0 00 0B 00 90     // ...{CDID.......

                        If (LEqual (S0ID, One))
                        {

  B79A: A0 0A 93 53 30 49 44 01                          // ...S0ID.

                            Return (0x0F)
                        }
                    }
                }


  B7A2: A4 0A 0F                                         // ...

                Return (Zero)
            }


  B7A5: A4 00                                            // ..

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

  B7A7: 14 4B 35 5F 44 53 4D 0C                          // .K5_DSM.


  B7AF: 08 5F 54 5F 30 00                                // ._T_0.

                If (LEqual (Arg0, 
  B7B5: A0 4A 17 93 68                                   // .J..h

ToUUID ("b8febfe0-baf8-454b-aecd-49fb91137b21")))
                {

  B7BA: 11 13 0A 10 E0 BF FE B8 F8 BA 4B 45 AE CD 49 FB  // ..........KE..I.
  B7CA: 91 13 7B 21                                      // ..{!

                    If (LEqual (Arg2, Zero))
                    {

  B7CE: A0 09 93 6A 00                                   // ...j.

                        Return (
  B7D3: A4                                               // .

Buffer (One)
                        {
                             0x07                                           
                        })
                    }


  B7D4: 11 03 01 07                                      // ....

                    If (LEqual (Arg2, One))
                    {
                        Store (One, PEPP)

  B7D8: A0 0D 93 6A 01 70 01 50 45 50 50                 // ...j.p.PEPP

                        Return (0x0F)
                    }


  B7E3: A4 0A 0F                                         // ...

                    If (LEqual (Arg2, 0x02))
                    {

  B7E6: A0 49 14 93 6A 0A 02                             // .I..j..

                        If (LEqual (Arg1, Zero))
                        {

  B7ED: A0 42 07 93 69 00                                // .B..i.

                            Switch (PEPY)
                            {

  B7F3: A2 4C 06 01 70 50 45 50 59 5F 54 5F 30           // .L..pPEPY_T_0

                                Case (One)
                                {

  B800: A0 1F 93 5F 54 5F 30 01                          // ..._T_0.

                                    Return (
  B808: A4                                               // .

Package (0x02)
                                    {
                                        One, 

  B809: 12 16 02 01                                      // ....

                                        Package (0x01)
                                        {
                                            "\\_SB.PCI0.GFX0"
                                        }
                                    })
                                }

  B80D: 12 12 01 0D 5C 5F 53 42 2E 50 43 49 30 2E 47 46  // ....\_SB.PCI0.GF
  B81D: 58 30 00                                         // X0.

                                Case
  B820: A1 3E                                            // .>

 (0x02)
                                {

  B822: A0 25 93 5F 54 5F 30 0A 02                       // .%._T_0..

                                    Return (
  B82B: A4                                               // .

Package (0x02)
                                    {
                                        One, 

  B82C: 12 1B 02 01                                      // ....

                                        Package (0x01)
                                        {
                                            "\\_SB.PCI0.SAT0.PRT1"
                                        }
                                    })
                                }

  B830: 12 17 01 0D 5C 5F 53 42 2E 50 43 49 30 2E 53 41  // ....\_SB.PCI0.SA
  B840: 54 30 2E 50 52 54 31 00                          // T0.PRT1.

                                Case
  B848: A1 16                                            // ..

 (0x03)
                                {

  B84A: A0 0D 93 5F 54 5F 30 0A 03                       // ..._T_0..

                                    Return (DEVS)
                                }

  B853: A4 44 45 56 53                                   // .DEVS

                                Default
                                {

  B858: A1 06                                            // ..

                                    Return (
  B85A: A4                                               // .

Package (0x01)
                                    {
                                        Zero
                                    })
                                }


  B85B: 12 03 01 00                                      // ....

                            }
                        }


  B85F: A5                                               // .

                        If (LEqual (Arg1, One))
                        {

  B860: A0 4F 0C 93 69 01                                // .O..i.

                            If (LNot (
  B866: A0 16 92                                         // ...

And (PEPY, One)))
                            {

  B869: 7B 50 45 50 59 01 00                             // {PEPY..

                                Store (Zero, 
  B870: 70 00                                            // p.

Index (DerefOf (
  B872: 88 83                                            // ..

Index (DEVX, Zero)), One))
                            }


  B874: 88 44 45 56 58 00 00 01 00                       // .DEVX....

                            If (LNot (
  B87D: A0 17 92                                         // ...

And (PEPY, 0x02)))
                            {

  B880: 7B 50 45 50 59 0A 02 00                          // {PEPY...

                                Store (Zero, 
  B888: 70 00                                            // p.

Index (DerefOf (
  B88A: 88 83                                            // ..

Index (DEVX, One)), One))
                            }


  B88C: 88 44 45 56 58 01 00 01 00                       // .DEVX....

                            If (LNot (
  B895: A0 18 92                                         // ...

And (PEPY, 0x04)))
                            {

  B898: 7B 50 45 50 59 0A 04 00                          // {PEPY...

                                Store (Zero, 
  B8A0: 70 00                                            // p.

Index (DerefOf (
  B8A2: 88 83                                            // ..

Index (DEVX, 0x02)), One))
                            }


  B8A4: 88 44 45 56 58 0A 02 00 01 00                    // .DEVX.....

                            If (LNot (
  B8AE: A0 18 92                                         // ...

And (PEPY, 0x08)))
                            {

  B8B1: 7B 50 45 50 59 0A 08 00                          // {PEPY...

                                Store (Zero, 
  B8B9: 70 00                                            // p.

Index (DerefOf (
  B8BB: 88 83                                            // ..

Index (DEVX, 0x03)), One))
                            }


  B8BD: 88 44 45 56 58 0A 03 00 01 00                    // .DEVX.....

                            If (LNot (
  B8C7: A0 18 92                                         // ...

And (PEPY, 0x10)))
                            {

  B8CA: 7B 50 45 50 59 0A 10 00                          // {PEPY...

                                Store (Zero, 
  B8D2: 70 00                                            // p.

Index (DerefOf (
  B8D4: 88 83                                            // ..

Index (DEVX, 0x04)), One))
                            }


  B8D6: 88 44 45 56 58 0A 04 00 01 00                    // .DEVX.....

                            If (LNot (
  B8E0: A0 18 92                                         // ...

And (PEPY, 0x20)))
                            {

  B8E3: 7B 50 45 50 59 0A 20 00                          // {PEPY. .

                                Store (Zero, 
  B8EB: 70 00                                            // p.

Index (DerefOf (
  B8ED: 88 83                                            // ..

Index (DEVX, 0x05)), One))
                            }


  B8EF: 88 44 45 56 58 0A 05 00 01 00                    // .DEVX.....

                            If (LNot (
  B8F9: A0 18 92                                         // ...

And (PEPY, 0x40)))
                            {

  B8FC: 7B 50 45 50 59 0A 40 00                          // {PEPY.@.

                                Store (Zero, 
  B904: 70 00                                            // p.

Index (DerefOf (
  B906: 88 83                                            // ..

Index (DEVX, 0x06)), One))
                            }


  B908: 88 44 45 56 58 0A 06 00 01 00                    // .DEVX.....

                            If (LNot (
  B912: A0 18 92                                         // ...

And (PEPY, 0x80)))
                            {

  B915: 7B 50 45 50 59 0A 80 00                          // {PEPY...

                                Store (Zero, 
  B91D: 70 00                                            // p.

Index (DerefOf (
  B91F: 88 83                                            // ..

Index (DEVX, 0x07)), One))
                            }


  B921: 88 44 45 56 58 0A 07 00 01 00                    // .DEVX.....

                            Return (DEVX)
                        }
                    }
                }


  B92B: A4 44 45 56 58                                   // .DEVX

                If (LEqual (Arg0, 
  B930: A0 40 1D 93 68                                   // .@..h

ToUUID ("c4eb40a0-6cd2-11e2-bcfd-0800200c9a66")))
                {

  B935: 11 13 0A 10 A0 40 EB C4 D2 6C E2 11 BC FD 08 00  // .....@...l......
  B945: 20 0C 9A 66                                      //  ..f

                    If (LEqual (Arg2, Zero))
                    {

  B949: A0 09 93 6A 00                                   // ...j.

                        Return (
  B94E: A4                                               // .

Buffer (One)
                        {
                             0x07                                           
                        })
                    }


  B94F: 11 03 01 07                                      // ....

                    If (LEqual (Arg2, One))
                    {

  B953: A0 42 1A 93 6A 01                                // .B..j.

                        If (
  B959: A0 45 04 92                                      // .E..

LNotEqual (And (PEPC, 0x03), One))
                        {
                            Store (Zero, 
  B95D: 93 7B 50 45 50 43 0A 03 00 01 70 00              // .{PEPC....p.

Index (DerefOf (
  B969: 88 83                                            // ..

Index (DEVY, 0x06)), One))
                            Store (Zero, 
  B96B: 88 44 45 56 59 0A 06 00 01 00 70 00              // .DEVY.....p.

Index (DerefOf (
  B977: 88 83                                            // ..

Index (DEVY, 0x07)), One))
                            Store (Zero, 
  B979: 88 44 45 56 59 0A 07 00 01 00 70 00              // .DEVY.....p.

Index (DerefOf (
  B985: 88 83                                            // ..

Index (DEVY, 0x08)), One))

  B987: 88 44 45 56 59 0A 08 00 01 00                    // .DEVY.....

                            Store (Zero, 
  B991: 70 00                                            // p.

Index (DerefOf (
  B993: 88 83                                            // ..

Index (DEVY, 0x09)), One))
                        }


  B995: 88 44 45 56 59 0A 09 00 01 00                    // .DEVY.....

                        If (
  B99F: A0 4F 07 92                                      // .O..

LNotEqual (And (PEPC, 0x03), 0x02))
                        {
                            Store (Zero, 
  B9A3: 93 7B 50 45 50 43 0A 03 00 0A 02 70 00           // .{PEPC.....p.

Index (DerefOf (
  B9B0: 88 83                                            // ..

Index (DEVY, 0x05)), One))

  B9B2: 88 44 45 56 59 0A 05 00 01 00                    // .DEVY.....

                            If (LNot (
  B9BC: A0 17 92                                         // ...

And (SPST, One)))
                            {

  B9BF: 7B 53 50 53 54 01 00                             // {SPST..

                                Store (Zero, 
  B9C6: 70 00                                            // p.

Index (DerefOf (
  B9C8: 88 83                                            // ..

Index (DEVY, 0x06)), One))
                            }


  B9CA: 88 44 45 56 59 0A 06 00 01 00                    // .DEVY.....

                            If (LNot (
  B9D4: A0 18 92                                         // ...

And (SPST, 0x02)))
                            {

  B9D7: 7B 53 50 53 54 0A 02 00                          // {SPST...

                                Store (Zero, 
  B9DF: 70 00                                            // p.

Index (DerefOf (
  B9E1: 88 83                                            // ..

Index (DEVY, 0x07)), One))
                            }


  B9E3: 88 44 45 56 59 0A 07 00 01 00                    // .DEVY.....

                            If (LNot (
  B9ED: A0 18 92                                         // ...

And (SPST, 0x04)))
                            {

  B9F0: 7B 53 50 53 54 0A 04 00                          // {SPST...

                                Store (Zero, 
  B9F8: 70 00                                            // p.

Index (DerefOf (
  B9FA: 88 83                                            // ..

Index (DEVY, 0x08)), One))
                            }


  B9FC: 88 44 45 56 59 0A 08 00 01 00                    // .DEVY.....

                            If (LNot (
  BA06: A0 18 92                                         // ...

And (SPST, 0x08)))
                            {

  BA09: 7B 53 50 53 54 0A 08 00                          // {SPST...

                                Store (Zero, 
  BA11: 70 00                                            // p.

Index (DerefOf (
  BA13: 88 83                                            // ..

Index (DEVY, 0x09)), One))
                            }
                        }


  BA15: 88 44 45 56 59 0A 09 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x04), Zero))
                        {

  BA1F: A0 19 93 7B 50 45 50 43 0A 04 00 00              // ...{PEPC....

                            Store (Zero, 
  BA2B: 70 00                                            // p.

Index (DerefOf (
  BA2D: 88 83                                            // ..

Index (DEVY, 0x0A)), One))
                        }


  BA2F: 88 44 45 56 59 0A 0A 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x08), Zero))
                        {

  BA39: A0 19 93 7B 50 45 50 43 0A 08 00 00              // ...{PEPC....

                            Store (Zero, 
  BA45: 70 00                                            // p.

Index (DerefOf (
  BA47: 88 83                                            // ..

Index (DEVY, 0x0B)), One))
                        }


  BA49: 88 44 45 56 59 0A 0B 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x10), Zero))
                        {

  BA53: A0 19 93 7B 50 45 50 43 0A 10 00 00              // ...{PEPC....

                            Store (Zero, 
  BA5F: 70 00                                            // p.

Index (DerefOf (
  BA61: 88 83                                            // ..

Index (DEVY, 0x0C)), One))
                        }


  BA63: 88 44 45 56 59 0A 0C 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x20), Zero))
                        {

  BA6D: A0 19 93 7B 50 45 50 43 0A 20 00 00              // ...{PEPC. ..

                            Store (Zero, 
  BA79: 70 00                                            // p.

Index (DerefOf (
  BA7B: 88 83                                            // ..

Index (DEVY, 0x0D)), One))
                        }


  BA7D: 88 44 45 56 59 0A 0D 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x40), Zero))
                        {

  BA87: A0 19 93 7B 50 45 50 43 0A 40 00 00              // ...{PEPC.@..

                            Store (Zero, 
  BA93: 70 00                                            // p.

Index (DerefOf (
  BA95: 88 83                                            // ..

Index (DEVY, 0x0E)), One))
                        }


  BA97: 88 44 45 56 59 0A 0E 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x80), Zero))
                        {

  BAA1: A0 19 93 7B 50 45 50 43 0A 80 00 00              // ...{PEPC....

                            Store (Zero, 
  BAAD: 70 00                                            // p.

Index (DerefOf (
  BAAF: 88 83                                            // ..

Index (DEVY, 0x0F)), One))
                        }


  BAB1: 88 44 45 56 59 0A 0F 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x0100), Zero))
                        {

  BABB: A0 1A 93 7B 50 45 50 43 0B 00 01 00 00           // ...{PEPC.....

                            Store (Zero, 
  BAC8: 70 00                                            // p.

Index (DerefOf (
  BACA: 88 83                                            // ..

Index (DEVY, 0x10)), One))
                        }


  BACC: 88 44 45 56 59 0A 10 00 01 00                    // .DEVY.....

                        If (LEqual (And (PEPC, 0x0200), Zero))
                        {

  BAD6: A0 1A 93 7B 50 45 50 43 0B 00 02 00 00           // ...{PEPC.....

                            Store (Zero, 
  BAE3: 70 00                                            // p.

Index (DerefOf (
  BAE5: 88 83                                            // ..

Index (DEVY, 0x11)), One))
                        }


  BAE7: 88 44 45 56 59 0A 11 00 01 00                    // .DEVY.....

                        Return (DEVY)
                    }


  BAF1: A4 44 45 56 59                                   // .DEVY

                    If (LEqual (Arg2, 0x02))
                    {

  BAF6: A0 0A 93 6A 0A 02                                // ...j..

                        Return (BCCD)
                    }
                }


  BAFC: A4 42 43 43 44                                   // .BCCD

                Return (One)
            }
        }
    }


  BB01: A4 01                                            // ..

    Scope (_SB.PCI0)
    {

  BB03: 10 4B 19 2E 5F 53 42 5F 50 43 49 30              // .K.._SB_PCI0

        Device (PDRC)
        {

  BB0F: 5B 82 4E 18 50 44 52 43                          // [.N.PDRC

            Name (_HID, EisaId ("PNP0C02"))  // _HID: Hardware ID

  BB17: 08 5F 48 49 44 0C 41 D0 0C 02                    // ._HID.A...

            Name (_UID, One)  // _UID: Unique ID

  BB21: 08 5F 55 49 44 01                                // ._UID.

            Name (BUF0, 
  BB27: 08 42 55 46 30                                   // .BUF0

ResourceTemplate ()
            {
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00004000,         // Address Length
                    _Y2F)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00008000,         // Address Length
                    _Y32)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y33)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y34)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00000000,         // Address Length
                    _Y35)
                Memory32Fixed (ReadWrite,
                    0xFED20000,         // Address Base
                    0x00020000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFED90000,         // Address Base
                    0x00004000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0xFED45000,         // Address Base
                    0x0004B000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFF000000,         // Address Base
                    0x01000000,         // Address Length
                    )
                Memory32Fixed (ReadOnly,
                    0xFEE00000,         // Address Base
                    0x00100000,         // Address Length
                    )
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00001000,         // Address Length
                    _Y30)
                Memory32Fixed (ReadWrite,
                    0x00000000,         // Address Base
                    0x00010000,         // Address Length
                    _Y31)
            })

  BB2C: 11 46 09 0A 92 86 09 00 01 00 00 00 00 00 40 00  // .F............@.
  BB3C: 00 86 09 00 01 00 00 00 00 00 80 00 00 86 09 00  // ................
  BB4C: 01 00 00 00 00 00 10 00 00 86 09 00 01 00 00 00  // ................
  BB5C: 00 00 10 00 00 86 09 00 01 00 00 00 00 00 00 00  // ................
  BB6C: 00 86 09 00 01 00 00 D2 FE 00 00 02 00 86 09 00  // ................
  BB7C: 00 00 00 D9 FE 00 40 00 00 86 09 00 01 00 50 D4  // ......@.......P.
  BB8C: FE 00 B0 04 00 86 09 00 00 00 00 00 FF 00 00 00  // ................
  BB9C: 01 86 09 00 00 00 00 E0 FE 00 00 10 00 86 09 00  // ................
  BBAC: 01 00 00 00 00 00 10 00 00 86 09 00 01 00 00 00  // ................
  BBBC: 00 00 00 01 00 79 00                             // .....y.

            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
            {

  BBC3: 14 4B 0D 5F 43 52 53 08                          // .K._CRS.

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y2F._BAS, RBR0)  // _BAS: Base Address
                ShiftLeft (^^LPCB.RCBA, 0x0E, RBR0)

  BBCB: 8A 42 55 46 30 0A 04 52 42 52 30 79 5E 5E 2E 4C  // .BUF0..RBR0y^^.L
  BBDB: 50 43 42 52 43 42 41 0A 0E 52 42 52 30           // PCBRCBA..RBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y30._BAS, TBR0)  // _BAS: Base Address
                Store (TBAB, TBR0)

  BBE8: 8A 42 55 46 30 0A 7C 54 42 52 30 70 54 42 41 42  // .BUF0.|TBR0pTBAB
  BBF8: 54 42 52 30                                      // TBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y30._LEN, TBLN)  // _LEN: Length

  BBFC: 8A 42 55 46 30 0A 80 54 42 4C 4E                 // .BUF0..TBLN

                If (LEqual (TBAB, Zero))
                {

  BC07: A0 0D 93 54 42 41 42 00                          // ...TBAB.

                    Store (Zero, TBLN)
                }


  BC0F: 70 00 54 42 4C 4E                                // p.TBLN

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y31._BAS, SNR0)  // _BAS: Base Address
                Store (SRMB, SNR0)

  BC15: 8A 42 55 46 30 0A 88 53 4E 52 30 70 53 52 4D 42  // .BUF0..SNR0pSRMB
  BC25: 53 4E 52 30                                      // SNR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y32._BAS, MBR0)  // _BAS: Base Address
                ShiftLeft (MHBR, 0x0F, MBR0)

  BC29: 8A 42 55 46 30 0A 10 4D 42 52 30 79 4D 48 42 52  // .BUF0..MBR0yMHBR
  BC39: 0A 0F 4D 42 52 30                                // ..MBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y33._BAS, DBR0)  // _BAS: Base Address
                ShiftLeft (DIBR, 0x0C, DBR0)

  BC3F: 8A 42 55 46 30 0A 1C 44 42 52 30 79 44 49 42 52  // .BUF0..DBR0yDIBR
  BC4F: 0A 0C 44 42 52 30                                // ..DBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y34._BAS, EBR0)  // _BAS: Base Address
                ShiftLeft (EPBR, 0x0C, EBR0)

  BC55: 8A 42 55 46 30 0A 28 45 42 52 30 79 45 50 42 52  // .BUF0.(EBR0yEPBR
  BC65: 0A 0C 45 42 52 30                                // ..EBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y35._BAS, XBR0)  // _BAS: Base Address
                ShiftLeft (PXBR, 0x1A, XBR0)

  BC6B: 8A 42 55 46 30 0A 34 58 42 52 30 79 50 58 42 52  // .BUF0.4XBR0yPXBR
  BC7B: 0A 1A 58 42 52 30                                // ..XBR0

                CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y35._LEN, XSZ0)  // _LEN: Length
                ShiftRight (0x10000000, PXSZ, XSZ0)

  BC81: 8A 42 55 46 30 0A 38 58 53 5A 30 7A 0C 00 00 00  // .BUF0.8XSZ0z....
  BC91: 10 50 58 53 5A 58 53 5A 30                       // .PXSZXSZ0

                Return (BUF0)
            }
        }
    }


  BC9A: A4 42 55 46 30                                   // .BUF0

    Scope (_GPE)
    {

  BC9F: 10 4C B9 5F 47 50 45                             // .L._GPE

        Method (_L09, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {
            Store (0x78, P80H)
            Sleep (0x03E8)
            \_SB.PCI0.RP04.HPME ()
            Notify (\_SB.PCI0.RP04, 0x02)

  BCA6: 14 47 31 5F 4C 30 39 00 70 0A 78 50 38 30 48 5B  // .G1_L09.p.xP80H[
  BCB6: 22 0B E8 03 5C 2F 04 5F 53 42 5F 50 43 49 30 52  // "...\/._SB_PCI0R
  BCC6: 50 30 34 48 50 4D 45 86 5C 2F 03 5F 53 42 5F 50  // P04HPME.\/._SB_P
  BCD6: 43 49 30 52 50 30 34 0A 02                       // CI0RP04..

            If (LAnd (LEqual (RP1D, Zero), 
  BCDF: A0 43 04 90 93 52 50 31 44 00                    // .C...RP1D.

LEqual (\_SB.PCI0.RP01.RPAV, One)))
            {
                \_SB.PCI0.RP01.HPME ()

  BCE9: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
  BCF9: 52 50 41 56 01 5C 2F 04 5F 53 42 5F 50 43 49 30  // RPAV.\/._SB_PCI0
  BD09: 52 50 30 31 48 50 4D 45                          // RP01HPME

                Notify (\_SB.PCI0.RP01, 0x02)
            }


  BD11: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
  BD21: 0A 02                                            // ..

            If (LAnd (LEqual (RP2D, Zero), 
  BD23: A0 43 04 90 93 52 50 32 44 00                    // .C...RP2D.

LEqual (\_SB.PCI0.RP02.RPAV, One)))
            {
                \_SB.PCI0.RP02.HPME ()

  BD2D: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
  BD3D: 52 50 41 56 01 5C 2F 04 5F 53 42 5F 50 43 49 30  // RPAV.\/._SB_PCI0
  BD4D: 52 50 30 32 48 50 4D 45                          // RP02HPME

                Notify (\_SB.PCI0.RP02, 0x02)
            }


  BD55: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
  BD65: 0A 02                                            // ..

            If (LAnd (LEqual (RP3D, Zero), 
  BD67: A0 43 04 90 93 52 50 33 44 00                    // .C...RP3D.

LEqual (\_SB.PCI0.RP03.RPAV, One)))
            {
                \_SB.PCI0.RP03.HPME ()

  BD71: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
  BD81: 52 50 41 56 01 5C 2F 04 5F 53 42 5F 50 43 49 30  // RPAV.\/._SB_PCI0
  BD91: 52 50 30 33 48 50 4D 45                          // RP03HPME

                Notify (\_SB.PCI0.RP03, 0x02)
            }


  BD99: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
  BDA9: 0A 02                                            // ..

            If (LAnd (LEqual (RP4D, Zero), 
  BDAB: A0 43 04 90 93 52 50 34 44 00                    // .C...RP4D.

LEqual (\_SB.PCI0.RP04.RPAV, One)))
            {
                \_SB.PCI0.RP04.HPME ()

  BDB5: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
  BDC5: 52 50 41 56 01 5C 2F 04 5F 53 42 5F 50 43 49 30  // RPAV.\/._SB_PCI0
  BDD5: 52 50 30 34 48 50 4D 45                          // RP04HPME

                Notify (\_SB.PCI0.RP04, 0x02)
            }


  BDDD: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
  BDED: 0A 02                                            // ..

            If (LAnd (LEqual (RP5D, Zero), 
  BDEF: A0 43 04 90 93 52 50 35 44 00                    // .C...RP5D.

LEqual (\_SB.PCI0.RP05.RPAV, One)))
            {
                \_SB.PCI0.RP05.HPME ()

  BDF9: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
  BE09: 52 50 41 56 01 5C 2F 04 5F 53 42 5F 50 43 49 30  // RPAV.\/._SB_PCI0
  BE19: 52 50 30 35 48 50 4D 45                          // RP05HPME

                Notify (\_SB.PCI0.RP05, 0x02)
            }


  BE21: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
  BE31: 0A 02                                            // ..

            If (LAnd (LEqual (RP6D, Zero), 
  BE33: A0 43 04 90 93 52 50 36 44 00                    // .C...RP6D.

LEqual (\_SB.PCI0.RP06.RPAV, One)))
            {
                \_SB.PCI0.RP06.HPME ()

  BE3D: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
  BE4D: 52 50 41 56 01 5C 2F 04 5F 53 42 5F 50 43 49 30  // RPAV.\/._SB_PCI0
  BE5D: 52 50 30 36 48 50 4D 45                          // RP06HPME

                Notify (\_SB.PCI0.RP06, 0x02)
            }


  BE65: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
  BE75: 0A 02                                            // ..

            If (LAnd (LEqual (RP7D, Zero), 
  BE77: A0 43 04 90 93 52 50 37 44 00                    // .C...RP7D.

LEqual (\_SB.PCI0.RP07.RPAV, One)))
            {
                \_SB.PCI0.RP07.HPME ()

  BE81: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
  BE91: 52 50 41 56 01 5C 2F 04 5F 53 42 5F 50 43 49 30  // RPAV.\/._SB_PCI0
  BEA1: 52 50 30 37 48 50 4D 45                          // RP07HPME

                Notify (\_SB.PCI0.RP07, 0x02)
            }


  BEA9: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
  BEB9: 0A 02                                            // ..

            If (LAnd (LEqual (RP8D, Zero), 
  BEBB: A0 43 04 90 93 52 50 38 44 00                    // .C...RP8D.

LEqual (\_SB.PCI0.RP08.RPAV, One)))
            {
                \_SB.PCI0.RP08.HPME ()

  BEC5: 93 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
  BED5: 52 50 41 56 01 5C 2F 04 5F 53 42 5F 50 43 49 30  // RPAV.\/._SB_PCI0
  BEE5: 52 50 30 38 48 50 4D 45                          // RP08HPME

                Notify (\_SB.PCI0.RP08, 0x02)
            }


  BEED: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
  BEFD: 0A 02                                            // ..

            If (LEqual (\_SB.PCI0.D1F0, One))
            {
                \_SB.PCI0.PEG0.HPME ()
                Notify (\_SB.PCI0.PEG0, 0x02)

  BEFF: A0 4E 04 93 5C 2F 03 5F 53 42 5F 50 43 49 30 44  // .N..\/._SB_PCI0D
  BF0F: 31 46 30 01 5C 2F 04 5F 53 42 5F 50 43 49 30 50  // 1F0.\/._SB_PCI0P
  BF1F: 45 47 30 48 50 4D 45 86 5C 2F 03 5F 53 42 5F 50  // EG0HPME.\/._SB_P
  BF2F: 43 49 30 50 45 47 30 0A 02                       // CI0PEG0..

                Notify (\_SB.PCI0.PEG0.PEGP, 0x02)
            }


  BF38: 86 5C 2F 04 5F 53 42 5F 50 43 49 30 50 45 47 30  // .\/._SB_PCI0PEG0
  BF48: 50 45 47 50 0A 02                                // PEGP..

            If (LEqual (\_SB.PCI0.D1F1, One))
            {
                \_SB.PCI0.PEG1.HPME ()

  BF4E: A0 37 93 5C 2F 03 5F 53 42 5F 50 43 49 30 44 31  // .7.\/._SB_PCI0D1
  BF5E: 46 31 01 5C 2F 04 5F 53 42 5F 50 43 49 30 50 45  // F1.\/._SB_PCI0PE
  BF6E: 47 31 48 50 4D 45                                // G1HPME

                Notify (\_SB.PCI0.PEG1, 0x02)
            }


  BF74: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 50 45 47 31  // .\/._SB_PCI0PEG1
  BF84: 0A 02                                            // ..

            If (LEqual (\_SB.PCI0.D1F2, One))
            {
                \_SB.PCI0.PEG2.HPME ()

  BF86: A0 37 93 5C 2F 03 5F 53 42 5F 50 43 49 30 44 31  // .7.\/._SB_PCI0D1
  BF96: 46 32 01 5C 2F 04 5F 53 42 5F 50 43 49 30 50 45  // F2.\/._SB_PCI0PE
  BFA6: 47 32 48 50 4D 45                                // G2HPME

                Notify (\_SB.PCI0.PEG2, 0x02)
            }
        }


  BFAC: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 50 45 47 32  // .\/._SB_PCI0PEG2
  BFBC: 0A 02                                            // ..

        Method (_L0D, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {

  BFBE: 14 43 13 5F 4C 30 44 00                          // .C._L0D.

            If (LAnd (\_SB.PCI0.EHC1.PMEE, \_SB.PCI0.EHC1.PMES))
            {

  BFC6: A0 3A 90 5C 2F 04 5F 53 42 5F 50 43 49 30 45 48  // .:.\/._SB_PCI0EH
  BFD6: 43 31 50 4D 45 45 5C 2F 04 5F 53 42 5F 50 43 49  // C1PMEE\/._SB_PCI
  BFE6: 30 45 48 43 31 50 4D 45 53                       // 0EHC1PMES

                Notify (\_SB.PCI0.EHC1, 0x02)
            }


  BFEF: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 45 48 43 31  // .\/._SB_PCI0EHC1
  BFFF: 0A 02                                            // ..

            If (LAnd (\_SB.PCI0.EHC2.PMEE, \_SB.PCI0.EHC2.PMES))
            {

  C001: A0 3A 90 5C 2F 04 5F 53 42 5F 50 43 49 30 45 48  // .:.\/._SB_PCI0EH
  C011: 43 32 50 4D 45 45 5C 2F 04 5F 53 42 5F 50 43 49  // C2PMEE\/._SB_PCI
  C021: 30 45 48 43 32 50 4D 45 53                       // 0EHC2PMES

                Notify (\_SB.PCI0.EHC2, 0x02)
            }


  C02A: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 45 48 43 32  // .\/._SB_PCI0EHC2
  C03A: 0A 02                                            // ..

            If (LAnd (\_SB.PCI0.XHC.PMEE, \_SB.PCI0.XHC.PMES))
            {

  C03C: A0 3A 90 5C 2F 04 5F 53 42 5F 50 43 49 30 58 48  // .:.\/._SB_PCI0XH
  C04C: 43 5F 50 4D 45 45 5C 2F 04 5F 53 42 5F 50 43 49  // C_PMEE\/._SB_PCI
  C05C: 30 58 48 43 5F 50 4D 45 53                       // 0XHC_PMES

                Notify (\_SB.PCI0.XHC, 0x02)
            }

  C065: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 58 48 43 5F  // .\/._SB_PCI0XHC_
  C075: 0A 02                                            // ..

            ElseIf
  C077: A1 2D                                            // .-

 (LEqual (\_SB.PCI0.XHC.PMEE, Zero))
            {

  C079: A0 2B 93 5C 2F 04 5F 53 42 5F 50 43 49 30 58 48  // .+.\/._SB_PCI0XH
  C089: 43 5F 50 4D 45 45 00                             // C_PMEE.

                Store (One, \_SB.PCI0.XHC.PMES)
            }


  C090: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 58 48 43  // p.\/._SB_PCI0XHC
  C0A0: 5F 50 4D 45 53                                   // _PMES

            If (LAnd (\_SB.PCI0.HDEF.PMEE, \_SB.PCI0.HDEF.PMES))
            {

  C0A5: A0 3A 90 5C 2F 04 5F 53 42 5F 50 43 49 30 48 44  // .:.\/._SB_PCI0HD
  C0B5: 45 46 50 4D 45 45 5C 2F 04 5F 53 42 5F 50 43 49  // EFPMEE\/._SB_PCI
  C0C5: 30 48 44 45 46 50 4D 45 53                       // 0HDEFPMES

                Notify (\_SB.PCI0.HDEF, 0x02)
            }


  C0CE: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 48 44 45 46  // .\/._SB_PCI0HDEF
  C0DE: 0A 02                                            // ..

            Notify (\_SB.PCI0.GLAN, 0x02)
        }


  C0E0: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 47 4C 41 4E  // .\/._SB_PCI0GLAN
  C0F0: 0A 02                                            // ..

        Method (_L01, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {
            Add (L01C, One, L01C)
            P8XH (Zero, One)
            P8XH (One, L01C)

  C0F2: 14 4C 61 5F 4C 30 31 00 72 4C 30 31 43 01 4C 30  // .La_L01.rL01C.L0
  C102: 31 43 50 38 58 48 00 01 50 38 58 48 01 4C 30 31  // 1CP8XH..P8XH.L01
  C112: 43                                               // C

            If (LAnd (LEqual (RP1D, Zero), \_SB.PCI0.RP01.HPSX))
            {
                Sleep (0x64)

  C113: A0 43 0B 90 93 52 50 31 44 00 5C 2F 04 5F 53 42  // .C...RP1D.\/._SB
  C123: 5F 50 43 49 30 52 50 30 31 48 50 53 58 5B 22 0A  // _PCI0RP01HPSX[".
  C133: 64                                               // d

                If (\_SB.PCI0.RP01.PDCX)
                {
                    Store (One, \_SB.PCI0.RP01.PDCX)
                    Store (One, \_SB.PCI0.RP01.HPSX)

  C134: A0 4B 07 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .K.\/._SB_PCI0RP
  C144: 30 31 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 01PDCXp.\/._SB_P
  C154: 43 49 30 52 50 30 31 50 44 43 58 70 01 5C 2F 04  // CI0RP01PDCXp.\/.
  C164: 5F 53 42 5F 50 43 49 30 52 50 30 31 48 50 53 58  // _SB_PCI0RP01HPSX

                    If (LNot (\_SB.PCI0.RP01.PDSX))
                    {

  C174: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
  C184: 30 31 50 44 53 58                                // 01PDSX

                        Store (Zero, \_SB.PCI0.RP01.L0SE)
                    }


  C18A: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
  C19A: 31 4C 30 53 45                                   // 1L0SE

                    Notify (\_SB.PCI0.RP01, Zero)
                }

  C19F: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 31  // .\/._SB_PCI0RP01
  C1AF: 00                                               // .

                Else
                {

  C1B0: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP01.HPSX)
                }
            }


  C1B2: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
  C1C2: 31 48 50 53 58                                   // 1HPSX

            If (LAnd (LEqual (RP2D, Zero), \_SB.PCI0.RP02.HPSX))
            {
                Sleep (0x64)

  C1C7: A0 43 0B 90 93 52 50 32 44 00 5C 2F 04 5F 53 42  // .C...RP2D.\/._SB
  C1D7: 5F 50 43 49 30 52 50 30 32 48 50 53 58 5B 22 0A  // _PCI0RP02HPSX[".
  C1E7: 64                                               // d

                If (\_SB.PCI0.RP02.PDCX)
                {
                    Store (One, \_SB.PCI0.RP02.PDCX)
                    Store (One, \_SB.PCI0.RP02.HPSX)

  C1E8: A0 4B 07 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .K.\/._SB_PCI0RP
  C1F8: 30 32 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 02PDCXp.\/._SB_P
  C208: 43 49 30 52 50 30 32 50 44 43 58 70 01 5C 2F 04  // CI0RP02PDCXp.\/.
  C218: 5F 53 42 5F 50 43 49 30 52 50 30 32 48 50 53 58  // _SB_PCI0RP02HPSX

                    If (LNot (\_SB.PCI0.RP02.PDSX))
                    {

  C228: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
  C238: 30 32 50 44 53 58                                // 02PDSX

                        Store (Zero, \_SB.PCI0.RP02.L0SE)
                    }


  C23E: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
  C24E: 32 4C 30 53 45                                   // 2L0SE

                    Notify (\_SB.PCI0.RP02, Zero)
                }

  C253: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 32  // .\/._SB_PCI0RP02
  C263: 00                                               // .

                Else
                {

  C264: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP02.HPSX)
                }
            }


  C266: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
  C276: 32 48 50 53 58                                   // 2HPSX

            If (LAnd (LEqual (RP3D, Zero), \_SB.PCI0.RP03.HPSX))
            {

  C27B: A0 41 0E 90 93 52 50 33 44 00 5C 2F 04 5F 53 42  // .A...RP3D.\/._SB
  C28B: 5F 50 43 49 30 52 50 30 33 48 50 53 58           // _PCI0RP03HPSX

                If (LAnd (
  C298: A0 1A 90 92                                      // ....

LNotEqual (BID, BICO), 
  C29C: 93 42 49 44 5F 42 49 43 4F                       // .BID_BICO


  C2A5: 92                                               // .

LNotEqual (BID, BICC)))
                {

  C2A6: 93 42 49 44 5F 42 49 43 43                       // .BID_BICC

                    Sleep (0x64)
                }


  C2AF: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP03.PDCX)
                {
                    Store (One, \_SB.PCI0.RP03.PDCX)
                    Store (One, \_SB.PCI0.RP03.HPSX)

  C2B3: A0 42 09 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .B.\/._SB_PCI0RP
  C2C3: 30 33 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 03PDCXp.\/._SB_P
  C2D3: 43 49 30 52 50 30 33 50 44 43 58 70 01 5C 2F 04  // CI0RP03PDCXp.\/.
  C2E3: 5F 53 42 5F 50 43 49 30 52 50 30 33 48 50 53 58  // _SB_PCI0RP03HPSX

                    If (LNot (\_SB.PCI0.RP03.PDSX))
                    {

  C2F3: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
  C303: 30 33 50 44 53 58                                // 03PDSX

                        Store (Zero, \_SB.PCI0.RP03.L0SE)
                    }


  C309: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
  C319: 33 4C 30 53 45                                   // 3L0SE

                    If (LAnd (
  C31E: A0 27 90 92                                      // .'..

LNotEqual (BID, BICO), 
  C322: 93 42 49 44 5F 42 49 43 4F                       // .BID_BICO


  C32B: 92                                               // .

LNotEqual (BID, BICC)))
                    {

  C32C: 93 42 49 44 5F 42 49 43 43                       // .BID_BICC

                        Notify (\_SB.PCI0.RP03, Zero)
                    }
                }

  C335: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 33  // .\/._SB_PCI0RP03
  C345: 00                                               // .

                Else
                {

  C346: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP03.HPSX)
                }
            }


  C348: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
  C358: 33 48 50 53 58                                   // 3HPSX

            If (LAnd (LEqual (RP4D, Zero), \_SB.PCI0.RP04.HPSX))
            {
                Sleep (0x64)

  C35D: A0 43 0B 90 93 52 50 34 44 00 5C 2F 04 5F 53 42  // .C...RP4D.\/._SB
  C36D: 5F 50 43 49 30 52 50 30 34 48 50 53 58 5B 22 0A  // _PCI0RP04HPSX[".
  C37D: 64                                               // d

                If (\_SB.PCI0.RP04.PDCX)
                {
                    Store (One, \_SB.PCI0.RP04.PDCX)
                    Store (One, \_SB.PCI0.RP04.HPSX)

  C37E: A0 4B 07 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .K.\/._SB_PCI0RP
  C38E: 30 34 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 04PDCXp.\/._SB_P
  C39E: 43 49 30 52 50 30 34 50 44 43 58 70 01 5C 2F 04  // CI0RP04PDCXp.\/.
  C3AE: 5F 53 42 5F 50 43 49 30 52 50 30 34 48 50 53 58  // _SB_PCI0RP04HPSX

                    If (LNot (\_SB.PCI0.RP04.PDSX))
                    {

  C3BE: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
  C3CE: 30 34 50 44 53 58                                // 04PDSX

                        Store (Zero, \_SB.PCI0.RP04.L0SE)
                    }


  C3D4: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
  C3E4: 34 4C 30 53 45                                   // 4L0SE

                    Notify (\_SB.PCI0.RP04, Zero)
                }

  C3E9: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 34  // .\/._SB_PCI0RP04
  C3F9: 00                                               // .

                Else
                {

  C3FA: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP04.HPSX)
                }
            }


  C3FC: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
  C40C: 34 48 50 53 58                                   // 4HPSX

            If (LAnd (LEqual (RP5D, Zero), \_SB.PCI0.RP05.HPSX))
            {

  C411: A0 41 0E 90 93 52 50 35 44 00 5C 2F 04 5F 53 42  // .A...RP5D.\/._SB
  C421: 5F 50 43 49 30 52 50 30 35 48 50 53 58           // _PCI0RP05HPSX

                If (LAnd (
  C42E: A0 1A 90 92                                      // ....

LNotEqual (BID, BICO), 
  C432: 93 42 49 44 5F 42 49 43 4F                       // .BID_BICO


  C43B: 92                                               // .

LNotEqual (BID, BICC)))
                {

  C43C: 93 42 49 44 5F 42 49 43 43                       // .BID_BICC

                    Sleep (0x64)
                }


  C445: 5B 22 0A 64                                      // [".d

                If (\_SB.PCI0.RP05.PDCX)
                {
                    Store (One, \_SB.PCI0.RP05.PDCX)
                    Store (One, \_SB.PCI0.RP05.HPSX)

  C449: A0 42 09 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .B.\/._SB_PCI0RP
  C459: 30 35 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 05PDCXp.\/._SB_P
  C469: 43 49 30 52 50 30 35 50 44 43 58 70 01 5C 2F 04  // CI0RP05PDCXp.\/.
  C479: 5F 53 42 5F 50 43 49 30 52 50 30 35 48 50 53 58  // _SB_PCI0RP05HPSX

                    If (LNot (\_SB.PCI0.RP05.PDSX))
                    {

  C489: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
  C499: 30 35 50 44 53 58                                // 05PDSX

                        Store (Zero, \_SB.PCI0.RP05.L0SE)
                    }


  C49F: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
  C4AF: 35 4C 30 53 45                                   // 5L0SE

                    If (LAnd (
  C4B4: A0 27 90 92                                      // .'..

LNotEqual (BID, BICO), 
  C4B8: 93 42 49 44 5F 42 49 43 4F                       // .BID_BICO


  C4C1: 92                                               // .

LNotEqual (BID, BICC)))
                    {

  C4C2: 93 42 49 44 5F 42 49 43 43                       // .BID_BICC

                        Notify (\_SB.PCI0.RP05, Zero)
                    }
                }

  C4CB: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 35  // .\/._SB_PCI0RP05
  C4DB: 00                                               // .

                Else
                {

  C4DC: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP05.HPSX)
                }
            }


  C4DE: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
  C4EE: 35 48 50 53 58                                   // 5HPSX

            If (LAnd (LEqual (RP6D, Zero), \_SB.PCI0.RP06.HPSX))
            {
                Sleep (0x64)

  C4F3: A0 43 0B 90 93 52 50 36 44 00 5C 2F 04 5F 53 42  // .C...RP6D.\/._SB
  C503: 5F 50 43 49 30 52 50 30 36 48 50 53 58 5B 22 0A  // _PCI0RP06HPSX[".
  C513: 64                                               // d

                If (\_SB.PCI0.RP06.PDCX)
                {
                    Store (One, \_SB.PCI0.RP06.PDCX)
                    Store (One, \_SB.PCI0.RP06.HPSX)

  C514: A0 4B 07 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .K.\/._SB_PCI0RP
  C524: 30 36 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 06PDCXp.\/._SB_P
  C534: 43 49 30 52 50 30 36 50 44 43 58 70 01 5C 2F 04  // CI0RP06PDCXp.\/.
  C544: 5F 53 42 5F 50 43 49 30 52 50 30 36 48 50 53 58  // _SB_PCI0RP06HPSX

                    If (LNot (\_SB.PCI0.RP06.PDSX))
                    {

  C554: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
  C564: 30 36 50 44 53 58                                // 06PDSX

                        Store (Zero, \_SB.PCI0.RP06.L0SE)
                    }


  C56A: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
  C57A: 36 4C 30 53 45                                   // 6L0SE

                    Notify (\_SB.PCI0.RP06, Zero)
                }

  C57F: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 36  // .\/._SB_PCI0RP06
  C58F: 00                                               // .

                Else
                {

  C590: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP06.HPSX)
                }
            }


  C592: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
  C5A2: 36 48 50 53 58                                   // 6HPSX

            If (LAnd (LEqual (RP7D, Zero), \_SB.PCI0.RP07.HPSX))
            {
                Sleep (0x64)

  C5A7: A0 43 0B 90 93 52 50 37 44 00 5C 2F 04 5F 53 42  // .C...RP7D.\/._SB
  C5B7: 5F 50 43 49 30 52 50 30 37 48 50 53 58 5B 22 0A  // _PCI0RP07HPSX[".
  C5C7: 64                                               // d

                If (\_SB.PCI0.RP07.PDCX)
                {
                    Store (One, \_SB.PCI0.RP07.PDCX)
                    Store (One, \_SB.PCI0.RP07.HPSX)

  C5C8: A0 4B 07 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .K.\/._SB_PCI0RP
  C5D8: 30 37 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 07PDCXp.\/._SB_P
  C5E8: 43 49 30 52 50 30 37 50 44 43 58 70 01 5C 2F 04  // CI0RP07PDCXp.\/.
  C5F8: 5F 53 42 5F 50 43 49 30 52 50 30 37 48 50 53 58  // _SB_PCI0RP07HPSX

                    If (LNot (\_SB.PCI0.RP07.PDSX))
                    {

  C608: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
  C618: 30 37 50 44 53 58                                // 07PDSX

                        Store (Zero, \_SB.PCI0.RP07.L0SE)
                    }


  C61E: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
  C62E: 37 4C 30 53 45                                   // 7L0SE

                    Notify (\_SB.PCI0.RP07, Zero)
                }

  C633: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 37  // .\/._SB_PCI0RP07
  C643: 00                                               // .

                Else
                {

  C644: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP07.HPSX)
                }
            }


  C646: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
  C656: 37 48 50 53 58                                   // 7HPSX

            If (LAnd (LEqual (RP8D, Zero), \_SB.PCI0.RP08.HPSX))
            {
                Sleep (0x64)

  C65B: A0 43 0B 90 93 52 50 38 44 00 5C 2F 04 5F 53 42  // .C...RP8D.\/._SB
  C66B: 5F 50 43 49 30 52 50 30 38 48 50 53 58 5B 22 0A  // _PCI0RP08HPSX[".
  C67B: 64                                               // d

                If (\_SB.PCI0.RP08.PDCX)
                {
                    Store (One, \_SB.PCI0.RP08.PDCX)
                    Store (One, \_SB.PCI0.RP08.HPSX)

  C67C: A0 4B 07 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .K.\/._SB_PCI0RP
  C68C: 30 38 50 44 43 58 70 01 5C 2F 04 5F 53 42 5F 50  // 08PDCXp.\/._SB_P
  C69C: 43 49 30 52 50 30 38 50 44 43 58 70 01 5C 2F 04  // CI0RP08PDCXp.\/.
  C6AC: 5F 53 42 5F 50 43 49 30 52 50 30 38 48 50 53 58  // _SB_PCI0RP08HPSX

                    If (LNot (\_SB.PCI0.RP08.PDSX))
                    {

  C6BC: A0 2A 92 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50  // .*.\/._SB_PCI0RP
  C6CC: 30 38 50 44 53 58                                // 08PDSX

                        Store (Zero, \_SB.PCI0.RP08.L0SE)
                    }


  C6D2: 70 00 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
  C6E2: 38 4C 30 53 45                                   // 8L0SE

                    Notify (\_SB.PCI0.RP08, Zero)
                }

  C6E7: 86 5C 2F 03 5F 53 42 5F 50 43 49 30 52 50 30 38  // .\/._SB_PCI0RP08
  C6F7: 00                                               // .

                Else
                {

  C6F8: A1 16                                            // ..

                    Store (One, \_SB.PCI0.RP08.HPSX)
                }
            }
        }


  C6FA: 70 01 5C 2F 04 5F 53 42 5F 50 43 49 30 52 50 30  // p.\/._SB_PCI0RP0
  C70A: 38 48 50 53 58                                   // 8HPSX

        Method (_L02, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {
            Store (Zero, GPEC)

  C70F: 14 4A 06 5F 4C 30 32 00 70 00 47 50 45 43        // .J._L02.p.GPEC

            If (CondRefOf (DTSE))
            {

  C71D: A0 11 5B 12 44 54 53 45 00                       // ..[.DTSE.

                If (
  C726: A0 08                                            // ..


  C728: 92                                               // .

LGreaterEqual (DTSE, One)){}
            }


  C729: 95 44 54 53 45 01                                // .DTSE.

            If (CondRefOf (\_SB.PCCD.PENB))
            {

  C72F: A0 33 5B 12 5C 2F 03 5F 53 42 5F 50 43 43 44 50  // .3[.\/._SB_PCCDP
  C73F: 45 4E 42 00                                      // ENB.

                If (LEqual (\_SB.PCCD.PENB, One))
                {

  C743: A0 1F 93 5C 2F 03 5F 53 42 5F 50 43 43 44 50 45  // ...\/._SB_PCCDPE
  C753: 4E 42 01                                         // NB.

                    Notify (\_SB.PCCD, 0x80)
                }
            }


  C756: 86 5C 2E 5F 53 42 5F 50 43 43 44 0A 80           // .\._SB_PCCD..

            If (LEqual (\_SB.AC.IGNR, Zero))
            {
                PNOT ()
            }
        }


  C763: A0 16 93 5C 2F 03 5F 53 42 5F 41 43 5F 5F 49 47  // ...\/._SB_AC__IG
  C773: 4E 52 00 50 4E 4F 54                             // NR.PNOT

        Method (_L06, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {

  C77A: 14 34 5F 4C 30 36 00                             // .4_L06.

            If (LAnd (\_SB.PCI0.GFX0.GSSE, 
  C781: A0 2D 90 5C 2F 04 5F 53 42 5F 50 43 49 30 47 46  // .-.\/._SB_PCI0GF
  C791: 58 30 47 53 53 45                                // X0GSSE

LNot (GSMI)))
            {
                \_SB.PCI0.GFX0.GSCI ()
            }
        }


  C797: 92 47 53 4D 49 5C 2F 04 5F 53 42 5F 50 43 49 30  // .GSMI\/._SB_PCI0
  C7A7: 47 46 58 30 47 53 43 49                          // GFX0GSCI

        Method (_L07, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {

  C7AF: 14 1C 5F 4C 30 37 00                             // .._L07.

            Store (0x20, \_SB.PCI0.SBUS.HSTS)
        }


  C7B6: 70 0A 20 5C 2F 04 5F 53 42 5F 50 43 49 30 53 42  // p. \/._SB_PCI0SB
  C7C6: 55 53 48 53 54 53                                // USHSTS

        Method (_L08, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
        {

  C7CC: 14 4F 06 5F 4C 30 38 00                          // .O._L08.

            If (\_SB.PCI0.LPCB.EC.ECOK)
            {

  C7D4: A0 47 06 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50  // .G.\/._SB_PCI0LP
  C7E4: 43 42 45 43 5F 5F 45 43 4F 4B                    // CBEC__ECOK

                If (LEqual (\_SB.PCI0.LPCB.EC.WFNO, One))
                {

  C7EE: A0 4D 04 93 5C 2F 05 5F 53 42 5F 50 43 49 30 4C  // .M..\/._SB_PCI0L
  C7FE: 50 43 42 45 43 5F 5F 57 46 4E 4F 01              // PCBEC__WFNO.

                    If (LEqual (And (OEMF, 0x0400), Zero))
                    {

  C80A: A0 24 93 7B 4F 45 4D 46 0B 00 04 00 00           // .$.{OEMF.....

                        Store (LIDS, \_SB.PCI0.GFX0.CLID)
                    }


  C817: 70 4C 49 44 53 5C 2F 04 5F 53 42 5F 50 43 49 30  // pLIDS\/._SB_PCI0
  C827: 47 46 58 30 43 4C 49 44                          // GFX0CLID

                    Notify (\_SB.LID0, 0x80)
                }
            }
        }
    }


  C82F: 86 5C 2E 5F 53 42 5F 4C 49 44 30 0A 80           // .\._SB_LID0..

    Scope (_TZ)
    {

  C83C: 10 4E 0A 5F 54 5A 5F                             // .N._TZ_

        Name (DETP, 0x37)

  C843: 08 44 45 54 50 0A 37                             // .DETP.7

        Name (PATP, 0x5A)

  C84A: 08 50 41 54 50 0A 5A                             // .PATP.Z

        Name (CRTP, 0x9B)

  C851: 08 43 52 54 50 0A 9B                             // .CRTP..

        ThermalZone (TZ0)
        {

  C858: 5B 85 41 09 54 5A 30 5F                          // [.A.TZ0_

            Name (PPFG, Zero)

  C860: 08 50 50 46 47 00                                // .PPFG.

            Method (_TMP, 0, Serialized)  // _TMP: Temperature
            {

  C866: 14 42 05 5F 54 4D 50 08                          // .B._TMP.

                If (\_SB.PCI0.LPCB.EC.ECOK)
                {
                    Store (\_SB.PCI0.LPCB.EC.TMP, Local0)

  C86E: A0 3C 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43  // .<\/._SB_PCI0LPC
  C87E: 42 45 43 5F 5F 45 43 4F 4B 70 5C 2F 05 5F 53 42  // BEC__ECOKp\/._SB
  C88E: 5F 50 43 49 30 4C 50 43 42 45 43 5F 5F 54 4D 50  // _PCI0LPCBEC__TMP
  C89E: 5F 60                                            // _`

                    Return (
  C8A0: A4                                               // .

Add (Multiply (Local0, 0x0A), 0x0AAC))
                }


  C8A1: 72 77 60 0A 0A 00 0B AC 0A 00                    // rw`.......

                Return (
  C8AB: A4                                               // .

Add (Multiply (DETP, 0x0A), 0x0AAC))
            }


  C8AC: 72 77 44 45 54 50 0A 0A 00 0B AC 0A 00           // rwDETP.......

            Method (_CRT, 0, Serialized)  // _CRT: Critical Temperature
            {

  C8B9: 14 31 5F 43 52 54 08                             // .1_CRT.

                If (\_SB.PCI0.LPCB.EC.ECOK)
                {

  C8C0: A0 1C 5C 2F 05 5F 53 42 5F 50 43 49 30 4C 50 43  // ..\/._SB_PCI0LPC
  C8D0: 42 45 43 5F 5F 45 43 4F 4B                       // BEC__ECOK

                    Return (0x0F5C)
                }


  C8D9: A4 0B 5C 0F                                      // ..\.

                Return (
  C8DD: A4                                               // .

Add (Multiply (CRTP, 0x0A), 0x0AAC))
            }
        }
    }


  C8DE: 72 77 43 52 54 50 0A 0A 00 0B AC 0A 00           // rwCRTP.......

    Scope (_SB)
    {

  C8EB: 10 32 5F 53 42 5F                                // .2_SB_

        Device (CAI)
        {

  C8F1: 5B 82 2B 43 41 49 5F                             // [.+CAI_

            Name (_HID, EisaId ("PNPC000"))  // _HID: Hardware ID

  C8F8: 08 5F 48 49 44 0C 41 D0 C0 00                    // ._HID.A...

            Name (_UID, One)  // _UID: Unique ID

  C902: 08 5F 55 49 44 01                                // ._UID.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  C908: 14 15 5F 53 54 41 00                             // .._STA.

                If (LLess (OSYS, 0x07DC))
                {

  C90F: A0 0B 95 4F 53 59 53 0B DC 07                    // ...OSYS...

                    Return (Zero)
                }


  C919: A4 00                                            // ..

                Return (0x0F)
            }
        }
    }


  C91B: A4 0A 0F                                         // ...

    Scope (_SB.PCI0.RP05)
    {

  C91E: 10 45 06 2F 03 5F 53 42 5F 50 43 49 30 52 50 30  // .E./._SB_PCI0RP0
  C92E: 35                                               // 5

        Device (RLAN)
        {

  C92F: 5B 82 43 05 52 4C 41 4E                          // [.C.RLAN

            Name (_ADR, 0x02)  // _ADR: Address

  C937: 08 5F 41 44 52 0A 02                             // ._ADR..

            Name (_PRW, 
  C93E: 08 5F 50 52 57                                   // ._PRW

Package (0x02)  // _PRW: Power Resources for Wake
            {
                0x09, 
                0x04
            })

  C943: 12 06 02 0A 09 0A 04                             // .......

            OperationRegion (PCFG, PCI_Config, Zero, 0xFF)

  C94A: 5B 80 50 43 46 47 02 00 0A FF                    // [.PCFG....

            Field (PCFG, ByteAcc, NoLock, Preserve)
            {
                DVID,   32, 
                Offset (0x2C), 
                SSID,   32
            }


  C954: 5B 81 13 50 43 46 47 01 44 56 49 44 20 00 40 14  // [..PCFG.DVID .@.
  C964: 53 53 49 44 20                                   // SSID 

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  C969: 14 1A 5F 53 54 41 00                             // .._STA.

                If (
  C970: A0 0F 92                                         // ...

LNotEqual (DVID, 0xFFFFFFFF))
                {

  C973: 93 44 56 49 44 0C FF FF FF FF                    // .DVID.....

                    Return (0x0A)
                }

  C97D: A4 0A 0A                                         // ...

                Else
                {

  C980: A1 03                                            // ..

                    Return (Zero)
                }
            }
        }
    }


  C982: A4 00                                            // ..

    Device (_SB.TPM)
    {

  C984: 5B 82 42 15 2E 5F 53 42 5F 54 50 4D 5F           // [.B.._SB_TPM_

        Method (_HID, 0, NotSerialized)  // _HID: Hardware ID
        {

  C991: 14 2F 5F 48 49 44 00                             // ./_HID.

            If (TCMF)
            {

  C998: A0 0B 54 43 4D 46                                // ..TCMF

                Return (0x01013469)
            }

  C99E: A4 0C 69 34 01 01                                // ..i4..

            ElseIf
  C9A4: A1 1C                                            // ..

 (LEqual (TTDP, Zero))
            {

  C9A6: A0 0D 93 54 54 44 50 00                          // ...TTDP.

                Return (0x310CD041)
            }

  C9AE: A4 0C 41 D0 0C 31                                // ..A..1

            Else
            {

  C9B4: A1 0C                                            // ..

                Return ("MSFT0101")
            }
        }


  C9B6: A4 0D 4D 53 46 54 30 31 30 31 00                 // ..MSFT0101.

        Method (_STR, 0, NotSerialized)  // _STR: Description String
        {

  C9C1: 14 47 05 5F 53 54 52 00                          // .G._STR.

            If (LEqual (TTDP, Zero))
            {

  C9C9: A0 2A 93 54 54 44 50 00                          // .*.TTDP.

                Return (
  C9D1: A4                                               // .

Unicode ("TPM 1.2 Device"))
            }

  C9D2: 11 21 0A 1E 54 00 50 00 4D 00 20 00 31 00 2E 00  // .!..T.P.M. .1...
  C9E2: 32 00 20 00 44 00 65 00 76 00 69 00 63 00 65 00  // 2. .D.e.v.i.c.e.
  C9F2: 00 00                                            // ..

            Else
            {

  C9F4: A1 24                                            // .$

                Return (
  C9F6: A4                                               // .

Unicode ("TPM 2.0 Device"))
            }
        }


  C9F7: 11 21 0A 1E 54 00 50 00 4D 00 20 00 32 00 2E 00  // .!..T.P.M. .2...
  CA07: 30 00 20 00 44 00 65 00 76 00 69 00 63 00 65 00  // 0. .D.e.v.i.c.e.
  CA17: 00 00                                            // ..

        Name (_UID, One)  // _UID: Unique ID

  CA19: 08 5F 55 49 44 01                                // ._UID.

        Name (CRST, 
  CA1F: 08 43 52 53 54                                   // .CRST

ResourceTemplate ()
        {
            Memory32Fixed (ReadOnly,
                0xFED40000,         // Address Base
                0x00005000,         // Address Length
                _Y36)
        })

  CA24: 11 11 0A 0E 86 09 00 00 00 00 D4 FE 00 50 00 00  // .............P..
  CA34: 79 00                                            // y.

        OperationRegion (TMMB, SystemMemory, 0xFED40000, 0x5000)

  CA36: 5B 80 54 4D 4D 42 00 0C 00 00 D4 FE 0B 00 50     // [.TMMB........P

        Field (TMMB, ByteAcc, Lock, Preserve)
        {
            ACCS,   8, 
            Offset (0x18), 
            TSTA,   8, 
            TBCA,   8, 
            Offset (0xF00), 
            TVID,   16, 
            TDID,   16
        }


  CA45: 5B 81 26 54 4D 4D 42 11 41 43 43 53 08 00 48 0B  // [.&TMMB.ACCS..H.
  CA55: 54 53 54 41 08 54 42 43 41 08 00 80 73 07 54 56  // TSTA.TBCA...s.TV
  CA65: 49 44 10 54 44 49 44 10                          // ID.TDID.

        Method (_STA, 0, NotSerialized)  // _STA: Status
        {

  CA6D: 14 2E 5F 53 54 41 00                             // .._STA.

            If (LEqual (TTDP, Zero))
            {

  CA74: A0 12 93 54 54 44 50 00                          // ...TTDP.

                If (TPMF)
                {

  CA7C: A0 08 54 50 4D 46                                // ..TPMF

                    Return (0x0F)
                }


  CA82: A4 0A 0F                                         // ...

                Return (Zero)
            }

  CA85: A4 00                                            // ..

            ElseIf
  CA87: A1 12                                            // ..

 (LEqual (TTDP, One))
            {

  CA89: A0 10 93 54 54 44 50 01                          // ...TTDP.

                If (TTPF)
                {

  CA91: A0 08 54 54 50 46                                // ..TTPF

                    Return (0x0F)
                }
            }


  CA97: A4 0A 0F                                         // ...

            Return (Zero)
        }


  CA9A: A4 00                                            // ..

        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
        {

  CA9C: 14 3B 5F 43 52 53 08                             // .;_CRS.

            If (LEqual (TTPF, One))
            {

  CAA3: A0 2F 93 54 54 50 46 01                          // ./.TTPF.

                CreateDWordField (CRST, \_SB.TPM._Y36._BAS, MTFD)  // _BAS: Base Address

  CAAB: 8A 43 52 53 54 0A 04 4D 54 46 44                 // .CRST..MTFD

                CreateDWordField (CRST, \_SB.TPM._Y36._LEN, LTFD)  // _LEN: Length
                Store (0xFED40000, MTFD)

  CAB6: 8A 43 52 53 54 0A 08 4C 54 46 44 70 0C 00 00 D4  // .CRST..LTFDp....
  CAC6: FE 4D 54 46 44                                   // .MTFD

                Store (0x5000, LTFD)
            }


  CACB: 70 0B 00 50 4C 54 46 44                          // p..PLTFD

            Return (CRST)
        }
    }


  CAD3: A4 43 52 53 54                                   // .CRST

    Scope (_SB)
    {

  CAD8: 10 4B 54 5F 53 42 5F                             // .KT_SB_

        Device (FTPM)
        {

  CADF: 5B 82 43 54 46 54 50 4D                          // [.CTFTPM

            Name (_HID, "MSFT0101")  // _HID: Hardware ID

  CAE7: 08 5F 48 49 44 0D 4D 53 46 54 30 31 30 31 00     // ._HID.MSFT0101.

            Name (_STR, 
  CAF6: 08 5F 53 54 52                                   // ._STR

Unicode ("TPM 2.0 Device"))  // _STR: Description String

  CAFB: 11 21 0A 1E 54 00 50 00 4D 00 20 00 32 00 2E 00  // .!..T.P.M. .2...
  CB0B: 30 00 20 00 44 00 65 00 76 00 69 00 63 00 65 00  // 0. .D.e.v.i.c.e.
  CB1B: 00 00                                            // ..

            Name (_CRS, 
  CB1D: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                Memory32Fixed (ReadOnly,
                    0xFED70000,         // Address Base
                    0x00001000,         // Address Length
                    )
            })

  CB22: 11 11 0A 0E 86 09 00 00 00 00 D7 FE 00 10 00 00  // ................
  CB32: 79 00                                            // y.

            OperationRegion (TPMR, SystemMemory, 0xFED70000, 0x1000)

  CB34: 5B 80 54 50 4D 52 00 0C 00 00 D7 FE 0B 00 10     // [.TPMR.........

            Field (TPMR, AnyAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                FERR,   32, 
                Offset (0x0C), 
                BEGN,   32
            }


  CB43: 5B 81 14 54 50 4D 52 00 00 20 46 45 52 52 20 00  // [..TPMR.. FERR .
  CB53: 20 42 45 47 4E 20                                //  BEGN 

            OperationRegion (CRBD, SystemMemory, 0xFED70000, 0x1000)

  CB59: 5B 80 43 52 42 44 00 0C 00 00 D7 FE 0B 00 10     // [.CRBD.........

            Field (CRBD, AnyAcc, NoLock, Preserve)
            {
                Offset (0x04), 
                HERR,   32, 
                Offset (0x40), 
                HCMD,   32, 
                HSTS,   32
            }


  CB68: 5B 81 1A 43 52 42 44 00 00 20 48 45 52 52 20 00  // [..CRBD.. HERR .
  CB78: 40 1C 48 43 4D 44 20 48 53 54 53 20              // @.HCMD HSTS 

            OperationRegion (ASMI, SystemIO, SMIA, One)

  CB84: 5B 80 41 53 4D 49 01 53 4D 49 41 01              // [.ASMI.SMIA.

            Field (ASMI, ByteAcc, NoLock, Preserve)
            {
                INQ,    8
            }


  CB90: 5B 81 0B 41 53 4D 49 01 49 4E 51 5F 08           // [..ASMI.INQ_.

            OperationRegion (BSMI, SystemIO, SMIB, One)

  CB9D: 5B 80 42 53 4D 49 01 53 4D 49 42 01              // [.BSMI.SMIB.

            Field (BSMI, ByteAcc, NoLock, Preserve)
            {
                DAT,    8
            }


  CBA9: 5B 81 0B 42 53 4D 49 01 44 41 54 5F 08           // [..BSMI.DAT_.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  CBB6: 14 1B 5F 53 54 41 00                             // .._STA.

                If (LEqual (TTDP, One))
                {

  CBBD: A0 12 93 54 54 44 50 01                          // ...TTDP.

                    If (LEqual (TTPF, Zero))
                    {

  CBC5: A0 0A 93 54 54 50 46 00                          // ...TTPF.

                        Return (0x0F)
                    }
                }


  CBCD: A4 0A 0F                                         // ...

                Return (Zero)
            }


  CBD0: A4 00                                            // ..

            Method (STRT, 3, Serialized)
            {

  CBD2: 14 4F 05 53 54 52 54 0B                          // .O.STRT.


  CBDA: 08 5F 54 5F 30 00                                // ._T_0.

                Switch (ToInteger (Arg1))
                {

  CBE0: A2 4F 04 01 70 99 69 00 5F 54 5F 30              // .O..p.i._T_0

                    Case (Zero)
                    {

  CBEC: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                        Return (
  CBF4: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

  CBF5: 11 03 01 03                                      // ....

                    Case
  CBF9: A1 35                                            // .5

 (One)
                    {

  CBFB: A0 33 93 5F 54 5F 30 01                          // .3._T_0.

                        If (LEqual (Or (And (HSTS, 0x02), And (HSTS, One)), 0x03))
                        {

  CC03: A0 1B 93 7D 7B 48 53 54 53 0A 02 00 7B 48 53 54  // ...}{HSTS...{HST
  CC13: 53 01 00 00 0A 03                                // S.....

                            Store (One, HCMD)
                        }

  CC19: 70 01 48 43 4D 44                                // p.HCMD

                        Else
                        {
                            Store (One, FERR)

  CC1F: A1 0D 70 01 46 45 52 52                          // ..p.FERR

                            Store (Zero, BEGN)
                        }


  CC27: 70 00 42 45 47 4E                                // p.BEGN

                        Return (Zero)
                    }


  CC2D: A4 00                                            // ..

                }


  CC2F: A5                                               // .

                Return (Zero)
            }


  CC30: A4 00                                            // ..

            Method (CRYF, 3, Serialized)
            {

  CC32: 14 49 04 43 52 59 46 0B                          // .I.CRYF.


  CC3A: 08 5F 54 5F 30 00                                // ._T_0.

                Switch (ToInteger (Arg1))
                {

  CC40: A2 36 01 70 99 69 00 5F 54 5F 30                 // .6.p.i._T_0

                    Case (Zero)
                    {

  CC4B: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                        Return (
  CC53: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

  CC54: 11 03 01 03                                      // ....

                    Case
  CC58: A1 1D                                            // ..

 (One)
                    {

  CC5A: A0 1B 93 5F 54 5F 30 01                          // ..._T_0.

                        Name (TPMV, 
  CC62: 08 54 50 4D 56                                   // .TPMV

Package (0x02)
                        {
                            One, 

  CC67: 12 09 02 01                                      // ....

                            Package (0x02)
                            {
                                One, 
                                0x20
                            }
                        })

  CC6B: 12 05 02 01 0A 20                                // ..... 

                        Return (TPMV)
                    }


  CC71: A4 54 50 4D 56                                   // .TPMV

                }


  CC76: A5                                               // .

                Return (
  CC77: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }


  CC78: 11 03 01 00                                      // ....

            Method (PPIR, 3, Serialized)
            {

  CC7C: 14 40 29 50 50 49 52 0B                          // .@)PPIR.


  CC84: 08 5F 54 5F 30 00                                // ._T_0.

                Switch (ToInteger (Arg1))
                {

  CC8A: A2 42 28 01 70 99 69 00 5F 54 5F 30              // .B(.p.i._T_0

                    Case (Zero)
                    {

  CC96: A0 0E 93 5F 54 5F 30 00                          // ..._T_0.

                        Return (
  CC9E: A4                                               // .

Buffer (0x02)
                        {
                             0xFF, 0x01                                     
                        })
                    }

  CC9F: 11 05 0A 02 FF 01                                // ......

                    Case
  CCA5: A1 46 26                                         // .F&

 (One)
                    {

  CCA8: A0 0D 93 5F 54 5F 30 01                          // ..._T_0.

                        Return ("1.2")
                    }

  CCB0: A4 0D 31 2E 32 00                                // ..1.2.

                    Case
  CCB6: A1 45 25                                         // .E%

 (0x02)
                    {
                        ToInteger (DerefOf (
  CCB9: A0 43 06 93 5F 54 5F 30 0A 02 99 83              // .C.._T_0....

Index (Arg2, Zero)), TMF2)
                        Store (0x12, TMF1)
                        Store (TMF1, DAT)
                        Store (OFST, INQ)

  CCC5: 88 6A 00 00 54 4D 46 32 70 0A 12 54 4D 46 31 70  // .j..TMF2p..TMF1p
  CCD5: 54 4D 46 31 44 41 54 5F 70 4F 46 53 54 49 4E 51  // TMF1DAT_pOFSTINQ
  CCE5: 5F                                               // _

                        If (LEqual (DAT, 0xFF))
                        {

  CCE6: A0 0B 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (0x02)
                        }

                        Store (TMF2, DAT)
                        Store (OFST, INQ)

  CCEF: A4 0A 02 70 54 4D 46 32 44 41 54 5F 70 4F 46 53  // ...pTMF2DAT_pOFS
  CCFF: 54 49 4E 51 5F                                   // TINQ_

                        If (LEqual (DAT, 0xFF))
                        {

  CD04: A0 0B 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (0x02)
                        }


  CD0D: A4 0A 02                                         // ...

                        If (LEqual (DAT, 0xF1))
                        {

  CD10: A0 0A 93 44 41 54 5F 0A F1                       // ...DAT_..

                            Return (One)
                        }


  CD19: A4 01                                            // ..

                        Return (Zero)
                    }

  CD1B: A4 00                                            // ..

                    Case
  CD1D: A1 4E 1E                                         // .N.

 (0x03)
                    {

  CD20: A0 3E 93 5F 54 5F 30 0A 03                       // .>._T_0..

                        Name (PPI1, 
  CD29: 08 50 50 49 31                                   // .PPI1

Package (0x02)
                        {
                            Zero, 
                            Zero
                        })
                        Store (0x11, DAT)
                        Store (OFST, INQ)

  CD2E: 12 04 02 00 00 70 0A 11 44 41 54 5F 70 4F 46 53  // .....p..DAT_pOFS
  CD3E: 54 49 4E 51 5F                                   // TINQ_

                        If (LEqual (DAT, 0xFF))
                        {

  CD43: A0 0A 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (One)
                        }

                        Store (DAT, 
  CD4C: A4 01 70 44 41 54 5F                             // ..pDAT_

Index (PPI1, One))

  CD53: 88 50 50 49 31 01 00                             // .PPI1..

                        Return (PPI1)
                    }

  CD5A: A4 50 50 49 31                                   // .PPI1

                    Case
  CD5F: A1 4C 1A                                         // .L.

 (0x04)
                    {

  CD62: A0 0D 93 5F 54 5F 30 0A 04                       // ..._T_0..

                        Return (TRST)
                    }

  CD6B: A4 54 52 53 54                                   // .TRST

                    Case
  CD70: A1 4B 19                                         // .K.

 (0x05)
                    {

  CD73: A0 49 0D 93 5F 54 5F 30 0A 05                    // .I.._T_0..

                        Name (PPI2, 
  CD7D: 08 50 50 49 32                                   // .PPI2

Package (0x03)
                        {
                            Zero, 
                            Zero, 
                            Zero
                        })
                        Store (0x21, DAT)
                        Store (OFST, INQ)
                        Store (DAT, 
  CD82: 12 05 03 00 00 00 70 0A 21 44 41 54 5F 70 4F 46  // ......p.!DAT_pOF
  CD92: 53 54 49 4E 51 5F 70 44 41 54 5F                 // STINQ_pDAT_

Index (PPI2, One))

  CD9D: 88 50 50 49 32 01 00                             // .PPI2..

                        If (LEqual (DAT, 0xFF))
                        {

  CDA4: A0 0B 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (0x02)
                        }

                        Store (0x31, DAT)
                        Store (OFST, INQ)

  CDAD: A4 0A 02 70 0A 31 44 41 54 5F 70 4F 46 53 54 49  // ...p.1DAT_pOFSTI
  CDBD: 4E 51 5F                                         // NQ_

                        If (LEqual (DAT, 0xFF))
                        {

  CDC0: A0 0B 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (0x02)
                        }


  CDC9: A4 0A 02                                         // ...

                        If (LEqual (DAT, 0xF0))
                        {
                            Store (0x51, DAT)
                            Store (OFST, INQ)

  CDCC: A0 34 93 44 41 54 5F 0A F0 70 0A 51 44 41 54 5F  // .4.DAT_..p.QDAT_
  CDDC: 70 4F 46 53 54 49 4E 51 5F                       // pOFSTINQ_

                            If (LEqual (DAT, 0xFF))
                            {
                                Store (0xFFFFFFF0, 
  CDE5: A0 1B 93 44 41 54 5F 0A FF 70 0C F0 FF FF FF     // ...DAT_..p.....

Index (PPI2, 0x02))

  CDF4: 88 50 50 49 32 0A 02 00                          // .PPI2...

                                Return (PPI2)
                            }
                        }

  CDFC: A4 50 50 49 32                                   // .PPI2

                        ElseIf
  CE01: A1 46 04                                         // .F.

 (LEqual (DAT, 0xF1))
                        {
                            Store (0x51, DAT)
                            Store (OFST, INQ)

  CE04: A0 34 93 44 41 54 5F 0A F1 70 0A 51 44 41 54 5F  // .4.DAT_..p.QDAT_
  CE14: 70 4F 46 53 54 49 4E 51 5F                       // pOFSTINQ_

                            If (LEqual (DAT, 0xFF))
                            {
                                Store (0xFFFFFFF1, 
  CE1D: A0 1B 93 44 41 54 5F 0A FF 70 0C F1 FF FF FF     // ...DAT_..p.....

Index (PPI2, 0x02))

  CE2C: 88 50 50 49 32 0A 02 00                          // .PPI2...

                                Return (PPI2)
                            }
                        }

  CE34: A4 50 50 49 32                                   // .PPI2

                        Else
                        {

  CE39: A1 0E                                            // ..

                            Store (DAT, 
  CE3B: 70 44 41 54 5F                                   // pDAT_

Index (PPI2, 0x02))
                        }


  CE40: 88 50 50 49 32 0A 02 00                          // .PPI2...

                        Return (PPI2)
                    }

  CE48: A4 50 50 49 32                                   // .PPI2

                    Case
  CE4D: A1 4E 0B                                         // .N.

 (0x06)
                    {

  CE50: A0 0B 93 5F 54 5F 30 0A 06                       // ..._T_0..

                        Return (0x03)
                    }

  CE59: A4 0A 03                                         // ...

                    Case
  CE5C: A1 4F 0A                                         // .O.

 (0x07)
                    {
                        ToInteger (DerefOf (
  CE5F: A0 43 06 93 5F 54 5F 30 0A 07 99 83              // .C.._T_0....

Index (Arg2, Zero)), TMF2)
                        Store (0x12, TMF1)
                        Store (TMF1, DAT)
                        Store (OFST, INQ)

  CE6B: 88 6A 00 00 54 4D 46 32 70 0A 12 54 4D 46 31 70  // .j..TMF2p..TMF1p
  CE7B: 54 4D 46 31 44 41 54 5F 70 4F 46 53 54 49 4E 51  // TMF1DAT_pOFSTINQ
  CE8B: 5F                                               // _

                        If (LEqual (DAT, 0xFF))
                        {

  CE8C: A0 0B 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (0x02)
                        }

                        Store (TMF2, DAT)
                        Store (OFST, INQ)

  CE95: A4 0A 02 70 54 4D 46 32 44 41 54 5F 70 4F 46 53  // ...pTMF2DAT_pOFS
  CEA5: 54 49 4E 51 5F                                   // TINQ_

                        If (LEqual (DAT, 0xFF))
                        {

  CEAA: A0 0B 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (0x02)
                        }


  CEB3: A4 0A 02                                         // ...

                        If (LEqual (DAT, 0xF1))
                        {

  CEB6: A0 0A 93 44 41 54 5F 0A F1                       // ...DAT_..

                            Return (One)
                        }


  CEBF: A4 01                                            // ..

                        Return (Zero)
                    }

  CEC1: A4 00                                            // ..

                    Case
  CEC3: A1 48 04                                         // .H.

 (0x08)
                    {
                        ToInteger (DerefOf (
  CEC6: A0 43 04 93 5F 54 5F 30 0A 08 99 83              // .C.._T_0....

Index (Arg2, Zero)), TMF2)
                        Store (0x43, TMF1)
                        Store (TMF1, DAT)
                        Store (OFST, INQ)
                        Store (TMF2, DAT)
                        Store (OFST, INQ)

  CED2: 88 6A 00 00 54 4D 46 32 70 0A 43 54 4D 46 31 70  // .j..TMF2p.CTMF1p
  CEE2: 54 4D 46 31 44 41 54 5F 70 4F 46 53 54 49 4E 51  // TMF1DAT_pOFSTINQ
  CEF2: 5F 70 54 4D 46 32 44 41 54 5F 70 4F 46 53 54 49  // _pTMF2DAT_pOFSTI
  CF02: 4E 51 5F                                         // NQ_

                        Return (DAT)
                    }

  CF05: A4 44 41 54 5F                                   // .DAT_

                    Default
                    {
                    }


  CF0A: A1 01                                            // ..

                }
            }


  CF0C: A5                                               // .

            Method (MORI, 3, Serialized)
            {

  CF0D: 14 49 08 4D 4F 52 49 0B                          // .I.MORI.


  CF15: 08 5F 54 5F 30 00                                // ._T_0.

                Switch (ToInteger (Arg1))
                {

  CF1B: A2 46 07 01 70 99 69 00 5F 54 5F 30              // .F..p.i._T_0

                    Case (Zero)
                    {

  CF27: A0 0C 93 5F 54 5F 30 00                          // ..._T_0.

                        Return (
  CF2F: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

  CF30: 11 03 01 03                                      // ....

                    Case
  CF34: A1 4C 05                                         // .L.

 (One)
                    {
                        Store (0x22, TMF1)
                        Store (TMF1, DAT)
                        Store (OFST, INQ)

  CF37: A0 47 05 93 5F 54 5F 30 01 70 0A 22 54 4D 46 31  // .G.._T_0.p."TMF1
  CF47: 70 54 4D 46 31 44 41 54 5F 70 4F 46 53 54 49 4E  // pTMF1DAT_pOFSTIN
  CF57: 51 5F                                            // Q_

                        If (LEqual (DAT, 0xFF))
                        {

  CF59: A0 0B 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (0x02)
                        }

                        ToInteger (DerefOf (
  CF62: A4 0A 02 99 83                                   // .....

Index (Arg2, Zero)), TMF1)
                        Store (TMF1, DAT)
                        Store (OFST, INQ)

  CF67: 88 6A 00 00 54 4D 46 31 70 54 4D 46 31 44 41 54  // .j..TMF1pTMF1DAT
  CF77: 5F 70 4F 46 53 54 49 4E 51 5F                    // _pOFSTINQ_

                        If (LEqual (DAT, 0xFF))
                        {

  CF81: A0 0B 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (0x02)
                        }


  CF8A: A4 0A 02                                         // ...

                        Return (Zero)
                    }

  CF8D: A4 00                                            // ..

                    Default
                    {
                    }


  CF8F: A1 01                                            // ..

                }


  CF91: A5                                               // .

                Return (
  CF92: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }


  CF93: 11 03 01 00                                      // ....

            Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
            {

  CF97: 14 4C 08 5F 44 53 4D 0C                          // .L._DSM.

                If (LEqual (Arg0, 
  CF9F: A0 1F 93 68                                      // ...h

ToUUID ("3dddfaa6-361b-4eb4-a424-8d10089d1653") /* Physical Presence Interface */))
                {

  CFA3: 11 13 0A 10 A6 FA DD 3D 1B 36 B4 4E A4 24 8D 10  // .......=.6.N.$..
  CFB3: 08 9D 16 53                                      // ...S

                    Return (PPIR (Arg1, Arg2, Arg3))
                }


  CFB7: A4 50 50 49 52 69 6A 6B                          // .PPIRijk

                If (LEqual (Arg0, 
  CFBF: A0 1F 93 68                                      // ...h

ToUUID ("376054ed-cc13-4675-901c-4756d7f2d45d")))
                {

  CFC3: 11 13 0A 10 ED 54 60 37 13 CC 75 46 90 1C 47 56  // .....T`7..uF..GV
  CFD3: D7 F2 D4 5D                                      // ...]

                    Return (MORI (Arg1, Arg2, Arg3))
                }


  CFD7: A4 4D 4F 52 49 69 6A 6B                          // .MORIijk

                If (LEqual (Arg0, 
  CFDF: A0 1F 93 68                                      // ...h

ToUUID ("cf8e16a5-c1e8-4e25-b712-4f54a96702c8")))
                {

  CFE3: 11 13 0A 10 A5 16 8E CF E8 C1 25 4E B7 12 4F 54  // ..........%N..OT
  CFF3: A9 67 02 C8                                      // .g..

                    Return (CRYF (Arg1, Arg2, Arg3))
                }


  CFF7: A4 43 52 59 46 69 6A 6B                          // .CRYFijk

                If (LEqual (Arg0, 
  CFFF: A0 1F 93 68                                      // ...h

ToUUID ("6bbf6cab-5463-4714-b7cd-f0203c0368d4")))
                {

  D003: 11 13 0A 10 AB 6C BF 6B 63 54 14 47 B7 CD F0 20  // .....l.kcT.G... 
  D013: 3C 03 68 D4                                      // <.h.

                    Return (STRT (Arg1, Arg2, Arg3))
                }


  D017: A4 53 54 52 54 69 6A 6B                          // .STRTijk

                Return (
  D01F: A4                                               // .

Buffer (One)
                {
                     0x00                                           
                })
            }
        }
    }


  D020: 11 03 01 00                                      // ....

    Scope (_SB.TPM)
    {

  D024: 10 45 38 2E 5F 53 42 5F 54 50 4D 5F              // .E8._SB_TPM_

        OperationRegion (ASMI, SystemIO, SMIA, One)

  D030: 5B 80 41 53 4D 49 01 53 4D 49 41 01              // [.ASMI.SMIA.

        Field (ASMI, ByteAcc, NoLock, Preserve)
        {
            INQ,    8
        }


  D03C: 5B 81 0B 41 53 4D 49 01 49 4E 51 5F 08           // [..ASMI.INQ_.

        OperationRegion (BSMI, SystemIO, SMIB, One)

  D049: 5B 80 42 53 4D 49 01 53 4D 49 42 01              // [.BSMI.SMIB.

        Field (BSMI, ByteAcc, NoLock, Preserve)
        {
            DAT,    8
        }


  D055: 5B 81 0B 42 53 4D 49 01 44 41 54 5F 08           // [..BSMI.DAT_.

        Method (_DSM, 4, Serialized)  // _DSM: Device-Specific Method
        {

  D062: 14 47 34 5F 44 53 4D 0C                          // .G4_DSM.


  D06A: 08 5F 54 5F 31 00                                // ._T_1.


  D070: 08 5F 54 5F 30 00                                // ._T_0.

            If (LEqual (Arg0, 
  D076: A0 4B 29 93 68                                   // .K).h

ToUUID ("3dddfaa6-361b-4eb4-a424-8d10089d1653") /* Physical Presence Interface */))
            {

  D07B: 11 13 0A 10 A6 FA DD 3D 1B 36 B4 4E A4 24 8D 10  // .......=.6.N.$..
  D08B: 08 9D 16 53                                      // ...S

                Switch (ToInteger (Arg2))
                {

  D08F: A2 42 28 01 70 99 6A 00 5F 54 5F 30              // .B(.p.j._T_0

                    Case (Zero)
                    {

  D09B: A0 0E 93 5F 54 5F 30 00                          // ..._T_0.

                        Return (
  D0A3: A4                                               // .

Buffer (0x02)
                        {
                             0xFF, 0x01                                     
                        })
                    }

  D0A4: 11 05 0A 02 FF 01                                // ......

                    Case
  D0AA: A1 46 26                                         // .F&

 (One)
                    {

  D0AD: A0 0D 93 5F 54 5F 30 01                          // ..._T_0.

                        Return ("1.2")
                    }

  D0B5: A4 0D 31 2E 32 00                                // ..1.2.

                    Case
  D0BB: A1 45 25                                         // .E%

 (0x02)
                    {
                        ToInteger (DerefOf (
  D0BE: A0 43 06 93 5F 54 5F 30 0A 02 99 83              // .C.._T_0....

Index (Arg3, Zero)), TMF2)
                        Store (0x12, TMF1)
                        Store (TMF1, DAT)
                        Store (OFST, INQ)

  D0CA: 88 6B 00 00 54 4D 46 32 70 0A 12 54 4D 46 31 70  // .k..TMF2p..TMF1p
  D0DA: 54 4D 46 31 44 41 54 5F 70 4F 46 53 54 49 4E 51  // TMF1DAT_pOFSTINQ
  D0EA: 5F                                               // _

                        If (LEqual (DAT, 0xFF))
                        {

  D0EB: A0 0B 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (0x02)
                        }

                        Store (TMF2, DAT)
                        Store (OFST, INQ)

  D0F4: A4 0A 02 70 54 4D 46 32 44 41 54 5F 70 4F 46 53  // ...pTMF2DAT_pOFS
  D104: 54 49 4E 51 5F                                   // TINQ_

                        If (LEqual (DAT, 0xFF))
                        {

  D109: A0 0B 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (0x02)
                        }


  D112: A4 0A 02                                         // ...

                        If (LEqual (DAT, 0xF1))
                        {

  D115: A0 0A 93 44 41 54 5F 0A F1                       // ...DAT_..

                            Return (One)
                        }


  D11E: A4 01                                            // ..

                        Return (Zero)
                    }

  D120: A4 00                                            // ..

                    Case
  D122: A1 4E 1E                                         // .N.

 (0x03)
                    {

  D125: A0 3E 93 5F 54 5F 30 0A 03                       // .>._T_0..

                        Name (PPI1, 
  D12E: 08 50 50 49 31                                   // .PPI1

Package (0x02)
                        {
                            Zero, 
                            Zero
                        })
                        Store (0x11, DAT)
                        Store (OFST, INQ)

  D133: 12 04 02 00 00 70 0A 11 44 41 54 5F 70 4F 46 53  // .....p..DAT_pOFS
  D143: 54 49 4E 51 5F                                   // TINQ_

                        If (LEqual (DAT, 0xFF))
                        {

  D148: A0 0A 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (One)
                        }

                        Store (DAT, 
  D151: A4 01 70 44 41 54 5F                             // ..pDAT_

Index (PPI1, One))

  D158: 88 50 50 49 31 01 00                             // .PPI1..

                        Return (PPI1)
                    }

  D15F: A4 50 50 49 31                                   // .PPI1

                    Case
  D164: A1 4C 1A                                         // .L.

 (0x04)
                    {

  D167: A0 0D 93 5F 54 5F 30 0A 04                       // ..._T_0..

                        Return (TRST)
                    }

  D170: A4 54 52 53 54                                   // .TRST

                    Case
  D175: A1 4B 19                                         // .K.

 (0x05)
                    {

  D178: A0 49 0D 93 5F 54 5F 30 0A 05                    // .I.._T_0..

                        Name (PPI2, 
  D182: 08 50 50 49 32                                   // .PPI2

Package (0x03)
                        {
                            Zero, 
                            Zero, 
                            Zero
                        })
                        Store (0x21, DAT)
                        Store (OFST, INQ)
                        Store (DAT, 
  D187: 12 05 03 00 00 00 70 0A 21 44 41 54 5F 70 4F 46  // ......p.!DAT_pOF
  D197: 53 54 49 4E 51 5F 70 44 41 54 5F                 // STINQ_pDAT_

Index (PPI2, One))

  D1A2: 88 50 50 49 32 01 00                             // .PPI2..

                        If (LEqual (DAT, 0xFF))
                        {

  D1A9: A0 0B 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (0x02)
                        }

                        Store (0x31, DAT)
                        Store (OFST, INQ)

  D1B2: A4 0A 02 70 0A 31 44 41 54 5F 70 4F 46 53 54 49  // ...p.1DAT_pOFSTI
  D1C2: 4E 51 5F                                         // NQ_

                        If (LEqual (DAT, 0xFF))
                        {

  D1C5: A0 0B 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (0x02)
                        }


  D1CE: A4 0A 02                                         // ...

                        If (LEqual (DAT, 0xF0))
                        {
                            Store (0x51, DAT)
                            Store (OFST, INQ)

  D1D1: A0 34 93 44 41 54 5F 0A F0 70 0A 51 44 41 54 5F  // .4.DAT_..p.QDAT_
  D1E1: 70 4F 46 53 54 49 4E 51 5F                       // pOFSTINQ_

                            If (LEqual (DAT, 0xFF))
                            {
                                Store (0xFFFFFFF0, 
  D1EA: A0 1B 93 44 41 54 5F 0A FF 70 0C F0 FF FF FF     // ...DAT_..p.....

Index (PPI2, 0x02))

  D1F9: 88 50 50 49 32 0A 02 00                          // .PPI2...

                                Return (PPI2)
                            }
                        }

  D201: A4 50 50 49 32                                   // .PPI2

                        ElseIf
  D206: A1 46 04                                         // .F.

 (LEqual (DAT, 0xF1))
                        {
                            Store (0x51, DAT)
                            Store (OFST, INQ)

  D209: A0 34 93 44 41 54 5F 0A F1 70 0A 51 44 41 54 5F  // .4.DAT_..p.QDAT_
  D219: 70 4F 46 53 54 49 4E 51 5F                       // pOFSTINQ_

                            If (LEqual (DAT, 0xFF))
                            {
                                Store (0xFFFFFFF1, 
  D222: A0 1B 93 44 41 54 5F 0A FF 70 0C F1 FF FF FF     // ...DAT_..p.....

Index (PPI2, 0x02))

  D231: 88 50 50 49 32 0A 02 00                          // .PPI2...

                                Return (PPI2)
                            }
                        }

  D239: A4 50 50 49 32                                   // .PPI2

                        Else
                        {

  D23E: A1 0E                                            // ..

                            Store (DAT, 
  D240: 70 44 41 54 5F                                   // pDAT_

Index (PPI2, 0x02))
                        }


  D245: 88 50 50 49 32 0A 02 00                          // .PPI2...

                        Return (PPI2)
                    }

  D24D: A4 50 50 49 32                                   // .PPI2

                    Case
  D252: A1 4E 0B                                         // .N.

 (0x06)
                    {

  D255: A0 0B 93 5F 54 5F 30 0A 06                       // ..._T_0..

                        Return (0x03)
                    }

  D25E: A4 0A 03                                         // ...

                    Case
  D261: A1 4F 0A                                         // .O.

 (0x07)
                    {
                        ToInteger (DerefOf (
  D264: A0 43 06 93 5F 54 5F 30 0A 07 99 83              // .C.._T_0....

Index (Arg3, Zero)), TMF2)
                        Store (0x12, TMF1)
                        Store (TMF1, DAT)
                        Store (OFST, INQ)

  D270: 88 6B 00 00 54 4D 46 32 70 0A 12 54 4D 46 31 70  // .k..TMF2p..TMF1p
  D280: 54 4D 46 31 44 41 54 5F 70 4F 46 53 54 49 4E 51  // TMF1DAT_pOFSTINQ
  D290: 5F                                               // _

                        If (LEqual (DAT, 0xFF))
                        {

  D291: A0 0B 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (0x02)
                        }

                        Store (TMF2, DAT)
                        Store (OFST, INQ)

  D29A: A4 0A 02 70 54 4D 46 32 44 41 54 5F 70 4F 46 53  // ...pTMF2DAT_pOFS
  D2AA: 54 49 4E 51 5F                                   // TINQ_

                        If (LEqual (DAT, 0xFF))
                        {

  D2AF: A0 0B 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (0x02)
                        }


  D2B8: A4 0A 02                                         // ...

                        If (LEqual (DAT, 0xF1))
                        {

  D2BB: A0 0A 93 44 41 54 5F 0A F1                       // ...DAT_..

                            Return (One)
                        }


  D2C4: A4 01                                            // ..

                        Return (Zero)
                    }

  D2C6: A4 00                                            // ..

                    Case
  D2C8: A1 48 04                                         // .H.

 (0x08)
                    {
                        ToInteger (DerefOf (
  D2CB: A0 43 04 93 5F 54 5F 30 0A 08 99 83              // .C.._T_0....

Index (Arg3, Zero)), TMF2)
                        Store (0x43, TMF1)
                        Store (TMF1, DAT)
                        Store (OFST, INQ)
                        Store (TMF2, DAT)
                        Store (OFST, INQ)

  D2D7: 88 6B 00 00 54 4D 46 32 70 0A 43 54 4D 46 31 70  // .k..TMF2p.CTMF1p
  D2E7: 54 4D 46 31 44 41 54 5F 70 4F 46 53 54 49 4E 51  // TMF1DAT_pOFSTINQ
  D2F7: 5F 70 54 4D 46 32 44 41 54 5F 70 4F 46 53 54 49  // _pTMF2DAT_pOFSTI
  D307: 4E 51 5F                                         // NQ_

                        Return (DAT)
                    }

  D30A: A4 44 41 54 5F                                   // .DAT_

                    Default
                    {
                    }


  D30F: A1 01                                            // ..

                }
            }

  D311: A5                                               // .

            ElseIf
  D312: A1 42 09                                         // .B.

 (LEqual (Arg0, 
  D315: A0 4F 08 93 68                                   // .O..h

ToUUID ("376054ed-cc13-4675-901c-4756d7f2d45d")))
            {

  D31A: 11 13 0A 10 ED 54 60 37 13 CC 75 46 90 1C 47 56  // .....T`7..uF..GV
  D32A: D7 F2 D4 5D                                      // ...]

                Switch (ToInteger (Arg2))
                {

  D32E: A2 46 07 01 70 99 6A 00 5F 54 5F 31              // .F..p.j._T_1

                    Case (Zero)
                    {

  D33A: A0 0C 93 5F 54 5F 31 00                          // ..._T_1.

                        Return (
  D342: A4                                               // .

Buffer (One)
                        {
                             0x03                                           
                        })
                    }

  D343: 11 03 01 03                                      // ....

                    Case
  D347: A1 4C 05                                         // .L.

 (One)
                    {
                        Store (0x22, TMF1)
                        Store (TMF1, DAT)
                        Store (OFST, INQ)

  D34A: A0 47 05 93 5F 54 5F 31 01 70 0A 22 54 4D 46 31  // .G.._T_1.p."TMF1
  D35A: 70 54 4D 46 31 44 41 54 5F 70 4F 46 53 54 49 4E  // pTMF1DAT_pOFSTIN
  D36A: 51 5F                                            // Q_

                        If (LEqual (DAT, 0xFF))
                        {

  D36C: A0 0B 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (0x02)
                        }

                        ToInteger (DerefOf (
  D375: A4 0A 02 99 83                                   // .....

Index (Arg3, Zero)), TMF1)
                        Store (TMF1, DAT)
                        Store (OFST, INQ)

  D37A: 88 6B 00 00 54 4D 46 31 70 54 4D 46 31 44 41 54  // .k..TMF1pTMF1DAT
  D38A: 5F 70 4F 46 53 54 49 4E 51 5F                    // _pOFSTINQ_

                        If (LEqual (DAT, 0xFF))
                        {

  D394: A0 0B 93 44 41 54 5F 0A FF                       // ...DAT_..

                            Return (0x02)
                        }


  D39D: A4 0A 02                                         // ...

                        Return (Zero)
                    }

  D3A0: A4 00                                            // ..

                    Default
                    {
                    }


  D3A2: A1 01                                            // ..

                }
            }


  D3A4: A5                                               // .

            Return (
  D3A5: A4                                               // .

Buffer (One)
            {
                 0x00                                           
            })
        }
    }


  D3A6: 11 03 01 00                                      // ....

    Scope (_SB.PCI0)
    {
    }


  D3AA: 10 0A 2E 5F 53 42 5F 50 43 49 30                 // ..._SB_PCI0

    Scope (_SB)
    {

  D3B5: 10 8C 3D 03 5F 53 42 5F                          // ..=._SB_

        Device (PWRB)
        {

  D3BD: 5B 82 1B 50 57 52 42                             // [..PWRB

            Name (_HID, EisaId ("PNP0C0C"))  // _HID: Hardware ID

  D3C4: 08 5F 48 49 44 0C 41 D0 0C 0C                    // ._HID.A...

            Name (_PRW, 
  D3CE: 08 5F 50 52 57                                   // ._PRW

Package (0x02)  // _PRW: Power Resources for Wake
            {
                0x08, 
                0x03
            })
        }


  D3D3: 12 06 02 0A 08 0A 03                             // .......

        Device (SLPB)
        {

  D3DA: 5B 82 1B 53 4C 50 42                             // [..SLPB

            Name (_HID, EisaId ("PNP0C0E"))  // _HID: Hardware ID

  D3E1: 08 5F 48 49 44 0C 41 D0 0C 0E                    // ._HID.A...

            Name (_PRW, 
  D3EB: 08 5F 50 52 57                                   // ._PRW

Package (0x02)  // _PRW: Power Resources for Wake
            {
                0x08, 
                0x03
            })
        }


  D3F0: 12 06 02 0A 08 0A 03                             // .......

        Device (LID0)
        {

  D3F7: 5B 82 42 0A 4C 49 44 30                          // [.B.LID0

            Name (_HID, EisaId ("PNP0C0D"))  // _HID: Hardware ID

  D3FF: 08 5F 48 49 44 0C 41 D0 0C 0D                    // ._HID.A...

            Name (LIDF, Zero)

  D409: 08 4C 49 44 46 00                                // .LIDF.

            Name (WMIF, Zero)

  D40F: 08 57 4D 49 46 00                                // .WMIF.

            Method (_LID, 0, NotSerialized)  // _LID: Lid Status
            {

  D415: 14 46 04 5F 4C 49 44 00                          // .F._LID.

                If (WMIF)
                {
                    Store (Zero, WMIF)

  D41D: A0 0D 57 4D 49 46 70 00 57 4D 49 46              // ..WMIFp.WMIF

                    Return (Zero)
                }

  D429: A4 00                                            // ..

                ElseIf
  D42B: A1 30                                            // .0

 (^^PCI0.LPCB.EC.ECOK)
                {

  D42D: A0 2A 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // .*^^/.PCI0LPCBEC
  D43D: 5F 5F 45 43 4F 4B                                // __ECOK

                    Return (^^PCI0.LPCB.EC.LIDS)
                }

  D443: A4 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // .^^/.PCI0LPCBEC_
  D453: 5F 4C 49 44 53                                   // _LIDS

                Else
                {

  D458: A1 03                                            // ..

                    Return (One)
                }
            }


  D45A: A4 01                                            // ..

            Name (_PRW, 
  D45C: 08 5F 50 52 57                                   // ._PRW

Package (0x02)  // _PRW: Power Resources for Wake
            {
                0x08, 
                0x03
            })

  D461: 12 06 02 0A 08 0A 03                             // .......

            Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
            {

  D468: 14 32 5F 50 53 57 01                             // .2_PSW.

                If (^^PCI0.LPCB.EC.ECOK)
                {

  D46F: A0 2B 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // .+^^/.PCI0LPCBEC
  D47F: 5F 5F 45 43 4F 4B                                // __ECOK

                    Store (Arg0, ^^PCI0.LPCB.EC.LWKE)
                }
            }
        }


  D485: 70 68 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ph^^/.PCI0LPCBEC
  D495: 5F 5F 4C 57 4B 45                                // __LWKE

        Device (AC)
        {

  D49B: 5B 82 42 47 41 43 5F 5F                          // [.BGAC__

            Name (_HID, "ACPI0003")  // _HID: Hardware ID

  D4A3: 08 5F 48 49 44 0D 41 43 50 49 30 30 30 33 00     // ._HID.ACPI0003.

            Name (_PCL, 
  D4B2: 08 5F 50 43 4C                                   // ._PCL

Package (0x01)  // _PCL: Power Consumer List
            {
                _SB
            })

  D4B7: 12 06 01 5F 53 42 5F                             // ..._SB_

            Name (ACFG, One)

  D4BE: 08 41 43 46 47 01                                // .ACFG.

            Name (IGNR, Zero)

  D4C4: 08 49 47 4E 52 00                                // .IGNR.

            Name (RPPC, Zero)

  D4CA: 08 52 50 50 43 00                                // .RPPC.

            Name (RQTM, Zero)

  D4D0: 08 52 51 54 4D 00                                // .RQTM.

            Name (CTMS, 0xA55A)

  D4D6: 08 43 54 4D 53 0B 5A A5                          // .CTMS.Z.

            Name (GPSF, Zero)

  D4DE: 08 47 50 53 46 00                                // .GPSF.

            Name (PSSN, Zero)

  D4E4: 08 50 53 53 4E 00                                // .PSSN.

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {
                Store (Zero, IGNR)
                Store (Zero, RPPC)
                Store (Zero, RQTM)
                Store (0xA55A, CTMS)

  D4EA: 14 26 5F 49 4E 49 00 70 00 49 47 4E 52 70 00 52  // .&_INI.p.IGNRp.R
  D4FA: 50 50 43 70 00 52 51 54 4D 70 0B 5A A5 43 54 4D  // PPCp.RQTMp.Z.CTM
  D50A: 53                                               // S

                Store (Zero, PSSN)
            }


  D50B: 70 00 50 53 53 4E                                // p.PSSN

            Method (_PSR, 0, NotSerialized)  // _PSR: Power Source
            {

  D511: 14 3A 5F 50 53 52 00                             // .:_PSR.

                If (^^PCI0.LPCB.EC.ECOK)
                {

  D518: A0 2E 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
  D528: 5F 5F 45 43 4F 4B                                // __ECOK

                    Store (^^PCI0.LPCB.EC.ADP, ACFG)
                }


  D52E: 70 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // p^^/.PCI0LPCBEC_
  D53E: 5F 41 44 50 5F 41 43 46 47                       // _ADP_ACFG

                Return (ACFG)
            }


  D547: A4 41 43 46 47                                   // .ACFG

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  D54C: 14 09 5F 53 54 41 00                             // .._STA.

                Return (0x0F)
            }


  D553: A4 0A 0F                                         // ...

            Method (ADJP, 1, Serialized)
            {

  D556: 14 48 3B 41 44 4A 50 09                          // .H;ADJP.


  D55E: 08 5F 54 5F 32 00                                // ._T_2.


  D564: 08 5F 54 5F 31 00                                // ._T_1.


  D56A: 08 5F 54 5F 30 00                                // ._T_0.

                If (IGNR)
                {

  D570: A0 07 49 47 4E 52                                // ..IGNR

                    Return (Zero)
                }

                Store (Arg0, Local5)
                Store (Zero, Local4)

  D576: A4 00 70 68 65 70 00 64                          // ..phep.d

                If (LAnd (\_TZ.TZ0.PPFG, 
  D57E: A0 1F 90 5C 2F 03 5F 54 5A 5F 54 5A 30 5F 50 50  // ...\/._TZ_TZ0_PP
  D58E: 46 47                                            // FG

LEqual (And (Local5, 0x80000000), Zero)))
                {

  D590: 93 7B 65 0C 00 00 00 80 00 00                    // .{e.......

                    Store (0x02, Local7)
                }

  D59A: 70 0A 02 67                                      // p..g

                ElseIf
  D59E: A1 44 08                                         // .D.

 (^^PCI0.LPCB.EC.B15C)
                {

  D5A1: A0 19 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
  D5B1: 5F 5F 42 31 35 43                                // __B15C

                    Store (0x02, Local7)
                }

  D5B7: 70 0A 02 67                                      // p..g

                ElseIf
  D5BB: A1 47 06                                         // .G.

 (^^PCI0.LPCB.EC.SLFG)
                {

  D5BE: A0 18 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
  D5CE: 5F 5F 53 4C 46 47                                // __SLFG

                    Store (One, Local7)
                }

  D5D4: 70 01 67                                         // p.g

                Else
                {

  D5D7: A1 4B 04                                         // .K.

                    Switch (And (OEMF, 0x06))
                    {

  D5DA: A2 48 04 01 70 7B 4F 45 4D 46 0A 06 00 5F 54 5F  // .H..p{OEMF..._T_
  D5EA: 30                                               // 0

                        Case (Zero)
                        {

  D5EB: A0 0A 93 5F 54 5F 30 00                          // ..._T_0.

                            Store (Zero, Local7)
                        }

  D5F3: 70 00 67                                         // p.g

                        Case
  D5F6: A1 2B                                            // .+

 (0x02)
                        {

  D5F8: A0 0B 93 5F 54 5F 30 0A 02                       // ..._T_0..

                            Store (One, Local7)
                        }

  D601: 70 01 67                                         // p.g

                        Case
  D604: A1 1D                                            // ..

 (0x04)
                        {

  D606: A0 16 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            If (ACFG)
                            {

  D60F: A0 08 41 43 46 47                                // ..ACFG

                                Store (Zero, Local7)
                            }

  D615: 70 00 67                                         // p.g

                            Else
                            {

  D618: A1 04                                            // ..

                                Store (One, Local7)
                            }
                        }

  D61A: 70 01 67                                         // p.g

                        Default
                        {

  D61D: A1 04                                            // ..

                            Store (Zero, Local7)
                        }


  D61F: 70 00 67                                         // p.g

                    }
                }


  D622: A5                                               // .

                If (^^PCI0.LPCB.EC.ECTB)
                {

  D623: A0 19 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
  D633: 5F 5F 45 43 54 42                                // __ECTB

                    Store (0x03, Local7)
                }

  D639: 70 0A 03 67                                      // p..g

                Else
                {
                }


  D63D: A1 01                                            // ..

                If (And (\_PR.CFGD, One))
                {

  D63F: A0 43 14 7B 5C 2E 5F 50 52 5F 43 46 47 44 01 00  // .C.{\._PR_CFGD..

                    If (LEqual (And (PSSN, 0xFFFF0000), 0x80000000))
                    {

  D64F: A0 1B 93 7B 50 53 53 4E 0C 00 00 FF FF 00 0C 00  // ...{PSSN........
  D65F: 00 00 80                                         // ...

                        And (PSSN, 0xFFFF, Local2)
                    }

  D662: 7B 50 53 53 4E 0B FF FF 62                       // {PSSN...b

                    Else
                    {
                        Store (\_PR.CPU0._PSS, Local6)
                        Store (SizeOf (Local6), Local2)

  D66B: A1 23 70 5C 2F 03 5F 50 52 5F 43 50 55 30 5F 50  // .#p\/._PR_CPU0_P
  D67B: 53 53 66 70 87 66 62                             // SSfp.fb

                        Store (Or (0x80000000, Local2), PSSN)
                    }

                    Store (Local2, Local6)

  D682: 70 7D 0C 00 00 00 80 62 00 50 53 53 4E 70 62 66  // p}.....b.PSSNpbf

                    Switch (ToInteger (Local7))
                    {

  D692: A2 40 0F 01 70 99 67 00 5F 54 5F 31              // .@..p.g._T_1

                        Case (Zero)
                        {

  D69E: A0 0A 93 5F 54 5F 31 00                          // ..._T_1.

                            Store (Zero, Local0)
                        }

  D6A6: 70 00 60                                         // p.`

                        Case
  D6A9: A1 48 0D                                         // .H.

 (One)
                        {

  D6AC: A0 41 06 93 5F 54 5F 31 01                       // .A.._T_1.

                            If (LGreater (Local2, 0x02))
                            {

  D6B5: A0 49 04 94 62 0A 02                             // .I..b..

                                If (And (\_PR.CFGD, 0x0100))
                                {

  D6BC: A0 12 7B 5C 2E 5F 50 52 5F 43 46 47 44 0B 00 01  // ..{\._PR_CFGD...
  D6CC: 00                                               // .

                                    Decrement (Local2)
                                }


  D6CD: 76 62                                            // vb

                                If (LGreater (Local2, 0x02))
                                {
                                    Store (Local2, Local3)
                                    ShiftRight (Local2, One, Local0)
                                    Increment (Local0)
                                    Decrement (Local3)

  D6CF: A0 2A 94 62 0A 02 70 62 63 7A 62 01 60 75 60 76  // .*.b..pbczb.`u`v
  D6DF: 63                                               // c

                                    If (LEqual (Local3, Local0))
                                    {

  D6E0: A0 06 93 63 60                                   // ...c`

                                        Decrement (Local0)
                                    }


  D6E5: 76 60                                            // v`

                                    If (And (\_PR.CFGD, 0x0100))
                                    {

  D6E7: A0 12 7B 5C 2E 5F 50 52 5F 43 46 47 44 0B 00 01  // ..{\._PR_CFGD...
  D6F7: 00                                               // .

                                        Increment (Local0)
                                    }
                                }

  D6F8: 75 60                                            // u`

                                Else
                                {

  D6FA: A1 04                                            // ..

                                    Store (Local2, Local0)
                                }
                            }

  D6FC: 70 62 60                                         // pb`

                            ElseIf
  D6FF: A1 0E                                            // ..

 (Local2)
                            {
                                Decrement (Local2)

  D701: A0 07 62 76 62                                   // ..bvb

                                Store (Local2, Local0)
                            }

  D706: 70 62 60                                         // pb`

                            Else
                            {

  D709: A1 04                                            // ..

                                Store (Zero, Local0)
                            }
                        }

  D70B: 70 00 60                                         // p.`

                        Case
  D70E: A1 43 07                                         // .C.

 (0x02)
                        {
                            Decrement (Local2)

  D711: A0 0D 93 5F 54 5F 31 0A 02 76 62                 // ..._T_1..vb

                            Store (Local2, Local0)
                        }

  D71C: 70 62 60                                         // pb`

                        Case
  D71F: A1 42 06                                         // .B.

 (0x03)
                        {
                            Store (One, Local0)

  D722: A0 4C 04 93 5F 54 5F 31 0A 03 70 01 60           // .L.._T_1..p.`

                            If (LEqual (ACFG, Zero))
                            {

  D72F: A0 3F 93 41 43 46 47 00                          // .?.ACFG.

                                If (And (\_PR.CFGD, 0x0100))
                                {

  D737: A0 12 7B 5C 2E 5F 50 52 5F 43 46 47 44 0B 00 01  // ..{\._PR_CFGD...
  D747: 00                                               // .

                                    Decrement (Local2)
                                }

                                Store (Local2, Local3)
                                ShiftRight (Local2, One, Local0)
                                Increment (Local0)
                                Decrement (Local3)

  D748: 76 62 70 62 63 7A 62 01 60 75 60 76 63           // vbpbczb.`u`vc

                                If (LEqual (Local3, Local0))
                                {

  D755: A0 06 93 63 60                                   // ...c`

                                    Decrement (Local0)
                                }


  D75A: 76 60                                            // v`

                                If (And (\_PR.CFGD, 0x0100))
                                {

  D75C: A0 12 7B 5C 2E 5F 50 52 5F 43 46 47 44 0B 00 01  // ..{\._PR_CFGD...
  D76C: 00                                               // .

                                    Increment (Local0)
                                }
                            }
                        }

  D76D: 75 60                                            // u`

                        Case
  D76F: A1 12                                            // ..

 (0x04)
                        {

  D771: A0 0B 93 5F 54 5F 31 0A 04                       // ..._T_1..

                            Store (One, Local0)
                        }

  D77A: 70 01 60                                         // p.`

                        Default
                        {

  D77D: A1 04                                            // ..

                            Store (Zero, Local0)
                        }


  D77F: 70 00 60                                         // p.`

                    }
                }


  D782: A5                                               // .

                If (LEqual (^^PCI0.LPCB.EC.PSLC, Zero))
                {

  D783: A0 1B 93 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // ...^^/.PCI0LPCBE
  D793: 43 5F 5F 50 53 4C 43 00                          // C__PSLC.

                    Store (0x08, Local0)
                }


  D79B: 70 0A 08 60                                      // p..`

                If (And (\_PR.CFGD, One))
                {

  D79F: A0 42 12 7B 5C 2E 5F 50 52 5F 43 46 47 44 01 00  // .B.{\._PR_CFGD..

                    If (And (Local5, 0x60000000))
                    {
                        And (Local5, 0xFFFF, Local1)

  D7AF: A0 33 7B 65 0C 00 00 00 60 00 7B 65 0B FF FF 61  // .3{e....`.{e...a

                        If (LAnd (
  D7BF: A0 0C 90 92                                      // ....

LGreaterEqual (Local1, Local0), 
  D7C3: 95 61 60                                         // .a`

LLess (Local1, Local6)))
                        {

  D7C6: 95 61 66                                         // .af

                            Store (Local1, Local0)
                        }


  D7C9: 70 61 60                                         // pa`

                        If (And (Local5, 0x40000000))
                        {

  D7CC: A0 16 7B 65 0C 00 00 00 40 00                    // ..{e....@.

                            Store (Or (Local1, 0x80000000), RPPC)
                        }
                    }

  D7D6: 70 7D 61 0C 00 00 00 80 00 52 50 50 43           // p}a......RPPC

                    ElseIf
  D7E3: A1 24                                            // .$

 (And (RPPC, 0x80000000))
                    {
                        And (RPPC, 0xFFFF, Local1)

  D7E5: A0 22 7B 52 50 50 43 0C 00 00 00 80 00 7B 52 50  // ."{RPPC......{RP
  D7F5: 50 43 0B FF FF 61                                // PC...a

                        If (LAnd (
  D7FB: A0 0C 90 92                                      // ....

LGreaterEqual (Local1, Local0), 
  D7FF: 95 61 60                                         // .a`

LLess (Local1, Local6)))
                        {

  D802: 95 61 66                                         // .af

                            Store (Local1, Local0)
                        }
                    }

                    Store (Local0, \_PR.CPU0._PPC)
                    PNOT ()
                    Store (One, GPEC)

  D805: 70 61 60 70 60 5C 2F 03 5F 50 52 5F 43 50 55 30  // pa`p`\/._PR_CPU0
  D815: 5F 50 50 43 50 4E 4F 54 70 01 47 50 45 43        // _PPCPNOTp.GPEC

                    If (\_PR.CPU0._PPC)
                    {

  D823: A0 13 5C 2F 03 5F 50 52 5F 43 50 55 30 5F 50 50  // ..\/._PR_CPU0_PP
  D833: 43                                               // C

                        Store (One, Local1)
                    }

  D834: 70 01 61                                         // p.a

                    Else
                    {

  D837: A1 04                                            // ..

                        Store (Zero, Local1)
                    }


  D839: 70 00 61                                         // p.a

                    If (And (RQTM, 0x80000000))
                    {

  D83C: A0 17 7B 52 51 54 4D 0C 00 00 00 80 00           // ..{RQTM......

                        Or (And (RQTM, 0x03), Local1, Local1)
                    }


  D849: 7D 7B 52 51 54 4D 0A 03 00 61 61                 // }{RQTM...aa

                    If (And (Local5, 0x18000000))
                    {
                        Or (And (Local5, 0x03), Local1, Local1)

  D854: A0 2C 7B 65 0C 00 00 00 18 00 7D 7B 65 0A 03 00  // .,{e......}{e...
  D864: 61 61                                            // aa

                        If (And (Local5, 0x10000000))
                        {

  D866: A0 1A 7B 65 0C 00 00 00 10 00                    // ..{e......

                            Store (Or (And (Local5, 0x03), 0x80000000), RQTM)
                        }
                    }


  D870: 70 7D 7B 65 0A 03 00 0C 00 00 00 80 00 52 51 54  // p}{e.........RQT
  D880: 4D                                               // M

                    If (Local4)
                    {

  D881: A0 06 64                                         // ..d

                        Store (0x03, Local1)
                    }


  D884: 70 0A 03 61                                      // p..a

                    If (LEqual (And (\_PR.CFGD, 0x0100), Zero))
                    {

  D888: A0 16 93 7B 5C 2E 5F 50 52 5F 43 46 47 44 0B 00  // ...{\._PR_CFGD..
  D898: 01 00 00                                         // ...

                        And (Local1, One, Local1)
                    }


  D89B: 7B 61 01 61                                      // {a.a

                    If (
  D89F: A0 22 92                                         // .".

LNotEqual (Local1, CTMS))
                    {
                        Store (Local1, PRM1)
                        Store (0x08, PRM0)
                        Store (0xE0, SSMP)

  D8A2: 93 61 43 54 4D 53 70 61 50 52 4D 31 70 0A 08 50  // .aCTMSpaPRM1p..P
  D8B2: 52 4D 30 70 0A E0 53 53 4D 50                    // RM0p..SSMP

                        Store (Local1, CTMS)
                    }
                }

  D8BC: 70 61 43 54 4D 53                                // paCTMS

                Else
                {

  D8C2: A1 4A 04                                         // .J.

                    Switch (ToInteger (Local7))
                    {

  D8C5: A2 3A 01 70 99 67 00 5F 54 5F 32                 // .:.p.g._T_2

                        Case (Zero)
                        {

  D8D0: A0 0B 93 5F 54 5F 32 00                          // ..._T_2.

                            Store (0x03, Local0)
                        }

  D8D8: 70 0A 03 60                                      // p..`

                        Case
  D8DC: A1 22                                            // ."

 (One)
                        {

  D8DE: A0 0B 93 5F 54 5F 32 01                          // ..._T_2.

                            Store (0x02, Local0)
                        }

  D8E6: 70 0A 02 60                                      // p..`

                        Case
  D8EA: A1 14                                            // ..

 (0x02)
                        {

  D8EC: A0 0C 93 5F 54 5F 32 0A 02                       // ..._T_2..

                            Store (0x02, Local0)
                        }

  D8F5: 70 0A 02 60                                      // p..`

                        Default
                        {

  D8F9: A1 05                                            // ..

                            Store (0x03, Local0)
                        }


  D8FB: 70 0A 03 60                                      // p..`

                    }

                    Store (Local0, PRM0)

  D8FF: A5 70 60 50 52 4D 30                             // .p`PRM0

                    Store (0xE0, SSMP)
                }


  D906: 70 0A E0 53 53 4D 50                             // p..SSMP

                Return (Zero)
            }
        }


  D90D: A4 00                                            // ..

        Device (BAT0)
        {

  D90F: 5B 82 46 3E 42 41 54 30                          // [.F>BAT0

            Name (_HID, EisaId ("PNP0C0A"))  // _HID: Hardware ID

  D917: 08 5F 48 49 44 0C 41 D0 0C 0A                    // ._HID.A...

            Name (_UID, Zero)  // _UID: Unique ID

  D921: 08 5F 55 49 44 00                                // ._UID.

            Name (_PCL, 
  D927: 08 5F 50 43 4C                                   // ._PCL

Package (0x01)  // _PCL: Power Consumer List
            {
                _SB
            })

  D92C: 12 06 01 5F 53 42 5F                             // ..._SB_

            Name (BFCC, Zero)

  D933: 08 42 46 43 43 00                                // .BFCC.

            Method (_STA, 0, NotSerialized)  // _STA: Status
            {

  D939: 14 3F 5F 53 54 41 00                             // .?_STA.

                If (^^PCI0.LPCB.EC.ECOK)
                {

  D940: A0 33 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // .3^^/.PCI0LPCBEC
  D950: 5F 5F 45 43 4F 4B                                // __ECOK

                    If (^^PCI0.LPCB.EC.BAT0)
                    {

  D956: A0 18 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
  D966: 5F 5F 42 41 54 30                                // __BAT0

                        Return (0x1F)
                    }

  D96C: A4 0A 1F                                         // ...

                    Else
                    {

  D96F: A1 04                                            // ..

                        Return (0x0F)
                    }
                }

  D971: A4 0A 0F                                         // ...

                Else
                {

  D974: A1 04                                            // ..

                    Return (0x0F)
                }
            }


  D976: A4 0A 0F                                         // ...

            Name (PBIF, 
  D979: 08 50 42 49 46                                   // .PBIF

Package (0x0D)
            {
                One, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                One, 
                0x39D0, 
                Zero, 
                Zero, 
                0x40, 
                0x40, 
                "BAT", 
                "0001", 
                "LION", 
                "Notebook"
            })

  D97E: 12 32 0D 01 0C FF FF FF FF 0C FF FF FF FF 01 0B  // .2..............
  D98E: D0 39 00 00 0A 40 0A 40 0D 42 41 54 00 0D 30 30  // .9...@.@.BAT..00
  D99E: 30 31 00 0D 4C 49 4F 4E 00 0D 4E 6F 74 65 62 6F  // 01..LION..Notebo
  D9AE: 6F 6B 00                                         // ok.

            Method (IVBI, 0, NotSerialized)
            {
                Store (0xFFFFFFFF, 
  D9B1: 14 46 06 49 56 42 49 00 70 0C FF FF FF FF        // .F.IVBI.p.....

Index (PBIF, One))
                Store (0xFFFFFFFF, 
  D9BF: 88 50 42 49 46 01 00 70 0C FF FF FF FF           // .PBIF..p.....

Index (PBIF, 0x02))
                Store (0xFFFFFFFF, 
  D9CC: 88 50 42 49 46 0A 02 00 70 0C FF FF FF FF        // .PBIF...p.....

Index (PBIF, 0x04))
                Store (" ", 
  D9DA: 88 50 42 49 46 0A 04 00 70 0D 20 00              // .PBIF...p. .

Index (PBIF, 0x09))
                Store (" ", 
  D9E6: 88 50 42 49 46 0A 09 00 70 0D 20 00              // .PBIF...p. .

Index (PBIF, 0x0A))
                Store (" ", 
  D9F2: 88 50 42 49 46 0A 0A 00 70 0D 20 00              // .PBIF...p. .

Index (PBIF, 0x0B))
                Store (" ", 
  D9FE: 88 50 42 49 46 0A 0B 00 70 0D 20 00              // .PBIF...p. .

Index (PBIF, 0x0C))

  DA0A: 88 50 42 49 46 0A 0C 00                          // .PBIF...

                Store (Zero, BFCC)
            }


  DA12: 70 00 42 46 43 43                                // p.BFCC

            Method (UPBI, 0, NotSerialized)
            {

  DA18: 14 47 11 55 50 42 49 00                          // .G.UPBI.

                If (^^PCI0.LPCB.EC.BAT0)
                {
                    And (^^PCI0.LPCB.EC.BDC0, 0xFFFF, Local0)
                    Store (Local0, 
  DA20: A0 49 10 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .I.^^/.PCI0LPCBE
  DA30: 43 5F 5F 42 41 54 30 7B 5E 5E 2F 04 50 43 49 30  // C__BAT0{^^/.PCI0
  DA40: 4C 50 43 42 45 43 5F 5F 42 44 43 30 0B FF FF 60  // LPCBEC__BDC0...`
  DA50: 70 60                                            // p`

Index (PBIF, One))
                    And (^^PCI0.LPCB.EC.BFC0, 0xFFFF, Local0)
                    Store (Local0, 
  DA52: 88 50 42 49 46 01 00 7B 5E 5E 2F 04 50 43 49 30  // .PBIF..{^^/.PCI0
  DA62: 4C 50 43 42 45 43 5F 5F 42 46 43 30 0B FF FF 60  // LPCBEC__BFC0...`
  DA72: 70 60                                            // p`

Index (PBIF, 0x02))
                    Store (Local0, BFCC)
                    And (^^PCI0.LPCB.EC.BDV0, 0xFFFF, Local0)
                    Store (Local0, 
  DA74: 88 50 42 49 46 0A 02 00 70 60 42 46 43 43 7B 5E  // .PBIF...p`BFCC{^
  DA84: 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F 5F 42  // ^/.PCI0LPCBEC__B
  DA94: 44 56 30 0B FF FF 60 70 60                       // DV0...`p`

Index (PBIF, 0x04))
                    And (^^PCI0.LPCB.EC.BCW0, 0xFFFF, Local0)
                    Store (Local0, 
  DA9D: 88 50 42 49 46 0A 04 00 7B 5E 5E 2F 04 50 43 49  // .PBIF...{^^/.PCI
  DAAD: 30 4C 50 43 42 45 43 5F 5F 42 43 57 30 0B FF FF  // 0LPCBEC__BCW0...
  DABD: 60 70 60                                         // `p`

Index (PBIF, 0x05))
                    And (^^PCI0.LPCB.EC.BCL0, 0xFFFF, Local0)
                    Store (Local0, 
  DAC0: 88 50 42 49 46 0A 05 00 7B 5E 5E 2F 04 50 43 49  // .PBIF...{^^/.PCI
  DAD0: 30 4C 50 43 42 45 43 5F 5F 42 43 4C 30 0B FF FF  // 0LPCBEC__BCL0...
  DAE0: 60 70 60                                         // `p`

Index (PBIF, 0x06))
                    Store ("BAT", 
  DAE3: 88 50 42 49 46 0A 06 00 70 0D 42 41 54 00        // .PBIF...p.BAT.

Index (PBIF, 0x09))
                    Store ("0001", 
  DAF1: 88 50 42 49 46 0A 09 00 70 0D 30 30 30 31 00     // .PBIF...p.0001.

Index (PBIF, 0x0A))
                    Store ("LION", 
  DB00: 88 50 42 49 46 0A 0A 00 70 0D 4C 49 4F 4E 00     // .PBIF...p.LION.

Index (PBIF, 0x0B))

  DB0F: 88 50 42 49 46 0A 0B 00                          // .PBIF...

                    Store ("Notebook", 
  DB17: 70 0D 4E 6F 74 65 62 6F 6F 6B 00                 // p.Notebook.

Index (PBIF, 0x0C))
                }

  DB22: 88 50 42 49 46 0A 0C 00                          // .PBIF...

                Else
                {
                    IVBI ()
                }
            }


  DB2A: A1 05 49 56 42 49                                // ..IVBI

            Method (_BIF, 0, NotSerialized)  // _BIF: Battery Information
            {

  DB30: 14 2B 5F 42 49 46 00                             // .+_BIF.

                If (^^PCI0.LPCB.EC.ECOK)
                {
                    UPBI ()
                }

  DB37: A0 19 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
  DB47: 5F 5F 45 43 4F 4B 55 50 42 49                    // __ECOKUPBI

                Else
                {
                    IVBI ()
                }


  DB51: A1 05 49 56 42 49                                // ..IVBI

                Return (PBIF)
            }


  DB57: A4 50 42 49 46                                   // .PBIF

            Name (PBST, 
  DB5C: 08 50 42 53 54                                   // .PBST

Package (0x04)
            {
                Zero, 
                0xFFFFFFFF, 
                0xFFFFFFFF, 
                0x3D90
            })

  DB61: 12 10 04 00 0C FF FF FF FF 0C FF FF FF FF 0B 90  // ................
  DB71: 3D                                               // =

            Method (IVBS, 0, NotSerialized)
            {
                Store (Zero, 
  DB72: 14 36 49 56 42 53 00 70 00                       // .6IVBS.p.

Index (PBST, Zero))
                Store (0xFFFFFFFF, 
  DB7B: 88 50 42 53 54 00 00 70 0C FF FF FF FF           // .PBST..p.....

Index (PBST, One))
                Store (0xFFFFFFFF, 
  DB88: 88 50 42 53 54 01 00 70 0C FF FF FF FF           // .PBST..p.....

Index (PBST, 0x02))

  DB95: 88 50 42 53 54 0A 02 00                          // .PBST...

                Store (0x2710, 
  DB9D: 70 0B 10 27                                      // p..'

Index (PBST, 0x03))
            }


  DBA1: 88 50 42 53 54 0A 03 00                          // .PBST...

            Method (UPBS, 0, NotSerialized)
            {

  DBA9: 14 41 12 55 50 42 53 00                          // .A.UPBS.

                If (^^PCI0.LPCB.EC.BAT0)
                {
                    Store (Zero, Local0)
                    Store (Zero, Local1)

  DBB1: A0 43 11 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .C.^^/.PCI0LPCBE
  DBC1: 43 5F 5F 42 41 54 30 70 00 60 70 00 61           // C__BAT0p.`p.a

                    If (^^AC.ACFG)
                    {

  DBCE: A0 48 04 5E 5E 2E 41 43 5F 5F 41 43 46 47        // .H.^^.AC__ACFG

                        If (LEqual (And (^^PCI0.LPCB.EC.BST0, 0x02), 0x02))
                        {
                            Or (Local0, 0x02, Local0)

  DBDC: A0 3A 93 7B 5E 5E 2F 04 50 43 49 30 4C 50 43 42  // .:.{^^/.PCI0LPCB
  DBEC: 45 43 5F 5F 42 53 54 30 0A 02 00 0A 02 7D 60 0A  // EC__BST0.....}`.
  DBFC: 02 60                                            // .`

                            And (^^PCI0.LPCB.EC.BPR0, 0xFFFF, Local1)
                        }
                    }

  DBFE: 7B 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // {^^/.PCI0LPCBEC_
  DC0E: 5F 42 50 52 30 0B FF FF 61                       // _BPR0...a

                    Else
                    {
                        Or (Local0, One, Local0)

  DC17: A1 1E 7D 60 01 60                                // ..}`.`

                        And (^^PCI0.LPCB.EC.BPR0, 0xFFFF, Local1)
                    }

                    And (Local1, 0x8000, Local7)

  DC1D: 7B 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // {^^/.PCI0LPCBEC_
  DC2D: 5F 42 50 52 30 0B FF FF 61 7B 61 0B 00 80 67     // _BPR0...a{a...g

                    If (LEqual (Local7, 0x8000))
                    {

  DC3C: A0 0D 93 67 0B 00 80                             // ...g...

                        Store (0xFFFFFFFF, Local1)
                    }

                    And (^^PCI0.LPCB.EC.BRC0, 0xFFFF, Local2)
                    And (^^PCI0.LPCB.EC.BPV0, 0xFFFF, Local3)
                    Store (Local0, 
  DC43: 70 0C FF FF FF FF 61 7B 5E 5E 2F 04 50 43 49 30  // p.....a{^^/.PCI0
  DC53: 4C 50 43 42 45 43 5F 5F 42 52 43 30 0B FF FF 62  // LPCBEC__BRC0...b
  DC63: 7B 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // {^^/.PCI0LPCBEC_
  DC73: 5F 42 50 56 30 0B FF FF 63 70 60                 // _BPV0...cp`

Index (PBST, Zero))
                    Store (Local1, 
  DC7E: 88 50 42 53 54 00 00 70 61                       // .PBST..pa

Index (PBST, One))
                    Store (Local2, 
  DC87: 88 50 42 53 54 01 00 70 62                       // .PBST..pb

Index (PBST, 0x02))
                    Store (Local3, 
  DC90: 88 50 42 53 54 0A 02 00 70 63                    // .PBST...pc

Index (PBST, 0x03))

  DC9A: 88 50 42 53 54 0A 03 00                          // .PBST...

                    If (
  DCA2: A0 22 92                                         // .".

LNotEqual (BFCC, ^^PCI0.LPCB.EC.BFC0))
                    {

  DCA5: 93 42 46 43 43 5E 5E 2F 04 50 43 49 30 4C 50 43  // .BFCC^^/.PCI0LPC
  DCB5: 42 45 43 5F 5F 42 46 43 30                       // BEC__BFC0

                        Notify (BAT0, 0x81)
                    }
                }

  DCBE: 86 42 41 54 30 0A 81                             // .BAT0..

                Else
                {
                    IVBS ()
                }
            }


  DCC5: A1 05 49 56 42 53                                // ..IVBS

            Method (_BST, 0, NotSerialized)  // _BST: Battery Status
            {

  DCCB: 14 2B 5F 42 53 54 00                             // .+_BST.

                If (^^PCI0.LPCB.EC.ECOK)
                {
                    UPBS ()
                }

  DCD2: A0 19 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
  DCE2: 5F 5F 45 43 4F 4B 55 50 42 53                    // __ECOKUPBS

                Else
                {
                    IVBS ()
                }


  DCEC: A1 05 49 56 42 53                                // ..IVBS

                Return (PBST)
            }
        }


  DCF2: A4 50 42 53 54                                   // .PBST

        Device (WMI)
        {

  DCF7: 5B 82 89 A9 02 57 4D 49 5F                       // [....WMI_

            Name (_HID, "PNP0C14")  // _HID: Hardware ID

  DD00: 08 5F 48 49 44 0D 50 4E 50 30 43 31 34 00        // ._HID.PNP0C14.

            Name (_UID, Zero)  // _UID: Unique ID

  DD0E: 08 5F 55 49 44 00                                // ._UID.

            Name (INDX, Zero)

  DD14: 08 49 4E 44 58 00                                // .INDX.

            Name (_WDG, 
  DD1A: 08 5F 57 44 47                                   // ._WDG

Buffer (0x3C)
            {
                /* 0000 */  0x6D, 0x0F, 0xBC, 0xAB, 0xA1, 0x8E, 0xD1, 0x11,
                /* 0008 */  0x00, 0xA0, 0xC9, 0x06, 0x29, 0x10, 0x00, 0x00,
                /* 0010 */  0x42, 0x42, 0x01, 0x02, 0x6B, 0x0F, 0xBC, 0xAB,
                /* 0018 */  0xA1, 0x8E, 0xD1, 0x11, 0x00, 0xA0, 0xC9, 0x06,
                /* 0020 */  0x29, 0x10, 0x00, 0x00, 0xD0, 0x00, 0x01, 0x08,
                /* 0028 */  0x6C, 0x0F, 0xBC, 0xAB, 0xA1, 0x8E, 0xD1, 0x11,
                /* 0030 */  0x00, 0xA0, 0xC9, 0x06, 0x29, 0x10, 0x00, 0x00,
                /* 0038 */  0xD1, 0x00, 0x01, 0x08                         
            })

  DD1F: 11 3F 0A 3C 6D 0F BC AB A1 8E D1 11 00 A0 C9 06  // .?.<m...........
  DD2F: 29 10 00 00 42 42 01 02 6B 0F BC AB A1 8E D1 11  // )...BB..k.......
  DD3F: 00 A0 C9 06 29 10 00 00 D0 00 01 08 6C 0F BC AB  // ....).......l...
  DD4F: A1 8E D1 11 00 A0 C9 06 29 10 00 00 D1 00 01 08  // ........).......

            Name (EVNT, Zero)

  DD5F: 08 45 56 4E 54 00                                // .EVNT.

            Name (EVID, Zero)

  DD65: 08 45 56 49 44 00                                // .EVID.

            Name (HKDR, Zero)

  DD6B: 08 48 4B 44 52 00                                // .HKDR.

            Method (_INI, 0, NotSerialized)  // _INI: Initialize
            {

  DD71: 14 0C 5F 49 4E 49 00                             // .._INI.

                Store (Zero, HKDR)
            }


  DD78: 70 00 48 4B 44 52                                // p.HKDR

            Method (WMBB, 3, Serialized)
            {

  DD7E: 14 8A A0 02 57 4D 42 42 0B                       // ....WMBB.


  DD87: 08 5F 54 5F 36 00                                // ._T_6.


  DD8D: 08 5F 54 5F 35 00                                // ._T_5.


  DD93: 08 5F 54 5F 34 00                                // ._T_4.


  DD99: 08 5F 54 5F 33 00                                // ._T_3.


  DD9F: 08 5F 54 5F 32 00                                // ._T_2.


  DDA5: 08 5F 54 5F 31 00                                // ._T_1.

                P8XH (Zero, Arg1)

  DDAB: 08 5F 54 5F 30 00 50 38 58 48 00 69              // ._T_0.P8XH.i

                Name (ARGS, Zero)

  DDB7: 08 41 52 47 53 00                                // .ARGS.

                If (SizeOf (Arg2))
                {

  DDBD: A0 09 87 6A                                      // ...j

                    Store (Arg2, ARGS)
                }

                Store (Zero, Local0)

  DDC1: 70 6A 41 52 47 53 70 00 60                       // pjARGSp.`

                If (LEqual (ToInteger (Arg1), One))
                {

  DDCA: A0 14 93 99 69 00 01                             // ....i..

                    If (HKDR)
                    {

  DDD1: A0 0B 48 4B 44 52                                // ..HKDR

                        Store (EVNT, Local0)
                    }


  DDD7: 70 45 56 4E 54 60                                // pEVNT`

                    Return (Local0)
                }


  DDDD: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x05))
                {

  DDDF: A0 43 0B 93 99 69 00 0A 05                       // .C...i...

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (0xA1, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xB8, ^^PCI0.LPCB.EC.FCMD)

  DDE8: A0 43 0A 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .C.^^/.PCI0LPCBE
  DDF8: 43 5F 5F 45 43 4F 4B 70 0A A1 5E 5E 2F 04 50 43  // C__ECOKp..^^/.PC
  DE08: 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 0A  // I0LPCBEC__FDATp.
  DE18: B8 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // .^^/.PCI0LPCBEC_
  DE28: 5F 46 43 4D 44                                   // _FCMD

                        If (One)
                        {
                            Store (^^PCI0.LPCB.EC.FDAT, Local1)

  DE2D: A0 4E 05 01 70 5E 5E 2F 04 50 43 49 30 4C 50 43  // .N..p^^/.PCI0LPC
  DE3D: 42 45 43 5F 5F 46 44 41 54 61                    // BEC__FDATa

                            If (And (^^PCI0.LPCB.EC.OEM3, 0x08))
                            {

  DE47: A0 28 7B 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .({^^/.PCI0LPCBE
  DE57: 43 5F 5F 4F 45 4D 33 0A 08 00                    // C__OEM3...

                                If (And (Local1, 0x02))
                                {

  DE61: A0 09 7B 61 0A 02 00                             // ..{a...

                                    Store (One, Local0)
                                }

  DE68: 70 01 60                                         // p.`

                                Else
                                {

  DE6B: A1 04                                            // ..

                                    Store (Zero, Local0)
                                }
                            }

  DE6D: 70 00 60                                         // p.`

                            Else
                            {

  DE70: A1 05                                            // ..

                                Store (0x02, Local0)
                            }


  DE72: 70 0A 02 60                                      // p..`

                            Store (Zero, ^^PCI0.LPCB.EC.FCMD)
                        }
                    }

  DE76: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  DE86: 5F 5F 46 43 4D 44                                // __FCMD

                    Else
                    {

  DE8C: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


  DE8E: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  DE91: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x06))
                {

  DE93: A0 42 0B 93 99 69 00 0A 06                       // .B...i...

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (0xA1, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xB8, ^^PCI0.LPCB.EC.FCMD)

  DE9C: A0 42 0A 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .B.^^/.PCI0LPCBE
  DEAC: 43 5F 5F 45 43 4F 4B 70 0A A1 5E 5E 2F 04 50 43  // C__ECOKp..^^/.PC
  DEBC: 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 0A  // I0LPCBEC__FDATp.
  DECC: B8 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // .^^/.PCI0LPCBEC_
  DEDC: 5F 46 43 4D 44                                   // _FCMD

                        If (One)
                        {
                            Store (^^PCI0.LPCB.EC.FDAT, Local1)

  DEE1: A0 4D 05 01 70 5E 5E 2F 04 50 43 49 30 4C 50 43  // .M..p^^/.PCI0LPC
  DEF1: 42 45 43 5F 5F 46 44 41 54 61                    // BEC__FDATa

                            If (And (^^PCI0.LPCB.EC.OEM3, 0x04))
                            {

  DEFB: A0 27 7B 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .'{^^/.PCI0LPCBE
  DF0B: 43 5F 5F 4F 45 4D 33 0A 04 00                    // C__OEM3...

                                If (And (Local1, One))
                                {

  DF15: A0 08 7B 61 01 00                                // ..{a..

                                    Store (One, Local0)
                                }

  DF1B: 70 01 60                                         // p.`

                                Else
                                {

  DF1E: A1 04                                            // ..

                                    Store (Zero, Local0)
                                }
                            }

  DF20: 70 00 60                                         // p.`

                            Else
                            {

  DF23: A1 05                                            // ..

                                Store (0x02, Local0)
                            }


  DF25: 70 0A 02 60                                      // p..`

                            Store (Zero, ^^PCI0.LPCB.EC.FCMD)
                        }
                    }

  DF29: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  DF39: 5F 5F 46 43 4D 44                                // __FCMD

                    Else
                    {

  DF3F: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


  DF41: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  DF44: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x07))
                {

  DF46: A0 43 0B 93 99 69 00 0A 07                       // .C...i...

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (0xA1, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xB8, ^^PCI0.LPCB.EC.FCMD)

  DF4F: A0 43 0A 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .C.^^/.PCI0LPCBE
  DF5F: 43 5F 5F 45 43 4F 4B 70 0A A1 5E 5E 2F 04 50 43  // C__ECOKp..^^/.PC
  DF6F: 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 0A  // I0LPCBEC__FDATp.
  DF7F: B8 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // .^^/.PCI0LPCBEC_
  DF8F: 5F 46 43 4D 44                                   // _FCMD

                        If (One)
                        {
                            Store (^^PCI0.LPCB.EC.FDAT, Local1)

  DF94: A0 4E 05 01 70 5E 5E 2F 04 50 43 49 30 4C 50 43  // .N..p^^/.PCI0LPC
  DFA4: 42 45 43 5F 5F 46 44 41 54 61                    // BEC__FDATa

                            If (And (^^PCI0.LPCB.EC.OEM3, 0x10))
                            {

  DFAE: A0 28 7B 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .({^^/.PCI0LPCBE
  DFBE: 43 5F 5F 4F 45 4D 33 0A 10 00                    // C__OEM3...

                                If (And (Local1, 0x04))
                                {

  DFC8: A0 09 7B 61 0A 04 00                             // ..{a...

                                    Store (One, Local0)
                                }

  DFCF: 70 01 60                                         // p.`

                                Else
                                {

  DFD2: A1 04                                            // ..

                                    Store (Zero, Local0)
                                }
                            }

  DFD4: 70 00 60                                         // p.`

                            Else
                            {

  DFD7: A1 05                                            // ..

                                Store (0x02, Local0)
                            }


  DFD9: 70 0A 02 60                                      // p..`

                            Store (Zero, ^^PCI0.LPCB.EC.FCMD)
                        }
                    }

  DFDD: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  DFED: 5F 5F 46 43 4D 44                                // __FCMD

                    Else
                    {

  DFF3: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


  DFF5: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  DFF8: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x09))
                {

  DFFA: A0 42 09 93 99 69 00 0A 09                       // .B...i...

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (0xA1, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xB8, ^^PCI0.LPCB.EC.FCMD)

  E003: A0 42 08 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .B.^^/.PCI0LPCBE
  E013: 43 5F 5F 45 43 4F 4B 70 0A A1 5E 5E 2F 04 50 43  // C__ECOKp..^^/.PC
  E023: 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 0A  // I0LPCBEC__FDATp.
  E033: B8 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // .^^/.PCI0LPCBEC_
  E043: 5F 46 43 4D 44                                   // _FCMD

                        If (One)
                        {
                            Store (^^PCI0.LPCB.EC.FDAT, Local1)

  E048: A0 3D 01 70 5E 5E 2F 04 50 43 49 30 4C 50 43 42  // .=.p^^/.PCI0LPCB
  E058: 45 43 5F 5F 46 44 41 54 61                       // EC__FDATa

                            If (And (Local1, 0x10))
                            {

  E061: A0 09 7B 61 0A 10 00                             // ..{a...

                                Store (One, Local0)
                            }

  E068: 70 01 60                                         // p.`

                            Else
                            {

  E06B: A1 04                                            // ..

                                Store (Zero, Local0)
                            }


  E06D: 70 00 60                                         // p.`

                            Store (Zero, ^^PCI0.LPCB.EC.FCMD)
                        }
                    }

  E070: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  E080: 5F 5F 46 43 4D 44                                // __FCMD

                    Else
                    {

  E086: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


  E088: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  E08B: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x0A))
                {

  E08D: A0 43 0B 93 99 69 00 0A 0A                       // .C...i...

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (0xA1, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xB8, ^^PCI0.LPCB.EC.FCMD)

  E096: A0 43 0A 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .C.^^/.PCI0LPCBE
  E0A6: 43 5F 5F 45 43 4F 4B 70 0A A1 5E 5E 2F 04 50 43  // C__ECOKp..^^/.PC
  E0B6: 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 0A  // I0LPCBEC__FDATp.
  E0C6: B8 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // .^^/.PCI0LPCBEC_
  E0D6: 5F 46 43 4D 44                                   // _FCMD

                        If (One)
                        {
                            Store (^^PCI0.LPCB.EC.FDAT, Local1)

  E0DB: A0 4E 05 01 70 5E 5E 2F 04 50 43 49 30 4C 50 43  // .N..p^^/.PCI0LPC
  E0EB: 42 45 43 5F 5F 46 44 41 54 61                    // BEC__FDATa

                            If (And (^^PCI0.LPCB.EC.OEM3, 0x20))
                            {

  E0F5: A0 28 7B 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .({^^/.PCI0LPCBE
  E105: 43 5F 5F 4F 45 4D 33 0A 20 00                    // C__OEM3. .

                                If (And (Local1, 0x08))
                                {

  E10F: A0 09 7B 61 0A 08 00                             // ..{a...

                                    Store (One, Local0)
                                }

  E116: 70 01 60                                         // p.`

                                Else
                                {

  E119: A1 04                                            // ..

                                    Store (Zero, Local0)
                                }
                            }

  E11B: 70 00 60                                         // p.`

                            Else
                            {

  E11E: A1 05                                            // ..

                                Store (0x02, Local0)
                            }


  E120: 70 0A 02 60                                      // p..`

                            Store (Zero, ^^PCI0.LPCB.EC.FCMD)
                        }
                    }

  E124: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  E134: 5F 5F 46 43 4D 44                                // __FCMD

                    Else
                    {

  E13A: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


  E13C: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  E13F: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x10))
                {

  E141: A0 39 93 99 69 00 0A 10                          // .9..i...

                    If (^^PCI0.LPCB.EC.SLFG)
                    {

  E149: A0 19 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
  E159: 5F 5F 53 4C 46 47                                // __SLFG

                        Or (Local0, One, Local0)
                    }


  E15F: 7D 60 01 60                                      // }`.`

                    If (\_TZ.TZ0.PPFG)
                    {

  E163: A0 15 5C 2F 03 5F 54 5A 5F 54 5A 30 5F 50 50 46  // ..\/._TZ_TZ0_PPF
  E173: 47                                               // G

                        Or (Local0, 0x02, Local0)
                    }


  E174: 7D 60 0A 02 60                                   // }`..`

                    Return (Local0)
                }


  E179: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x11))
                {

  E17B: A0 42 09 93 99 69 00 0A 11                       // .B...i...

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (0xA1, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xB8, ^^PCI0.LPCB.EC.FCMD)

  E184: A0 42 08 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .B.^^/.PCI0LPCBE
  E194: 43 5F 5F 45 43 4F 4B 70 0A A1 5E 5E 2F 04 50 43  // C__ECOKp..^^/.PC
  E1A4: 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 0A  // I0LPCBEC__FDATp.
  E1B4: B8 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // .^^/.PCI0LPCBEC_
  E1C4: 5F 46 43 4D 44                                   // _FCMD

                        If (One)
                        {
                            Store (^^PCI0.LPCB.EC.FDAT, Local1)

  E1C9: A0 3D 01 70 5E 5E 2F 04 50 43 49 30 4C 50 43 42  // .=.p^^/.PCI0LPCB
  E1D9: 45 43 5F 5F 46 44 41 54 61                       // EC__FDATa

                            If (And (Local1, 0x40))
                            {

  E1E2: A0 09 7B 61 0A 40 00                             // ..{a.@.

                                Store (One, Local0)
                            }

  E1E9: 70 01 60                                         // p.`

                            Else
                            {

  E1EC: A1 04                                            // ..

                                Store (Zero, Local0)
                            }


  E1EE: 70 00 60                                         // p.`

                            Store (Zero, ^^PCI0.LPCB.EC.FCMD)
                        }
                    }

  E1F1: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  E201: 5F 5F 46 43 4D 44                                // __FCMD

                    Else
                    {

  E207: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


  E209: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  E20C: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x12))
                {

  E20E: A0 48 04 93 99 69 00 0A 12                       // .H...i...

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

  E217: A0 38 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // .8^^/.PCI0LPCBEC
  E227: 5F 5F 45 43 4F 4B                                // __ECOK

                        If (And (^^PCI0.LPCB.EC.OEM3, 0x0800))
                        {

  E22D: A0 1D 7B 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // ..{^^/.PCI0LPCBE
  E23D: 43 5F 5F 4F 45 4D 33 0B 00 08 00                 // C__OEM3....

                            Store (One, Local0)
                        }

  E248: 70 01 60                                         // p.`

                        Else
                        {

  E24B: A1 04                                            // ..

                            Store (Zero, Local0)
                        }
                    }

  E24D: 70 00 60                                         // p.`

                    Else
                    {

  E250: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


  E252: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  E255: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x13))
                {

  E257: A0 43 08 93 99 69 00 0A 13                       // .C...i...

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

  E260: A0 44 07 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .D.^^/.PCI0LPCBE
  E270: 43 5F 5F 45 43 4F 4B                             // C__ECOK

                        If (ARGS)
                        {

  E277: A0 30 41 52 47 53                                // .0ARGS

                            Or (^^PCI0.LPCB.EC.ECKS, 0x80, ^^PCI0.LPCB.EC.ECKS)
                        }

  E27D: 7D 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // }^^/.PCI0LPCBEC_
  E28D: 5F 45 43 4B 53 0A 80 5E 5E 2F 04 50 43 49 30 4C  // _ECKS..^^/.PCI0L
  E29D: 50 43 42 45 43 5F 5F 45 43 4B 53                 // PCBEC__ECKS

                        Else
                        {

  E2A8: A1 2C                                            // .,

                            And (^^PCI0.LPCB.EC.ECKS, 0x7F, ^^PCI0.LPCB.EC.ECKS)
                        }
                    }

                    Store (0x13, Local0)

  E2AA: 7B 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // {^^/.PCI0LPCBEC_
  E2BA: 5F 45 43 4B 53 0A 7F 5E 5E 2F 04 50 43 49 30 4C  // _ECKS..^^/.PCI0L
  E2CA: 50 43 42 45 43 5F 5F 45 43 4B 53 70 0A 13 60     // PCBEC__ECKSp..`

                    Return (Local0)
                }


  E2D9: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x27))
                {

  E2DB: A0 4F 11 93 99 69 00 0A 27                       // .O...i..'

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

  E2E4: A0 42 11 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .B.^^/.PCI0LPCBE
  E2F4: 43 5F 5F 45 43 4F 4B                             // C__ECOK

                        Switch (ToInteger (ARGS))
                        {

  E2FB: A2 4B 0F 01 70 99 41 52 47 53 00 5F 54 5F 30     // .K..p.ARGS._T_0

                            Case (Zero)
                            {
                                Store (Zero, ^^PCI0.LPCB.EC.FDAT)
                                Store (Zero, ^^PCI0.LPCB.EC.FBUF)

  E30A: A0 4B 04 93 5F 54 5F 30 00 70 00 5E 5E 2F 04 50  // .K.._T_0.p.^^/.P
  E31A: 43 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70  // CI0LPCBEC__FDATp
  E32A: 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // .^^/.PCI0LPCBEC_
  E33A: 5F 46 42 55 46                                   // _FBUF

                                Store (0xCA, ^^PCI0.LPCB.EC.FCMD)
                            }

  E33F: 70 0A CA 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  E34F: 43 5F 5F 46 43 4D 44                             // C__FCMD

                            Case
  E356: A1 4F 09                                         // .O.

 (One)
                            {
                                Store (Zero, ^^PCI0.LPCB.EC.FDAT)
                                Store (One, ^^PCI0.LPCB.EC.FBUF)

  E359: A0 4B 04 93 5F 54 5F 30 01 70 00 5E 5E 2F 04 50  // .K.._T_0.p.^^/.P
  E369: 43 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70  // CI0LPCBEC__FDATp
  E379: 01 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // .^^/.PCI0LPCBEC_
  E389: 5F 46 42 55 46                                   // _FBUF

                                Store (0xCA, ^^PCI0.LPCB.EC.FCMD)
                            }

  E38E: 70 0A CA 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  E39E: 43 5F 5F 46 43 4D 44                             // C__FCMD

                            Case
  E3A5: A1 40 05                                         // .@.

 (0x02)
                            {
                                Store (Zero, ^^PCI0.LPCB.EC.FDAT)
                                Store (0x02, ^^PCI0.LPCB.EC.FBUF)

  E3A8: A0 4D 04 93 5F 54 5F 30 0A 02 70 00 5E 5E 2F 04  // .M.._T_0..p.^^/.
  E3B8: 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54  // PCI0LPCBEC__FDAT
  E3C8: 70 0A 02 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  E3D8: 43 5F 5F 46 42 55 46                             // C__FBUF

                                Store (0xCA, ^^PCI0.LPCB.EC.FCMD)
                            }


  E3DF: 70 0A CA 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  E3EF: 43 5F 5F 46 43 4D 44                             // C__FCMD

                        }
                    }


  E3F6: A5                                               // .

                    Store (0x27, Local0)
                }


  E3F7: 70 0A 27 60                                      // p.'`

                If (LEqual (ToInteger (Arg1), 0x32))
                {

  E3FB: A0 3A 93 99 69 00 0A 32                          // .:..i..2

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

  E403: A0 2B 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // .+^^/.PCI0LPCBEC
  E413: 5F 5F 45 43 4F 4B                                // __ECOK

                        Store (^^PCI0.LPCB.EC.BDC0, Local0)
                    }

  E419: 70 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // p^^/.PCI0LPCBEC_
  E429: 5F 42 44 43 30 60                                // _BDC0`

                    Else
                    {

  E42F: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


  E431: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  E434: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x33))
                {

  E436: A0 24 93 99 69 00 0A 33                          // .$..i..3

                    If (^^PCI0.LPCB.EC.ECOK){}

  E43E: A0 15 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
  E44E: 5F 5F 45 43 4F 4B                                // __ECOK

                    Else
                    {

  E454: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


  E456: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  E459: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x34))
                {

  E45B: A0 24 93 99 69 00 0A 34                          // .$..i..4

                    If (^^PCI0.LPCB.EC.ECOK){}

  E463: A0 15 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
  E473: 5F 5F 45 43 4F 4B                                // __ECOK

                    Else
                    {

  E479: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


  E47B: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  E47E: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x38))
                {
                    Store (One, Local0)

  E480: A0 0C 93 99 69 00 0A 38 70 01 60                 // ....i..8p.`

                    Return (Local0)
                }


  E48B: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x3B))
                {

  E48D: A0 0A 93 99 69 00 0A 3B                          // ....i..;

                    Noop

  E495: A3                                               // .

                    Return (Local0)
                }


  E496: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x3C))
                {

  E498: A0 33 93 99 69 00 0A 3C                          // .3..i..<

                    If (LEqual (And (OEMF, 0x0400), Zero))
                    {

  E4A0: A0 29 93 7B 4F 45 4D 46 0B 00 04 00 00           // .).{OEMF.....

                        If (^^PCI0.GFX0.PDDS (0x0300))
                        {

  E4AD: A0 17 5E 5E 2F 03 50 43 49 30 47 46 58 30 50 44  // ..^^/.PCI0GFX0PD
  E4BD: 44 53 0B 00 03                                   // DS...

                            Store (One, Local0)
                        }

  E4C2: 70 01 60                                         // p.`

                        Else
                        {

  E4C5: A1 04                                            // ..

                            Store (Zero, Local0)
                        }
                    }


  E4C7: 70 00 60                                         // p.`

                    Return (Local0)
                }


  E4CA: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x3F))
                {
                    Store (Zero, Local0)

  E4CC: A0 0C 93 99 69 00 0A 3F 70 00 60                 // ....i..?p.`

                    Return (Local0)
                }


  E4D7: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x43))
                {

  E4D9: A0 24 93 99 69 00 0A 43                          // .$..i..C

                    If (^^PCI0.LPCB.EC.ECOK){}

  E4E1: A0 15 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
  E4F1: 5F 5F 45 43 4F 4B                                // __ECOK

                    Else
                    {

  E4F7: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


  E4F9: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  E4FC: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x45))
                {

  E4FE: A0 41 04 93 99 69 00 0A 45                       // .A...i..E

                    If (ECBL)
                    {

  E507: A0 36 45 43 42 4C                                // .6ECBL

                        If (^^PCI0.LPCB.EC.ECOK)
                        {

  E50D: A0 2B 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // .+^^/.PCI0LPCBEC
  E51D: 5F 5F 45 43 4F 4B                                // __ECOK

                            Store (^^PCI0.LPCB.EC.OEM2, Local0)
                        }

  E523: 70 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // p^^/.PCI0LPCBEC_
  E533: 5F 4F 45 4D 32 60                                // _OEM2`

                        Else
                        {

  E539: A1 04                                            // ..

                            Store (Ones, Local0)
                        }
                    }


  E53B: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  E53E: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x51))
                {

  E540: A0 0A 93 99 69 00 0A 51                          // ....i..Q

                    Noop

  E548: A3                                               // .

                    Return (Local0)
                }


  E549: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x52))
                {
                    Store (0x25, Local0)

  E54B: A0 41 09 93 99 69 00 0A 52 70 0A 25 60           // .A...i..Rp.%`

                    If (LOr (And (OEMF, 0x0400), NVHA))
                    {

  E558: A0 17 91 7B 4F 45 4D 46 0B 00 04 00 4E 56 48 41  // ...{OEMF....NVHA

                        Or (Local0, 0x00200000, Local0)
                    }


  E568: 7D 60 0C 00 00 20 00 60                          // }`... .`

                    If (And (OEMF, 0x1000))
                    {

  E570: A0 0F 7B 4F 45 4D 46 0B 00 10 00                 // ..{OEMF....

                        Or (Local0, 0x02, Local0)
                    }


  E57B: 7D 60 0A 02 60                                   // }`..`

                    If (LEqual (ECBL, Zero))
                    {

  E580: A0 0F 93 45 43 42 4C 00                          // ...ECBL.

                        Or (Local0, 0x04000000, Local0)
                    }


  E588: 7D 60 0C 00 00 00 04 60                          // }`.....`

                    If (And (LKFG, One))
                    {

  E590: A0 10 7B 4C 4B 46 47 01 00                       // ..{LKFG..

                        Or (Local0, 0x00400000, Local0)
                    }


  E599: 7D 60 0C 00 00 40 00 60                          // }`...@.`

                    If (And (LKFG, 0x08))
                    {

  E5A1: A0 11 7B 4C 4B 46 47 0A 08 00                    // ..{LKFG...

                        Or (Local0, 0x02000000, Local0)
                    }


  E5AB: 7D 60 0C 00 00 00 02 60                          // }`.....`

                    If (And (LKFG, 0x02))
                    {

  E5B3: A0 11 7B 4C 4B 46 47 0A 02 00                    // ..{LKFG...

                        Or (Local0, 0x20000000, Local0)
                    }

                    Or (Local0, 0x40000000, Local0)

  E5BD: 7D 60 0C 00 00 00 20 60 7D 60 0C 00 00 00 40 60  // }`.... `}`....@`

                    If (FNF1)
                    {

  E5CD: A0 0D 46 4E 46 31                                // ..FNF1

                        Or (Local0, 0x00100000, Local0)
                    }


  E5D3: 7D 60 0C 00 00 10 00 60                          // }`.....`

                    Return (Local0)
                }


  E5DB: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x62))
                {

  E5DD: A0 3A 93 99 69 00 0A 62                          // .:..i..b

                    If (CondRefOf (\_SB.IFFS.FFST))
                    {

  E5E5: A0 32 5B 12 5C 2F 03 5F 53 42 5F 49 46 46 53 46  // .2[.\/._SB_IFFSF
  E5F5: 46 53 54 00                                      // FST.

                        If (And (^^IFFS.GFFS, One))
                        {

  E5F9: A0 1E 7B 5E 5E 2E 49 46 46 53 47 46 46 53 01 00  // ..{^^.IFFSGFFS..

                            Or (^^IFFS.GFTV, 0x80, Local0)
                        }
                    }
                }


  E609: 7D 5E 5E 2E 49 46 46 53 47 46 54 56 0A 80 60     // }^^.IFFSGFTV..`

                If (LEqual (ToInteger (Arg1), 0x63))
                {

  E618: A0 4A 0A 93 99 69 00 0A 63                       // .J...i..c

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (0x03, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xC0, ^^PCI0.LPCB.EC.FCMD)

  E621: A0 4A 09 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .J.^^/.PCI0LPCBE
  E631: 43 5F 5F 45 43 4F 4B 70 0A 03 5E 5E 2F 04 50 43  // C__ECOKp..^^/.PC
  E641: 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 0A  // I0LPCBEC__FDATp.
  E651: C0 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // .^^/.PCI0LPCBEC_
  E661: 5F 46 43 4D 44                                   // _FCMD

                        If (One)
                        {
                            Store (^^PCI0.LPCB.EC.FDAT, Local1)
                            Store (^^PCI0.LPCB.EC.FBF2, Local0)
                            Or (ShiftLeft (Local0, 0x08), Local0, Local0)
                            Or (ShiftLeft (Local0, 0x08), Local1, Local0)

  E666: A0 45 05 01 70 5E 5E 2F 04 50 43 49 30 4C 50 43  // .E..p^^/.PCI0LPC
  E676: 42 45 43 5F 5F 46 44 41 54 61 70 5E 5E 2F 04 50  // BEC__FDATap^^/.P
  E686: 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 46 32 60  // CI0LPCBEC__FBF2`
  E696: 7D 79 60 0A 08 00 60 60 7D 79 60 0A 08 00 61 60  // }y`...``}y`...a`

                            Store (Zero, ^^PCI0.LPCB.EC.FCMD)
                        }
                    }

  E6A6: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  E6B6: 5F 5F 46 43 4D 44                                // __FCMD

                    Else
                    {

  E6BC: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


  E6BE: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  E6C1: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x64))
                {

  E6C3: A0 4F 0B 93 99 69 00 0A 64                       // .O...i..d

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (Zero, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xC0, ^^PCI0.LPCB.EC.FCMD)

  E6CC: A0 4F 0A 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .O.^^/.PCI0LPCBE
  E6DC: 43 5F 5F 45 43 4F 4B 70 00 5E 5E 2F 04 50 43 49  // C__ECOKp.^^/.PCI
  E6EC: 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 0A C0  // 0LPCBEC__FDATp..
  E6FC: 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F 5F  // ^^/.PCI0LPCBEC__
  E70C: 46 43 4D 44                                      // FCMD

                        If (One)
                        {
                            Store (^^PCI0.LPCB.EC.FDAT, Local0)
                            Store (^^PCI0.LPCB.EC.FBUF, Local2)
                            Store (^^PCI0.LPCB.EC.FBF1, Local3)
                            Or (ShiftLeft (Local0, 0x08), Local2, Local0)
                            Or (ShiftLeft (Local0, 0x08), Local3, Local0)

  E710: A0 4B 06 01 70 5E 5E 2F 04 50 43 49 30 4C 50 43  // .K..p^^/.PCI0LPC
  E720: 42 45 43 5F 5F 46 44 41 54 60 70 5E 5E 2F 04 50  // BEC__FDAT`p^^/.P
  E730: 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55 46 62  // CI0LPCBEC__FBUFb
  E740: 70 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // p^^/.PCI0LPCBEC_
  E750: 5F 46 42 46 31 63 7D 79 60 0A 08 00 62 60 7D 79  // _FBF1c}y`...b`}y
  E760: 60 0A 08 00 63 60                                // `...c`

                            Store (Zero, ^^PCI0.LPCB.EC.FCMD)
                        }
                    }

  E766: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  E776: 5F 5F 46 43 4D 44                                // __FCMD

                    Else
                    {

  E77C: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


  E77E: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  E781: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x6E))
                {

  E783: A0 4F 0B 93 99 69 00 0A 6E                       // .O...i..n

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (One, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xC0, ^^PCI0.LPCB.EC.FCMD)

  E78C: A0 4F 0A 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .O.^^/.PCI0LPCBE
  E79C: 43 5F 5F 45 43 4F 4B 70 01 5E 5E 2F 04 50 43 49  // C__ECOKp.^^/.PCI
  E7AC: 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 0A C0  // 0LPCBEC__FDATp..
  E7BC: 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F 5F  // ^^/.PCI0LPCBEC__
  E7CC: 46 43 4D 44                                      // FCMD

                        If (One)
                        {
                            Store (^^PCI0.LPCB.EC.FDAT, Local0)
                            Store (^^PCI0.LPCB.EC.FBUF, Local2)
                            Store (^^PCI0.LPCB.EC.FBF1, Local3)
                            Or (ShiftLeft (Local0, 0x08), Local2, Local0)
                            Or (ShiftLeft (Local0, 0x08), Local3, Local0)

  E7D0: A0 4B 06 01 70 5E 5E 2F 04 50 43 49 30 4C 50 43  // .K..p^^/.PCI0LPC
  E7E0: 42 45 43 5F 5F 46 44 41 54 60 70 5E 5E 2F 04 50  // BEC__FDAT`p^^/.P
  E7F0: 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55 46 62  // CI0LPCBEC__FBUFb
  E800: 70 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // p^^/.PCI0LPCBEC_
  E810: 5F 46 42 46 31 63 7D 79 60 0A 08 00 62 60 7D 79  // _FBF1c}y`...b`}y
  E820: 60 0A 08 00 63 60                                // `...c`

                            Store (Zero, ^^PCI0.LPCB.EC.FCMD)
                        }
                    }

  E826: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  E836: 5F 5F 46 43 4D 44                                // __FCMD

                    Else
                    {

  E83C: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


  E83E: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  E841: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x6F))
                {

  E843: A0 4A 0A 93 99 69 00 0A 6F                       // .J...i..o

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (0x02, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xC0, ^^PCI0.LPCB.EC.FCMD)

  E84C: A0 4A 09 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .J.^^/.PCI0LPCBE
  E85C: 43 5F 5F 45 43 4F 4B 70 0A 02 5E 5E 2F 04 50 43  // C__ECOKp..^^/.PC
  E86C: 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 0A  // I0LPCBEC__FDATp.
  E87C: C0 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // .^^/.PCI0LPCBEC_
  E88C: 5F 46 43 4D 44                                   // _FCMD

                        If (One)
                        {
                            Store (^^PCI0.LPCB.EC.FDAT, Local1)
                            Store (^^PCI0.LPCB.EC.FBF2, Local0)
                            Or (ShiftLeft (Local0, 0x08), Local0, Local0)
                            Or (ShiftLeft (Local0, 0x08), Local1, Local0)

  E891: A0 45 05 01 70 5E 5E 2F 04 50 43 49 30 4C 50 43  // .E..p^^/.PCI0LPC
  E8A1: 42 45 43 5F 5F 46 44 41 54 61 70 5E 5E 2F 04 50  // BEC__FDATap^^/.P
  E8B1: 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 46 32 60  // CI0LPCBEC__FBF2`
  E8C1: 7D 79 60 0A 08 00 60 60 7D 79 60 0A 08 00 61 60  // }y`...``}y`...a`

                            Store (Zero, ^^PCI0.LPCB.EC.FCMD)
                        }
                    }

  E8D1: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  E8E1: 5F 5F 46 43 4D 44                                // __FCMD

                    Else
                    {

  E8E7: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


  E8E9: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  E8EC: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x70))
                {

  E8EE: A0 46 12 93 99 69 00 0A 70                       // .F...i..p

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (0x03, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xC0, ^^PCI0.LPCB.EC.FCMD)

  E8F7: A0 46 11 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .F.^^/.PCI0LPCBE
  E907: 43 5F 5F 45 43 4F 4B 70 0A 03 5E 5E 2F 04 50 43  // C__ECOKp..^^/.PC
  E917: 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 0A  // I0LPCBEC__FDATp.
  E927: C0 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // .^^/.PCI0LPCBEC_
  E937: 5F 46 43 4D 44                                   // _FCMD

                        If (One)
                        {
                            Store (^^PCI0.LPCB.EC.FBUF, Local1)
                            Store (^^PCI0.LPCB.EC.FBF1, Local0)
                            Or (ShiftLeft (Local1, 0x08), Local0, Local0)

  E93C: A0 4D 04 01 70 5E 5E 2F 04 50 43 49 30 4C 50 43  // .M..p^^/.PCI0LPC
  E94C: 42 45 43 5F 5F 46 42 55 46 61 70 5E 5E 2F 04 50  // BEC__FBUFap^^/.P
  E95C: 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 46 31 60  // CI0LPCBEC__FBF1`
  E96C: 7D 79 61 0A 08 00 60 60                          // }ya...``

                            Store (Zero, ^^PCI0.LPCB.EC.FCMD)
                        }

                        Store (0x04, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xC0, ^^PCI0.LPCB.EC.FCMD)

  E974: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  E984: 5F 5F 46 43 4D 44 70 0A 04 5E 5E 2F 04 50 43 49  // __FCMDp..^^/.PCI
  E994: 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 0A C0  // 0LPCBEC__FDATp..
  E9A4: 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F 5F  // ^^/.PCI0LPCBEC__
  E9B4: 46 43 4D 44                                      // FCMD

                        If (One)
                        {
                            Store (^^PCI0.LPCB.EC.FDAT, Local2)
                            Store (^^PCI0.LPCB.EC.FBUF, Local1)
                            Or (ShiftLeft (Local2, 0x08), Local1, Local1)
                            Or (ShiftLeft (Local1, 0x10), Local0, Local0)

  E9B8: A0 45 05 01 70 5E 5E 2F 04 50 43 49 30 4C 50 43  // .E..p^^/.PCI0LPC
  E9C8: 42 45 43 5F 5F 46 44 41 54 62 70 5E 5E 2F 04 50  // BEC__FDATbp^^/.P
  E9D8: 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55 46 61  // CI0LPCBEC__FBUFa
  E9E8: 7D 79 62 0A 08 00 61 61 7D 79 61 0A 10 00 60 60  // }yb...aa}ya...``

                            Store (Zero, ^^PCI0.LPCB.EC.FCMD)
                        }
                    }

  E9F8: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  EA08: 5F 5F 46 43 4D 44                                // __FCMD

                    Else
                    {

  EA0E: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


  EA10: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  EA13: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x71))
                {

  EA15: A0 46 12 93 99 69 00 0A 71                       // .F...i..q

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (0x05, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xC0, ^^PCI0.LPCB.EC.FCMD)

  EA1E: A0 46 11 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .F.^^/.PCI0LPCBE
  EA2E: 43 5F 5F 45 43 4F 4B 70 0A 05 5E 5E 2F 04 50 43  // C__ECOKp..^^/.PC
  EA3E: 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 0A  // I0LPCBEC__FDATp.
  EA4E: C0 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // .^^/.PCI0LPCBEC_
  EA5E: 5F 46 43 4D 44                                   // _FCMD

                        If (One)
                        {
                            Store (^^PCI0.LPCB.EC.FDAT, Local1)
                            Store (^^PCI0.LPCB.EC.FBUF, Local0)
                            Or (ShiftLeft (Local1, 0x08), Local0, Local0)

  EA63: A0 4D 04 01 70 5E 5E 2F 04 50 43 49 30 4C 50 43  // .M..p^^/.PCI0LPC
  EA73: 42 45 43 5F 5F 46 44 41 54 61 70 5E 5E 2F 04 50  // BEC__FDATap^^/.P
  EA83: 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55 46 60  // CI0LPCBEC__FBUF`
  EA93: 7D 79 61 0A 08 00 60 60                          // }ya...``

                            Store (Zero, ^^PCI0.LPCB.EC.FCMD)
                        }

                        Store (0x02, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xC0, ^^PCI0.LPCB.EC.FCMD)

  EA9B: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  EAAB: 5F 5F 46 43 4D 44 70 0A 02 5E 5E 2F 04 50 43 49  // __FCMDp..^^/.PCI
  EABB: 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 0A C0  // 0LPCBEC__FDATp..
  EACB: 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F 5F  // ^^/.PCI0LPCBEC__
  EADB: 46 43 4D 44                                      // FCMD

                        If (One)
                        {
                            Store (^^PCI0.LPCB.EC.FBUF, Local2)
                            Store (^^PCI0.LPCB.EC.FBF1, Local1)
                            Or (ShiftLeft (Local2, 0x08), Local1, Local1)
                            Or (ShiftLeft (Local1, 0x10), Local0, Local0)

  EADF: A0 45 05 01 70 5E 5E 2F 04 50 43 49 30 4C 50 43  // .E..p^^/.PCI0LPC
  EAEF: 42 45 43 5F 5F 46 42 55 46 62 70 5E 5E 2F 04 50  // BEC__FBUFbp^^/.P
  EAFF: 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 46 31 61  // CI0LPCBEC__FBF1a
  EB0F: 7D 79 62 0A 08 00 61 61 7D 79 61 0A 10 00 60 60  // }yb...aa}ya...``

                            Store (Zero, ^^PCI0.LPCB.EC.FCMD)
                        }
                    }

  EB1F: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  EB2F: 5F 5F 46 43 4D 44                                // __FCMD

                    Else
                    {

  EB35: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


  EB37: 70 FF 60                                         // p.`

                    Return (Local0)
                }


  EB3A: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x73))
                {
                    And (INDX, 0xFFFF, Local1)
                    And (ShiftRight (INDX, 0x10), 0xFFFF, Local2)

  EB3C: A0 4B 0E 93 99 69 00 0A 73 7B 49 4E 44 58 0B FF  // .K...i..s{INDX..
  EB4C: FF 61 7B 7A 49 4E 44 58 0A 10 00 0B FF FF 62     // .a{zINDX......b

                    If (LGreater (Local2, 0x02))
                    {

  EB5B: A0 08 94 62 0A 02                                // ...b..

                        Store (Zero, Local2)
                    }


  EB61: 70 00 62                                         // p.b

                    If (LGreater (Local1, 0xFF))
                    {

  EB64: A0 07 94 61 0A FF                                // ...a..

                        Return (Zero)
                    }

                    ShiftLeft (One, Local2, Local2)
                    Store (Local2, Local3)
                    Decrement (Local3)

  EB6A: A4 00 79 01 62 62 70 62 63 76 63                 // ..y.bbpbcvc

                    If (LGreater (Add (Local1, Local3), 0xFF))
                    {

  EB75: A0 0A 94 72 61 63 00 0A FF                       // ...rac...

                        Return (Zero)
                    }

                    Add (Local1, 0xFF700100, Local0)

  EB7E: A4 00 72 61 0C 00 01 70 FF 60                    // ..ra...p.`

                    Name (RBUF, 
  EB88: 08 52 42 55 46                                   // .RBUF

Buffer (0x04)
                    {
                         0x00, 0x00, 0x00, 0x00                         
                    })

  EB8D: 11 07 0A 04 00 00 00 00                          // ........

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

  EB95: A0 4D 08 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .M.^^/.PCI0LPCBE
  EBA5: 43 5F 5F 45 43 4F 4B                             // C__ECOK

                        OperationRegion (RH2M, SystemMemory, Local0, Local2)

  EBAC: 5B 80 52 48 32 4D 00 60 62                       // [.RH2M.`b

                        Switch (ToInteger (Local2))
                        {

  EBB5: A2 4D 06 01 70 99 62 00 5F 54 5F 31              // .M..p.b._T_1

                            Case (One)
                            {

  EBC1: A0 1D 93 5F 54 5F 31 01                          // ..._T_1.

                                Field (RH2M, ByteAcc, Lock, Preserve)
                                {
                                    RHMB,   8
                                }


  EBC9: 5B 81 0B 52 48 32 4D 11 52 48 4D 42 08           // [..RH2M.RHMB.

                                Store (RHMB, RBUF)
                            }

  EBD6: 70 52 48 4D 42 52 42 55 46                       // pRHMBRBUF

                            Case
  EBDF: A1 42 04                                         // .B.

 (0x02)
                            {

  EBE2: A0 1E 93 5F 54 5F 31 0A 02                       // ..._T_1..

                                Field (RH2M, ByteAcc, Lock, Preserve)
                                {
                                    RHMW,   16
                                }


  EBEB: 5B 81 0B 52 48 32 4D 11 52 48 4D 57 10           // [..RH2M.RHMW.

                                Store (RHMW, RBUF)
                            }

  EBF8: 70 52 48 4D 57 52 42 55 46                       // pRHMWRBUF

                            Case
  EC01: A1 20                                            // . 

 (0x04)
                            {

  EC03: A0 1E 93 5F 54 5F 31 0A 04                       // ..._T_1..

                                Field (RH2M, ByteAcc, Lock, Preserve)
                                {
                                    RHMD,   32
                                }


  EC0C: 5B 81 0B 52 48 32 4D 11 52 48 4D 44 20           // [..RH2M.RHMD 

                                Store (RHMD, RBUF)
                            }


  EC19: 70 52 48 4D 44 52 42 55 46                       // pRHMDRBUF

                        }
                    }


  EC22: A5                                               // .

                    Return (RBUF)
                }


  EC23: A4 52 42 55 46                                   // .RBUF

                If (LEqual (ToInteger (Arg1), 0x7A))
                {
                    Or (Local0, 0x02, Local0)
                    Or (Local0, 0x04, Local0)
                    Or (Local0, 0x10, Local0)
                    Or (Local0, 0x40, Local0)

  EC28: A0 1D 93 99 69 00 0A 7A 7D 60 0A 02 60 7D 60 0A  // ....i..z}`..`}`.
  EC38: 04 60 7D 60 0A 10 60 7D 60 0A 40 60              // .`}`..`}`.@`

                    Return (Local0)
                }


  EC44: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x14))
                {
                    Store (0x14, Local0)

  EC46: A0 0D 93 99 69 00 0A 14 70 0A 14 60              // ....i...p..`

                    Return (Local0)
                }


  EC52: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x1D))
                {
                    Store (0x1D, Local0)

  EC54: A0 0D 93 99 69 00 0A 1D 70 0A 1D 60              // ....i...p..`

                    Return (Local0)
                }


  EC60: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x1E))
                {

  EC62: A0 4F 0B 93 99 69 00 0A 1E                       // .O...i...

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (0xC1, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xA7, ^^PCI0.LPCB.EC.FBUF)
                        Store (0xB8, ^^PCI0.LPCB.EC.FCMD)

  EC6B: A0 40 0B 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .@.^^/.PCI0LPCBE
  EC7B: 43 5F 5F 45 43 4F 4B 70 0A C1 5E 5E 2F 04 50 43  // C__ECOKp..^^/.PC
  EC8B: 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 0A  // I0LPCBEC__FDATp.
  EC9B: A7 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // .^^/.PCI0LPCBEC_
  ECAB: 5F 46 42 55 46 70 0A B8 5E 5E 2F 04 50 43 49 30  // _FBUFp..^^/.PCI0
  ECBB: 4C 50 43 42 45 43 5F 5F 46 43 4D 44              // LPCBEC__FCMD

                        If (And (^^PCI0.LPCB.EC.OEM3, 0x8000))
                        {

  ECC7: A0 30 7B 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .0{^^/.PCI0LPCBE
  ECD7: 43 5F 5F 4F 45 4D 33 0B 00 80 00                 // C__OEM3....

                            Store (One, ^^PCI0.LPCB.EC.SLFG)
                        }

  ECE2: 70 01 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  ECF2: 5F 5F 53 4C 46 47                                // __SLFG

                        Else
                        {

  ECF8: A1 17                                            // ..

                            Store (Zero, ^^PCI0.LPCB.EC.SLFG)
                        }

                        ^^AC.ADJP (Zero)
                    }

                    Store (0x1E, Local0)

  ECFA: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  ED0A: 5F 5F 53 4C 46 47 5E 5E 2E 41 43 5F 5F 41 44 4A  // __SLFG^^.AC__ADJ
  ED1A: 50 00 70 0A 1E 60                                // P.p..`

                    Return (Local0)
                }


  ED20: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x1F))
                {

  ED22: A0 4E 07 93 99 69 00 0A 1F                       // .N...i...

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

  ED2B: A0 4F 06 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .O.^^/.PCI0LPCBE
  ED3B: 43 5F 5F 45 43 4F 4B                             // C__ECOK

                        If (ARGS)
                        {
                            Store (One, ^^PCI0.LPCB.EC.FDAT)

  ED42: A0 22 41 52 47 53 70 01 5E 5E 2F 04 50 43 49 30  // ."ARGSp.^^/.PCI0
  ED52: 4C 50 43 42 45 43 5F 5F 46 44 41 54              // LPCBEC__FDAT

                            Store (0xDF, P80H)
                        }

  ED5E: 70 0A DF 50 38 30 48                             // p..P80H

                        Else
                        {
                            Store (Zero, ^^PCI0.LPCB.EC.FDAT)

  ED65: A1 1E 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42  // ..p.^^/.PCI0LPCB
  ED75: 45 43 5F 5F 46 44 41 54                          // EC__FDAT

                            Store (0x5F, P80H)
                        }


  ED7D: 70 0A 5F 50 38 30 48                             // p._P80H

                        Store (0xA4, ^^PCI0.LPCB.EC.FCMD)
                    }

                    Store (0x1F, Local0)

  ED84: 70 0A A4 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  ED94: 43 5F 5F 46 43 4D 44 70 0A 1F 60                 // C__FCMDp..`

                    Return (Local0)
                }


  ED9F: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x20))
                {

  EDA1: A0 49 07 93 99 69 00 0A 20                       // .I...i.. 

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

  EDAA: A0 4A 06 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .J.^^/.PCI0LPCBE
  EDBA: 43 5F 5F 45 43 4F 4B                             // C__ECOK

                        If (ARGS)
                        {

  EDC1: A0 09 41 52 47 53                                // ..ARGS

                            Store (0xC2, Local1)
                        }

  EDC7: 70 0A C2 61                                      // p..a

                        Else
                        {

  EDCB: A1 05                                            // ..

                            Store (0xC3, Local1)
                        }

                        Store (Local1, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xA2, ^^PCI0.LPCB.EC.FBUF)

  EDCD: 70 0A C3 61 70 61 5E 5E 2F 04 50 43 49 30 4C 50  // p..apa^^/.PCI0LP
  EDDD: 43 42 45 43 5F 5F 46 44 41 54 70 0A A2 5E 5E 2F  // CBEC__FDATp..^^/
  EDED: 04 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55  // .PCI0LPCBEC__FBU
  EDFD: 46                                               // F

                        Store (0xB8, ^^PCI0.LPCB.EC.FCMD)
                    }

                    Store (0x20, Local0)

  EDFE: 70 0A B8 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  EE0E: 43 5F 5F 46 43 4D 44 70 0A 20 60                 // C__FCMDp. `

                    Return (Local0)
                }


  EE19: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x21))
                {

  EE1B: A0 49 07 93 99 69 00 0A 21                       // .I...i..!

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

  EE24: A0 4A 06 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .J.^^/.PCI0LPCBE
  EE34: 43 5F 5F 45 43 4F 4B                             // C__ECOK

                        If (ARGS)
                        {

  EE3B: A0 09 41 52 47 53                                // ..ARGS

                            Store (0xC2, Local1)
                        }

  EE41: 70 0A C2 61                                      // p..a

                        Else
                        {

  EE45: A1 05                                            // ..

                            Store (0xC3, Local1)
                        }

                        Store (Local1, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xA3, ^^PCI0.LPCB.EC.FBUF)

  EE47: 70 0A C3 61 70 61 5E 5E 2F 04 50 43 49 30 4C 50  // p..apa^^/.PCI0LP
  EE57: 43 42 45 43 5F 5F 46 44 41 54 70 0A A3 5E 5E 2F  // CBEC__FDATp..^^/
  EE67: 04 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55  // .PCI0LPCBEC__FBU
  EE77: 46                                               // F

                        Store (0xB8, ^^PCI0.LPCB.EC.FCMD)
                    }

                    Store (0x21, Local0)

  EE78: 70 0A B8 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  EE88: 43 5F 5F 46 43 4D 44 70 0A 21 60                 // C__FCMDp.!`

                    Return (Local0)
                }


  EE93: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x22))
                {

  EE95: A0 49 07 93 99 69 00 0A 22                       // .I...i.."

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

  EE9E: A0 4A 06 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .J.^^/.PCI0LPCBE
  EEAE: 43 5F 5F 45 43 4F 4B                             // C__ECOK

                        If (ARGS)
                        {

  EEB5: A0 09 41 52 47 53                                // ..ARGS

                            Store (0xC2, Local1)
                        }

  EEBB: 70 0A C2 61                                      // p..a

                        Else
                        {

  EEBF: A1 05                                            // ..

                            Store (0xC3, Local1)
                        }

                        Store (Local1, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xA1, ^^PCI0.LPCB.EC.FBUF)

  EEC1: 70 0A C3 61 70 61 5E 5E 2F 04 50 43 49 30 4C 50  // p..apa^^/.PCI0LP
  EED1: 43 42 45 43 5F 5F 46 44 41 54 70 0A A1 5E 5E 2F  // CBEC__FDATp..^^/
  EEE1: 04 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55  // .PCI0LPCBEC__FBU
  EEF1: 46                                               // F

                        Store (0xB8, ^^PCI0.LPCB.EC.FCMD)
                    }

                    Store (0x22, Local0)

  EEF2: 70 0A B8 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  EF02: 43 5F 5F 46 43 4D 44 70 0A 22 60                 // C__FCMDp."`

                    Return (Local0)
                }


  EF0D: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x26))
                {
                    Store (0x26, Local0)

  EF0F: A0 0D 93 99 69 00 0A 26 70 0A 26 60              // ....i..&p.&`

                    Return (Local0)
                }


  EF1B: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x2A))
                {

  EF1D: A0 49 07 93 99 69 00 0A 2A                       // .I...i..*

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

  EF26: A0 4A 06 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .J.^^/.PCI0LPCBE
  EF36: 43 5F 5F 45 43 4F 4B                             // C__ECOK

                        If (ARGS)
                        {

  EF3D: A0 09 41 52 47 53                                // ..ARGS

                            Store (0xC2, Local1)
                        }

  EF43: 70 0A C2 61                                      // p..a

                        Else
                        {

  EF47: A1 05                                            // ..

                            Store (0xC3, Local1)
                        }

                        Store (Local1, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xA5, ^^PCI0.LPCB.EC.FBUF)

  EF49: 70 0A C3 61 70 61 5E 5E 2F 04 50 43 49 30 4C 50  // p..apa^^/.PCI0LP
  EF59: 43 42 45 43 5F 5F 46 44 41 54 70 0A A5 5E 5E 2F  // CBEC__FDATp..^^/
  EF69: 04 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55  // .PCI0LPCBEC__FBU
  EF79: 46                                               // F

                        Store (0xB8, ^^PCI0.LPCB.EC.FCMD)
                    }

                    Store (0x2A, Local0)

  EF7A: 70 0A B8 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  EF8A: 43 5F 5F 46 43 4D 44 70 0A 2A 60                 // C__FCMDp.*`

                    Return (Local0)
                }


  EF95: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x2C))
                {
                    Store (0x2C, Local0)

  EF97: A0 0D 93 99 69 00 0A 2C 70 0A 2C 60              // ....i..,p.,`

                    Return (Local0)
                }


  EFA3: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x31))
                {

  EFA5: A0 36 93 99 69 00 0A 31                          // .6..i..1

                    CreateField (Arg2, Zero, One, KMUT)

  EFAD: 5B 13 6A 00 01 4B 4D 55 54                       // [.j..KMUT

                    CreateField (Arg2, One, 0x07, KAUD)

  EFB6: 5B 13 6A 01 0A 07 4B 41 55 44                    // [.j...KAUD

                    If (^^PCI0.LPCB.EC.ECOK){}
                    Store (0x31, Local0)

  EFC0: A0 15 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
  EFD0: 5F 5F 45 43 4F 4B 70 0A 31 60                    // __ECOKp.1`

                    Return (Local0)
                }


  EFDA: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x3D))
                {

  EFDC: A0 44 08 93 99 69 00 0A 3D                       // .D...i..=

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (0x61, P80H)
                        Store (One, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xCA, ^^PCI0.LPCB.EC.FCMD)
                        Store (^^PCI0.LPCB.EC.FBUF, Local0)

  EFE5: A0 46 07 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .F.^^/.PCI0LPCBE
  EFF5: 43 5F 5F 45 43 4F 4B 70 0A 61 50 38 30 48 70 01  // C__ECOKp.aP80Hp.
  F005: 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F 5F  // ^^/.PCI0LPCBEC__
  F015: 46 44 41 54 70 0A CA 5E 5E 2F 04 50 43 49 30 4C  // FDATp..^^/.PCI0L
  F025: 50 43 42 45 43 5F 5F 46 43 4D 44 70 5E 5E 2F 04  // PCBEC__FCMDp^^/.
  F035: 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55 46  // PCI0LPCBEC__FBUF
  F045: 60                                               // `

                        Store (Zero, ^^PCI0.LPCB.EC.FCMD)
                    }

  F046: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  F056: 5F 5F 46 43 4D 44                                // __FCMD

                    Else
                    {

  F05C: A1 04                                            // ..

                        Store (Zero, Local0)
                    }
                }


  F05E: 70 00 60                                         // p.`

                If (LEqual (ToInteger (Arg1), 0x46))
                {
                    Store (One, HKDR)
                    Store (0xE1, SSMP)
                    Store (0xE1, P80H)

  F061: A0 41 0E 93 99 69 00 0A 46 70 01 48 4B 44 52 70  // .A...i..Fp.HKDRp
  F071: 0A E1 53 53 4D 50 70 0A E1 50 38 30 48           // ..SSMPp..P80H

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (0x05, ^^PCI0.LPCB.EC.FDAT)
                        Store (One, ^^PCI0.LPCB.EC.FBUF)
                        Store (0xC4, ^^PCI0.LPCB.EC.FCMD)

  F07E: A0 44 09 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .D.^^/.PCI0LPCBE
  F08E: 43 5F 5F 45 43 4F 4B 70 0A 05 5E 5E 2F 04 50 43  // C__ECOKp..^^/.PC
  F09E: 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 01  // I0LPCBEC__FDATp.
  F0AE: 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F 5F  // ^^/.PCI0LPCBEC__
  F0BE: 46 42 55 46 70 0A C4 5E 5E 2F 04 50 43 49 30 4C  // FBUFp..^^/.PCI0L
  F0CE: 50 43 42 45 43 5F 5F 46 43 4D 44                 // PCBEC__FCMD

                        If (And (LKFG, 0x04))
                        {
                            Store (0x05, ODA0)
                            Store (One, ODA1)
                            Store (0xC4, OCMD)
                            Store (0x03, ODAL)
                            Store (0x68, OIOP)
                            Store (0x0A, PRM0)

  F0D9: A0 39 7B 4C 4B 46 47 0A 04 00 70 0A 05 4F 44 41  // .9{LKFG...p..ODA
  F0E9: 30 70 01 4F 44 41 31 70 0A C4 4F 43 4D 44 70 0A  // 0p.ODA1p..OCMDp.
  F0F9: 03 4F 44 41 4C 70 0A 68 4F 49 4F 50 70 0A 0A 50  // .ODALp.hOIOPp..P
  F109: 52 4D 30                                         // RM0

                            Store (0xE0, SSMP)
                        }
                    }


  F10C: 70 0A E0 53 53 4D 50                             // p..SSMP

                    If (And (OEMF, 0x10))
                    {

  F113: A0 0D 7B 4F 45 4D 46 0A 10 00                    // ..{OEMF...

                        Or (Local0, One, Local0)
                    }


  F11D: 7D 60 01 60                                      // }`.`

                    If (And (OEMF, 0x20))
                    {

  F121: A0 0E 7B 4F 45 4D 46 0A 20 00                    // ..{OEMF. .

                        Or (Local0, 0x04, Local0)
                    }


  F12B: 7D 60 0A 04 60                                   // }`..`

                    If (And (OEMF, 0x0800))
                    {

  F130: A0 10 7B 4F 45 4D 46 0B 00 08 00                 // ..{OEMF....

                        Or (Local0, 0x0100, Local0)
                    }


  F13B: 7D 60 0B 00 01 60                                // }`...`

                    Return (Local0)
                }


  F141: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x47))
                {
                    Store (0x47, Local0)

  F143: A0 0D 93 99 69 00 0A 47 70 0A 47 60              // ....i..Gp.G`

                    Return (Local0)
                }


  F14F: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x48))
                {
                    Store (One, ^^AC.IGNR)
                    Store (0x48, Local0)

  F151: A0 1A 93 99 69 00 0A 48 70 01 5E 5E 2E 41 43 5F  // ....i..Hp.^^.AC_
  F161: 5F 49 47 4E 52 70 0A 48 60                       // _IGNRp.H`

                    Return (Local0)
                }


  F16A: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x49))
                {
                    Notify (PWRB, 0x80)
                    Store (0x49, Local0)

  F16C: A0 14 93 99 69 00 0A 49 86 50 57 52 42 0A 80 70  // ....i..I.PWRB..p
  F17C: 0A 49 60                                         // .I`

                    Return (Local0)
                }


  F17F: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x4A))
                {

  F181: A0 48 07 93 99 69 00 0A 4A                       // .H...i..J

                    If (CondRefOf (\_SB.IFFS.FFST))
                    {

  F18A: A0 49 06 5B 12 5C 2F 03 5F 53 42 5F 49 46 46 53  // .I.[.\/._SB_IFFS
  F19A: 46 46 53 54 00                                   // FFST.

                        If (And (^^IFFS.GFFS, One))
                        {

  F19F: A0 44 05 7B 5E 5E 2E 49 46 46 53 47 46 46 53 01  // .D.{^^.IFFSGFFS.
  F1AF: 00                                               // .

                            If (^^PCI0.LPCB.EC.ECOK)
                            {
                                Store (One, ^^PCI0.LPCB.EC.FDAT)

  F1B0: A0 43 04 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .C.^^/.PCI0LPCBE
  F1C0: 43 5F 5F 45 43 4F 4B 70 01 5E 5E 2F 04 50 43 49  // C__ECOKp.^^/.PCI
  F1D0: 30 4C 50 43 42 45 43 5F 5F 46 44 41 54           // 0LPCBEC__FDAT

                                Store (0xB9, ^^PCI0.LPCB.EC.FCMD)
                            }
                        }
                    }

                    Store (0x4A, Local0)

  F1DD: 70 0A B9 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  F1ED: 43 5F 5F 46 43 4D 44 70 0A 4A 60                 // C__FCMDp.J`

                    Return (Local0)
                }


  F1F8: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x4C))
                {

  F1FA: A0 49 07 93 99 69 00 0A 4C                       // .I...i..L

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

  F203: A0 4A 06 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .J.^^/.PCI0LPCBE
  F213: 43 5F 5F 45 43 4F 4B                             // C__ECOK

                        If (ARGS)
                        {

  F21A: A0 09 41 52 47 53                                // ..ARGS

                            Store (0xC2, Local1)
                        }

  F220: 70 0A C2 61                                      // p..a

                        Else
                        {

  F224: A1 05                                            // ..

                            Store (0xC3, Local1)
                        }

                        Store (Local1, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xA4, ^^PCI0.LPCB.EC.FBUF)

  F226: 70 0A C3 61 70 61 5E 5E 2F 04 50 43 49 30 4C 50  // p..apa^^/.PCI0LP
  F236: 43 42 45 43 5F 5F 46 44 41 54 70 0A A4 5E 5E 2F  // CBEC__FDATp..^^/
  F246: 04 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55  // .PCI0LPCBEC__FBU
  F256: 46                                               // F

                        Store (0xB8, ^^PCI0.LPCB.EC.FCMD)
                    }

                    Store (0x4C, Local0)

  F257: 70 0A B8 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  F267: 43 5F 5F 46 43 4D 44 70 0A 4C 60                 // C__FCMDp.L`

                    Return (Local0)
                }


  F272: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x4E))
                {
                    Store (0x4E, Local0)

  F274: A0 0D 93 99 69 00 0A 4E 70 0A 4E 60              // ....i..Np.N`

                    Return (Local0)
                }


  F280: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x4F))
                {

  F282: A0 42 15 93 99 69 00 0A 4F                       // .B...i..O

                    Switch (ToInteger (ARGS))
                    {

  F28B: A2 43 14 01 70 99 41 52 47 53 00 5F 54 5F 32     // .C..p.ARGS._T_2

                        Case (Zero)
                        {
                            Store (0x4F, P80H)

  F29A: A0 44 05 93 5F 54 5F 32 00 70 0A 4F 50 38 30 48  // .D.._T_2.p.OP80H

                            If (^^PCI0.LPCB.EC.ECOK)
                            {
                                And (OEMF, 0xFFF9, OEMF)
                                Store (Zero, ^^PCI0.LPCB.EC.BBST)
                                ^^AC.ADJP (Zero)
                            }
                        }

  F2AA: A0 44 04 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .D.^^/.PCI0LPCBE
  F2BA: 43 5F 5F 45 43 4F 4B 7B 4F 45 4D 46 0B F9 FF 4F  // C__ECOK{OEMF...O
  F2CA: 45 4D 46 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43  // EMFp.^^/.PCI0LPC
  F2DA: 42 45 43 5F 5F 42 42 53 54 5E 5E 2E 41 43 5F 5F  // BEC__BBST^^.AC__
  F2EA: 41 44 4A 50 00                                   // ADJP.

                        Case
  F2EF: A1 4E 0D                                         // .N.

 (One)
                        {
                            Store (0x5F, P80H)

  F2F2: A0 48 05 93 5F 54 5F 32 01 70 0A 5F 50 38 30 48  // .H.._T_2.p._P80H

                            If (^^PCI0.LPCB.EC.ECOK)
                            {
                                Or (And (OEMF, 0xFFF9), 0x02, OEMF)
                                Store (Zero, ^^PCI0.LPCB.EC.BBST)
                                ^^AC.ADJP (Zero)
                            }
                        }

  F302: A0 48 04 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .H.^^/.PCI0LPCBE
  F312: 43 5F 5F 45 43 4F 4B 7D 7B 4F 45 4D 46 0B F9 FF  // C__ECOK}{OEMF...
  F322: 00 0A 02 4F 45 4D 46 70 00 5E 5E 2F 04 50 43 49  // ...OEMFp.^^/.PCI
  F332: 30 4C 50 43 42 45 43 5F 5F 42 42 53 54 5E 5E 2E  // 0LPCBEC__BBST^^.
  F342: 41 43 5F 5F 41 44 4A 50 00                       // AC__ADJP.

                        Case
  F34B: A1 42 08                                         // .B.

 (0x02)
                        {
                            Store (0x6F, P80H)

  F34E: A0 4F 07 93 5F 54 5F 32 0A 02 70 0A 6F 50 38 30  // .O.._T_2..p.oP80
  F35E: 48                                               // H

                            If (^^PCI0.LPCB.EC.ECOK)
                            {
                                Or (And (OEMF, 0xFFF9), 0x04, OEMF)
                                ^^AC.ADJP (Zero)

  F35F: A0 4E 06 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .N.^^/.PCI0LPCBE
  F36F: 43 5F 5F 45 43 4F 4B 7D 7B 4F 45 4D 46 0B F9 FF  // C__ECOK}{OEMF...
  F37F: 00 0A 04 4F 45 4D 46 5E 5E 2E 41 43 5F 5F 41 44  // ...OEMF^^.AC__AD
  F38F: 4A 50 00                                         // JP.

                                If (^^AC.ACFG)
                                {

  F392: A0 22 5E 5E 2E 41 43 5F 5F 41 43 46 47           // ."^^.AC__ACFG

                                    Store (Zero, ^^PCI0.LPCB.EC.BBST)
                                }

  F39F: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
  F3AF: 5F 5F 42 42 53 54                                // __BBST

                                Else
                                {

  F3B5: A1 18                                            // ..

                                    Store (0x51, ^^PCI0.LPCB.EC.BBST)
                                }
                            }
                        }


  F3B7: 70 0A 51 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p.Q^^/.PCI0LPCBE
  F3C7: 43 5F 5F 42 42 53 54                             // C__BBST

                    }

                    Store (0x4F, Local0)

  F3CE: A5 70 0A 4F 60                                   // .p.O`

                    Return (Local0)
                }


  F3D3: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x55))
                {

  F3D5: A0 40 05 93 99 69 00 0A 55                       // .@...i..U

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

  F3DE: A0 41 04 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .A.^^/.PCI0LPCBE
  F3EE: 43 5F 5F 45 43 4F 4B                             // C__ECOK

                        Or (^^PCI0.LPCB.EC.INF2, 0x02, ^^PCI0.LPCB.EC.INF2)
                    }

                    Store (0x55, Local0)

  F3F5: 7D 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // }^^/.PCI0LPCBEC_
  F405: 5F 49 4E 46 32 0A 02 5E 5E 2F 04 50 43 49 30 4C  // _INF2..^^/.PCI0L
  F415: 50 43 42 45 43 5F 5F 49 4E 46 32 70 0A 55 60     // PCBEC__INF2p.U`

                    Return (Local0)
                }


  F424: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x56))
                {
                    Store (0x56, Local0)

  F426: A0 0D 93 99 69 00 0A 56 70 0A 56 60              // ....i..Vp.V`

                    Return (Local0)
                }


  F432: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x57))
                {
                    Store (0x57, Local0)

  F434: A0 0D 93 99 69 00 0A 57 70 0A 57 60              // ....i..Wp.W`

                    Return (Local0)
                }


  F440: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x5A))
                {

  F442: A0 4D 05 93 99 69 00 0A 5A                       // .M...i..Z

                    Switch (ToInteger (ARGS))
                    {

  F44B: A2 4E 04 01 70 99 41 52 47 53 00 5F 54 5F 33     // .N..p.ARGS._T_3

                        Case (Zero)
                        {
                            Store (One, ^^LID0.WMIF)

  F45A: A0 1B 93 5F 54 5F 33 00 70 01 5E 5E 2E 4C 49 44  // ..._T_3.p.^^.LID
  F46A: 30 57 4D 49 46                                   // 0WMIF

                            Notify (LID0, 0x80)
                        }

  F46F: 86 4C 49 44 30 0A 80                             // .LID0..

                        Case
  F476: A1 22                                            // ."

 (One)
                        {

  F478: A0 0E 93 5F 54 5F 33 01                          // ..._T_3.

                            Notify (SLPB, 0x80)
                        }

  F480: 86 53 4C 50 42 0A 80                             // .SLPB..

                        Case
  F487: A1 11                                            // ..

 (0x02)
                        {

  F489: A0 0F 93 5F 54 5F 33 0A 02                       // ..._T_3..

                            Notify (PWRB, 0x80)
                        }


  F492: 86 50 57 52 42 0A 80                             // .PWRB..

                    }

                    Store (0x5A, Local0)

  F499: A5 70 0A 5A 60                                   // .p.Z`

                    Return (Local0)
                }


  F49E: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x5B))
                {
                    Store (ARGS, PRM1)
                    Store (0x07, PRM0)
                    Store (0xE0, SSMP)
                    Store (0x5B, Local0)

  F4A0: A0 24 93 99 69 00 0A 5B 70 41 52 47 53 50 52 4D  // .$..i..[pARGSPRM
  F4B0: 31 70 0A 07 50 52 4D 30 70 0A E0 53 53 4D 50 70  // 1p..PRM0p..SSMPp
  F4C0: 0A 5B 60                                         // .[`

                    Return (Local0)
                }


  F4C3: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x5E))
                {

  F4C5: A0 4A 06 93 99 69 00 0A 5E                       // .J...i..^

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (0xC1, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xA6, ^^PCI0.LPCB.EC.FBUF)

  F4CE: A0 4B 05 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .K.^^/.PCI0LPCBE
  F4DE: 43 5F 5F 45 43 4F 4B 70 0A C1 5E 5E 2F 04 50 43  // C__ECOKp..^^/.PC
  F4EE: 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 0A  // I0LPCBEC__FDATp.
  F4FE: A6 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // .^^/.PCI0LPCBEC_
  F50E: 5F 46 42 55 46                                   // _FBUF

                        Store (0xB8, ^^PCI0.LPCB.EC.FCMD)
                    }

                    Store (0x5E, Local0)

  F513: 70 0A B8 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  F523: 43 5F 5F 46 43 4D 44 70 0A 5E 60                 // C__FCMDp.^`

                    Return (Local0)
                }


  F52E: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x65))
                {

  F530: A0 49 07 93 99 69 00 0A 65                       // .I...i..e

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

  F539: A0 4A 06 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .J.^^/.PCI0LPCBE
  F549: 43 5F 5F 45 43 4F 4B                             // C__ECOK

                        If (ARGS)
                        {

  F550: A0 09 41 52 47 53                                // ..ARGS

                            Store (0xC2, Local1)
                        }

  F556: 70 0A C2 61                                      // p..a

                        Else
                        {

  F55A: A1 05                                            // ..

                            Store (0xC3, Local1)
                        }

                        Store (Local1, ^^PCI0.LPCB.EC.FDAT)
                        Store (0xA9, ^^PCI0.LPCB.EC.FBUF)

  F55C: 70 0A C3 61 70 61 5E 5E 2F 04 50 43 49 30 4C 50  // p..apa^^/.PCI0LP
  F56C: 43 42 45 43 5F 5F 46 44 41 54 70 0A A9 5E 5E 2F  // CBEC__FDATp..^^/
  F57C: 04 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55  // .PCI0LPCBEC__FBU
  F58C: 46                                               // F

                        Store (0xB8, ^^PCI0.LPCB.EC.FCMD)
                    }

                    Store (0x65, Local0)

  F58D: 70 0A B8 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  F59D: 43 5F 5F 46 43 4D 44 70 0A 65 60                 // C__FCMDp.e`

                    Return (Local0)
                }


  F5A8: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x67))
                {
                    Store (And (ShiftRight (ARGS, 0x0C), 0x0F), Local2)

  F5AA: A0 46 85 93 99 69 00 0A 67 70 7B 7A 41 52 47 53  // .F...i..gp{zARGS
  F5BA: 0A 0C 00 0A 0F 00 62                             // ......b

                    If (
  F5C1: A0 09 92                                         // ...

LGreaterEqual (Local2, 0x0A))
                    {

  F5C4: 95 62 0A 0A                                      // .b..

                        Store (Zero, Local2)
                    }

  F5C8: 70 00 62                                         // p.b

                    Else
                    {
                        Multiply (Local2, 0x19, Local2)

  F5CB: A1 0B 77 62 0A 19 62                             // ..wb..b

                        Subtract (0xFF, Local2, Local2)
                    }

                    Store (And (ShiftRight (ARGS, 0x10), 0xFF), Local3)
                    Store (And (ShiftRight (ARGS, 0x18), 0x0F), Local4)
                    Store (And (ShiftRight (ARGS, 0x1C), 0x0F), Local7)

  F5D2: 74 0A FF 62 62 70 7B 7A 41 52 47 53 0A 10 00 0A  // t..bbp{zARGS....
  F5E2: FF 00 63 70 7B 7A 41 52 47 53 0A 18 00 0A 0F 00  // ..cp{zARGS......
  F5F2: 64 70 7B 7A 41 52 47 53 0A 1C 00 0A 0F 00 67     // dp{zARGS......g

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

  F601: A0 49 7F 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .I.^^/.PCI0LPCBE
  F611: 43 5F 5F 45 43 4F 4B                             // C__ECOK

                        If (LAnd (
  F618: A0 4F 06 90 92                                   // .O...

LGreaterEqual (Local7, 0x07), 
  F61D: 95 67 0A 07                                      // .g..


  F621: 92                                               // .

LLessEqual (Local7, 0x0B)))
                        {

  F622: 94 67 0A 0B                                      // .g..

                            If (And (LKFG, 0x04))
                            {
                                Store (Local7, ODA0)
                                Store (0xC4, OCMD)
                                Store (0x02, ODAL)
                                Store (0x68, OIOP)
                                Store (0x0A, PRM0)

  F626: A0 32 7B 4C 4B 46 47 0A 04 00 70 67 4F 44 41 30  // .2{LKFG...pgODA0
  F636: 70 0A C4 4F 43 4D 44 70 0A 02 4F 44 41 4C 70 0A  // p..OCMDp..ODALp.
  F646: 68 4F 49 4F 50 70 0A 0A 50 52 4D 30              // hOIOPp..PRM0

                                Store (0xE0, SSMP)
                            }

  F652: 70 0A E0 53 53 4D 50                             // p..SSMP

                            Else
                            {
                                Store (Local7, ^^PCI0.LPCB.EC.FDAT)

  F659: A1 2E 70 67 5E 5E 2F 04 50 43 49 30 4C 50 43 42  // ..pg^^/.PCI0LPCB
  F669: 45 43 5F 5F 46 44 41 54                          // EC__FDAT

                                Store (0xC4, ^^PCI0.LPCB.EC.FCMD)
                            }
                        }

  F671: 70 0A C4 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  F681: 43 5F 5F 46 43 4D 44                             // C__FCMD

                        Else
                        {

  F688: A1 42 77                                         // .Bw

                            If (LEqual (And (LKFG, 0x02), Zero))
                            {

  F68B: A0 48 14 93 7B 4C 4B 46 47 0A 02 00 00           // .H..{LKFG....

                                If (LAnd (
  F698: A0 4B 13 90 92                                   // .K...

LGreaterEqual (Local7, Zero), 
  F69D: 95 67 00                                         // .g.


  F6A0: 92                                               // .

LLessEqual (Local7, One)))
                                {
                                    Store (Zero, Local0)
                                    Store (Zero, Local1)
                                    Store (And (ARGS, 0x07), Local0)
                                    Or (Local0, And (ShiftRight (ARGS, One), 0x38), Local0)
                                    Or (Local0, And (ShiftRight (ARGS, 0x02), 0x01C0), Local0)

  F6A1: 94 67 01 70 00 60 70 00 61 70 7B 41 52 47 53 0A  // .g.p.`p.ap{ARGS.
  F6B1: 07 00 60 7D 60 7B 7A 41 52 47 53 01 00 0A 38 00  // ..`}`{zARGS...8.
  F6C1: 60 7D 60 7B 7A 41 52 47 53 0A 02 00 0B C0 01 00  // `}`{zARGS.......
  F6D1: 60                                               // `

                                    If (And (ARGS, 0x40))
                                    {

  F6D2: A0 0F 7B 41 52 47 53 0A 40 00                    // ..{ARGS.@.

                                        Or (Local1, 0x0251, Local1)
                                    }


  F6DC: 7D 61 0B 51 02 61                                // }a.Q.a

                                    If (And (ARGS, 0x20))
                                    {

  F6E2: A0 0F 7B 41 52 47 53 0A 20 00                    // ..{ARGS. .

                                        Or (Local1, 0x04A2, Local1)
                                    }


  F6EC: 7D 61 0B A2 04 61                                // }a...a

                                    If (And (ARGS, 0x10))
                                    {

  F6F2: A0 0F 7B 41 52 47 53 0A 10 00                    // ..{ARGS...

                                        Or (Local1, 0x090C, Local1)
                                    }

                                    Store (Local0, ^^PCI0.LPCB.EC.FDAT)
                                    Store (ShiftRight (Local0, 0x08), ^^PCI0.LPCB.EC.FBUF)
                                    Store (0xC2, ^^PCI0.LPCB.EC.FCMD)
                                    Store (Local1, ^^PCI0.LPCB.EC.FDAT)
                                    Store (ShiftRight (Local1, 0x08), ^^PCI0.LPCB.EC.FBUF)
                                    Store (0xC7, ^^PCI0.LPCB.EC.FCMD)
                                    Store (0x02, ^^PCI0.LPCB.EC.FDAT)
                                    Store (Local2, ^^PCI0.LPCB.EC.FBUF)

  F6FC: 7D 61 0B 0C 09 61 70 60 5E 5E 2F 04 50 43 49 30  // }a...ap`^^/.PCI0
  F70C: 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 7A 60 0A  // LPCBEC__FDATpz`.
  F71C: 08 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
  F72C: 5F 5F 46 42 55 46 70 0A C2 5E 5E 2F 04 50 43 49  // __FBUFp..^^/.PCI
  F73C: 30 4C 50 43 42 45 43 5F 5F 46 43 4D 44 70 61 5E  // 0LPCBEC__FCMDpa^
  F74C: 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F 5F 46  // ^/.PCI0LPCBEC__F
  F75C: 44 41 54 70 7A 61 0A 08 00 5E 5E 2F 04 50 43 49  // DATpza...^^/.PCI
  F76C: 30 4C 50 43 42 45 43 5F 5F 46 42 55 46 70 0A C7  // 0LPCBEC__FBUFp..
  F77C: 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F 5F  // ^^/.PCI0LPCBEC__
  F78C: 46 43 4D 44 70 0A 02 5E 5E 2F 04 50 43 49 30 4C  // FCMDp..^^/.PCI0L
  F79C: 50 43 42 45 43 5F 5F 46 44 41 54 70 62 5E 5E 2F  // PCBEC__FDATpb^^/
  F7AC: 04 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55  // .PCI0LPCBEC__FBU
  F7BC: 46                                               // F

                                    Store (0xC4, ^^PCI0.LPCB.EC.FCMD)
                                }
                            }


  F7BD: 70 0A C4 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  F7CD: 43 5F 5F 46 43 4D 44                             // C__FCMD

                            If (LEqual (Local7, Zero))
                            {

  F7D4: A0 41 0C 93 67 00                                // .A..g.

                                If (And (LKFG, 0x02))
                                {
                                    Store (Zero, Local0)
                                    Store (And (ARGS, 0x07), Local0)
                                    Or (Local0, And (ShiftRight (ARGS, One), 0x38), Local0)

  F7DA: A0 34 7B 4C 4B 46 47 0A 02 00 70 00 60 70 7B 41  // .4{LKFG...p.`p{A
  F7EA: 52 47 53 0A 07 00 60 7D 60 7B 7A 41 52 47 53 01  // RGS...`}`{zARGS.
  F7FA: 00 0A 38 00 60                                   // ..8.`

                                    Or (Local0, And (ShiftRight (ARGS, 0x02), 0x01C0), Local0)
                                }


  F7FF: 7D 60 7B 7A 41 52 47 53 0A 02 00 0B C0 01 00 60  // }`{zARGS.......`

                                If (And (LKFG, 0x04))
                                {
                                    Store (Local0, ODA0)
                                    Store (ShiftRight (Local0, 0x08), ODA1)
                                    Store (0xC2, OCMD)
                                    Store (0x03, ODAL)
                                    Store (0x68, OIOP)
                                    Store (0x0A, PRM0)

  F80F: A0 3C 7B 4C 4B 46 47 0A 04 00 70 60 4F 44 41 30  // .<{LKFG...p`ODA0
  F81F: 70 7A 60 0A 08 00 4F 44 41 31 70 0A C2 4F 43 4D  // pz`...ODA1p..OCM
  F82F: 44 70 0A 03 4F 44 41 4C 70 0A 68 4F 49 4F 50 70  // Dp..ODALp.hOIOPp
  F83F: 0A 0A 50 52 4D 30                                // ..PRM0

                                    Store (0xE0, SSMP)
                                }

  F845: 70 0A E0 53 53 4D 50                             // p..SSMP

                                Else
                                {
                                    Store (Local0, ^^PCI0.LPCB.EC.FDAT)
                                    Store (ShiftRight (Local0, 0x08), ^^PCI0.LPCB.EC.FBUF)

  F84C: A1 49 04 70 60 5E 5E 2F 04 50 43 49 30 4C 50 43  // .I.p`^^/.PCI0LPC
  F85C: 42 45 43 5F 5F 46 44 41 54 70 7A 60 0A 08 00 5E  // BEC__FDATpz`...^
  F86C: 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F 5F 46  // ^/.PCI0LPCBEC__F
  F87C: 42 55 46                                         // BUF

                                    Store (0xC2, ^^PCI0.LPCB.EC.FCMD)
                                }
                            }


  F87F: 70 0A C2 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  F88F: 43 5F 5F 46 43 4D 44                             // C__FCMD

                            If (LEqual (Local7, One))
                            {

  F896: A0 46 08 93 67 01                                // .F..g.

                                If (And (LKFG, 0x04))
                                {
                                    Store (0x03, ODA0)
                                    Store (Local3, ODA1)
                                    Store (0xC4, OCMD)
                                    Store (0x03, ODAL)
                                    Store (0x68, OIOP)
                                    Store (0x0A, PRM0)

  F89C: A0 39 7B 4C 4B 46 47 0A 04 00 70 0A 03 4F 44 41  // .9{LKFG...p..ODA
  F8AC: 30 70 63 4F 44 41 31 70 0A C4 4F 43 4D 44 70 0A  // 0pcODA1p..OCMDp.
  F8BC: 03 4F 44 41 4C 70 0A 68 4F 49 4F 50 70 0A 0A 50  // .ODALp.hOIOPp..P
  F8CC: 52 4D 30                                         // RM0

                                    Store (0xE0, SSMP)
                                }

  F8CF: 70 0A E0 53 53 4D 50                             // p..SSMP

                                Else
                                {
                                    Store (0x03, ^^PCI0.LPCB.EC.FDAT)
                                    Store (Local3, ^^PCI0.LPCB.EC.FBUF)

  F8D6: A1 46 04 70 0A 03 5E 5E 2F 04 50 43 49 30 4C 50  // .F.p..^^/.PCI0LP
  F8E6: 43 42 45 43 5F 5F 46 44 41 54 70 63 5E 5E 2F 04  // CBEC__FDATpc^^/.
  F8F6: 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55 46  // PCI0LPCBEC__FBUF

                                    Store (0xC4, ^^PCI0.LPCB.EC.FCMD)
                                }
                            }


  F906: 70 0A C4 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  F916: 43 5F 5F 46 43 4D 44                             // C__FCMD

                            If (LEqual (Local7, 0x02))
                            {

  F91D: A0 47 08 93 67 0A 02                             // .G..g..

                                If (And (LKFG, 0x04))
                                {
                                    Store (0x04, ODA0)
                                    Store (Local3, ODA1)
                                    Store (0xC4, OCMD)
                                    Store (0x03, ODAL)
                                    Store (0x68, OIOP)
                                    Store (0x0A, PRM0)

  F924: A0 39 7B 4C 4B 46 47 0A 04 00 70 0A 04 4F 44 41  // .9{LKFG...p..ODA
  F934: 30 70 63 4F 44 41 31 70 0A C4 4F 43 4D 44 70 0A  // 0pcODA1p..OCMDp.
  F944: 03 4F 44 41 4C 70 0A 68 4F 49 4F 50 70 0A 0A 50  // .ODALp.hOIOPp..P
  F954: 52 4D 30                                         // RM0

                                    Store (0xE0, SSMP)
                                }

  F957: 70 0A E0 53 53 4D 50                             // p..SSMP

                                Else
                                {
                                    Store (0x04, ^^PCI0.LPCB.EC.FDAT)
                                    Store (Local3, ^^PCI0.LPCB.EC.FBUF)

  F95E: A1 46 04 70 0A 04 5E 5E 2F 04 50 43 49 30 4C 50  // .F.p..^^/.PCI0LP
  F96E: 43 42 45 43 5F 5F 46 44 41 54 70 63 5E 5E 2F 04  // CBEC__FDATpc^^/.
  F97E: 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55 46  // PCI0LPCBEC__FBUF

                                    Store (0xC4, ^^PCI0.LPCB.EC.FCMD)
                                }
                            }


  F98E: 70 0A C4 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  F99E: 43 5F 5F 46 43 4D 44                             // C__FCMD

                            If (LEqual (Local7, 0x03))
                            {

  F9A5: A0 43 0A 93 67 0A 03                             // .C..g..

                                If (And (LKFG, 0x04))
                                {
                                    Store (0x06, ODA0)
                                    Store (Local3, ODA1)
                                    Store (Local4, ODA2)
                                    Store (0xC4, OCMD)
                                    Store (0x04, ODAL)
                                    Store (0x68, OIOP)
                                    Store (0x0A, PRM0)

  F9AC: A0 3F 7B 4C 4B 46 47 0A 04 00 70 0A 06 4F 44 41  // .?{LKFG...p..ODA
  F9BC: 30 70 63 4F 44 41 31 70 64 4F 44 41 32 70 0A C4  // 0pcODA1pdODA2p..
  F9CC: 4F 43 4D 44 70 0A 04 4F 44 41 4C 70 0A 68 4F 49  // OCMDp..ODALp.hOI
  F9DC: 4F 50 70 0A 0A 50 52 4D 30                       // OPp..PRM0

                                    Store (0xE0, SSMP)
                                }

  F9E5: 70 0A E0 53 53 4D 50                             // p..SSMP

                                Else
                                {
                                    Store (0x06, ^^PCI0.LPCB.EC.FDAT)
                                    Store (Local3, ^^PCI0.LPCB.EC.FBUF)
                                    Store (Local4, ^^PCI0.LPCB.EC.FBF1)

  F9EC: A1 4C 05 70 0A 06 5E 5E 2F 04 50 43 49 30 4C 50  // .L.p..^^/.PCI0LP
  F9FC: 43 42 45 43 5F 5F 46 44 41 54 70 63 5E 5E 2F 04  // CBEC__FDATpc^^/.
  FA0C: 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55 46  // PCI0LPCBEC__FBUF
  FA1C: 70 64 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // pd^^/.PCI0LPCBEC
  FA2C: 5F 5F 46 42 46 31                                // __FBF1

                                    Store (0xC4, ^^PCI0.LPCB.EC.FCMD)
                                }
                            }


  FA32: 70 0A C4 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  FA42: 43 5F 5F 46 43 4D 44                             // C__FCMD

                            If (
  FA49: A0 05                                            // ..

LEqual (Local7, 0x0C)){}

  FA4B: 93 67 0A 0C                                      // .g..

                            If (LEqual (Local7, 0x0D))
                            {

  FA4F: A0 47 08 93 67 0A 0D                             // .G..g..

                                If (And (LKFG, 0x04))
                                {
                                    Store (0x02, ODA0)
                                    Store (Local2, ODA1)
                                    Store (0xC4, OCMD)
                                    Store (0x03, ODAL)
                                    Store (0x68, OIOP)
                                    Store (0x0A, PRM0)

  FA56: A0 39 7B 4C 4B 46 47 0A 04 00 70 0A 02 4F 44 41  // .9{LKFG...p..ODA
  FA66: 30 70 62 4F 44 41 31 70 0A C4 4F 43 4D 44 70 0A  // 0pbODA1p..OCMDp.
  FA76: 03 4F 44 41 4C 70 0A 68 4F 49 4F 50 70 0A 0A 50  // .ODALp.hOIOPp..P
  FA86: 52 4D 30                                         // RM0

                                    Store (0xE0, SSMP)
                                }

  FA89: 70 0A E0 53 53 4D 50                             // p..SSMP

                                Else
                                {
                                    Store (0x02, ^^PCI0.LPCB.EC.FDAT)
                                    Store (Local2, ^^PCI0.LPCB.EC.FBUF)

  FA90: A1 46 04 70 0A 02 5E 5E 2F 04 50 43 49 30 4C 50  // .F.p..^^/.PCI0LP
  FAA0: 43 42 45 43 5F 5F 46 44 41 54 70 62 5E 5E 2F 04  // CBEC__FDATpb^^/.
  FAB0: 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55 46  // PCI0LPCBEC__FBUF

                                    Store (0xC4, ^^PCI0.LPCB.EC.FCMD)
                                }
                            }


  FAC0: 70 0A C4 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  FAD0: 43 5F 5F 46 43 4D 44                             // C__FCMD

                            If (LEqual (Local7, 0x0E))
                            {
                                Store (Zero, Local0)

  FAD7: A0 42 1F 93 67 0A 0E 70 00 60                    // .B..g..p.`

                                If (And (ARGS, 0x04))
                                {

  FAE1: A0 0D 7B 41 52 47 53 0A 04 00                    // ..{ARGS...

                                    Or (Local0, One, Local0)
                                }


  FAEB: 7D 60 01 60                                      // }`.`

                                If (And (ARGS, 0x02))
                                {

  FAEF: A0 0E 7B 41 52 47 53 0A 02 00                    // ..{ARGS...

                                    Or (Local0, 0x02, Local0)
                                }


  FAF9: 7D 60 0A 02 60                                   // }`..`

                                If (And (ARGS, One))
                                {

  FAFE: A0 0D 7B 41 52 47 53 01 00                       // ..{ARGS..

                                    Or (Local0, 0x04, Local0)
                                }


  FB07: 7D 60 0A 04 60                                   // }`..`

                                If (And (ARGS, 0x20))
                                {

  FB0C: A0 0E 7B 41 52 47 53 0A 20 00                    // ..{ARGS. .

                                    Or (Local0, 0x10, Local0)
                                }


  FB16: 7D 60 0A 10 60                                   // }`..`

                                If (And (ARGS, 0x10))
                                {

  FB1B: A0 0E 7B 41 52 47 53 0A 10 00                    // ..{ARGS...

                                    Or (Local0, 0x20, Local0)
                                }


  FB25: 7D 60 0A 20 60                                   // }`. `

                                If (And (ARGS, 0x08))
                                {

  FB2A: A0 0E 7B 41 52 47 53 0A 08 00                    // ..{ARGS...

                                    Or (Local0, 0x08, Local0)
                                }


  FB34: 7D 60 0A 08 60                                   // }`..`

                                If (And (ARGS, 0x0100))
                                {

  FB39: A0 0F 7B 41 52 47 53 0B 00 01 00                 // ..{ARGS....

                                    Or (Local0, 0x40, Local0)
                                }


  FB44: 7D 60 0A 40 60                                   // }`.@`

                                If (And (ARGS, 0x80))
                                {

  FB49: A0 0E 7B 41 52 47 53 0A 80 00                    // ..{ARGS...

                                    Or (Local0, 0x80, Local0)
                                }


  FB53: 7D 60 0A 80 60                                   // }`..`

                                If (And (ARGS, 0x40))
                                {

  FB58: A0 0F 7B 41 52 47 53 0A 40 00                    // ..{ARGS.@.

                                    Or (Local0, 0x0100, Local0)
                                }


  FB62: 7D 60 0B 00 01 60                                // }`...`

                                If (And (ARGS, 0x0800))
                                {

  FB68: A0 10 7B 41 52 47 53 0B 00 08 00                 // ..{ARGS....

                                    Or (Local0, 0x0200, Local0)
                                }


  FB73: 7D 60 0B 00 02 60                                // }`...`

                                If (And (ARGS, 0x0400))
                                {

  FB79: A0 10 7B 41 52 47 53 0B 00 04 00                 // ..{ARGS....

                                    Or (Local0, 0x0400, Local0)
                                }


  FB84: 7D 60 0B 00 04 60                                // }`...`

                                If (And (ARGS, 0x0200))
                                {

  FB8A: A0 10 7B 41 52 47 53 0B 00 02 00                 // ..{ARGS....

                                    Or (Local0, 0x0800, Local0)
                                }


  FB95: 7D 60 0B 00 08 60                                // }`...`

                                If (And (ARGS, 0x1000))
                                {

  FB9B: A0 10 7B 41 52 47 53 0B 00 10 00                 // ..{ARGS....

                                    Or (Local0, 0x1000, Local0)
                                }


  FBA6: 7D 60 0B 00 10 60                                // }`...`

                                If (And (ARGS, 0x2000))
                                {

  FBAC: A0 10 7B 41 52 47 53 0B 00 20 00                 // ..{ARGS.. .

                                    Or (Local0, 0x2000, Local0)
                                }


  FBB7: 7D 60 0B 00 20 60                                // }`.. `

                                If (And (ARGS, 0x4000))
                                {

  FBBD: A0 10 7B 41 52 47 53 0B 00 40 00                 // ..{ARGS..@.

                                    Or (Local0, 0x4000, Local0)
                                }


  FBC8: 7D 60 0B 00 40 60                                // }`..@`

                                If (And (ARGS, 0x8000))
                                {

  FBCE: A0 10 7B 41 52 47 53 0B 00 80 00                 // ..{ARGS....

                                    Or (Local0, 0x8000, Local0)
                                }


  FBD9: 7D 60 0B 00 80 60                                // }`...`

                                If (And (ARGS, 0x00010000))
                                {

  FBDF: A0 14 7B 41 52 47 53 0C 00 00 01 00 00           // ..{ARGS......

                                    Or (Local0, 0x00010000, Local0)
                                }


  FBEC: 7D 60 0C 00 00 01 00 60                          // }`.....`

                                If (And (ARGS, 0x00020000))
                                {

  FBF4: A0 14 7B 41 52 47 53 0C 00 00 02 00 00           // ..{ARGS......

                                    Or (Local0, 0x00020000, Local0)
                                }


  FC01: 7D 60 0C 00 00 02 00 60                          // }`.....`

                                If (And (ARGS, 0x00040000))
                                {

  FC09: A0 14 7B 41 52 47 53 0C 00 00 04 00 00           // ..{ARGS......

                                    Or (Local0, 0x00040000, Local0)
                                }


  FC16: 7D 60 0C 00 00 04 00 60                          // }`.....`

                                If (And (LKFG, 0x04))
                                {
                                    Store (Local0, ODA0)
                                    Store (ShiftRight (Local0, 0x08), ODA1)
                                    Store (ShiftRight (Local0, 0x10), ODA2)
                                    Store (0xC7, OCMD)
                                    Store (0x04, ODAL)
                                    Store (0x68, OIOP)
                                    Store (0x0A, PRM0)

  FC1E: A0 47 04 7B 4C 4B 46 47 0A 04 00 70 60 4F 44 41  // .G.{LKFG...p`ODA
  FC2E: 30 70 7A 60 0A 08 00 4F 44 41 31 70 7A 60 0A 10  // 0pz`...ODA1pz`..
  FC3E: 00 4F 44 41 32 70 0A C7 4F 43 4D 44 70 0A 04 4F  // .ODA2p..OCMDp..O
  FC4E: 44 41 4C 70 0A 68 4F 49 4F 50 70 0A 0A 50 52 4D  // DALp.hOIOPp..PRM
  FC5E: 30                                               // 0

                                    Store (0xE0, SSMP)
                                }

  FC5F: 70 0A E0 53 53 4D 50                             // p..SSMP

                                Else
                                {
                                    Store (Local0, ^^PCI0.LPCB.EC.FDAT)
                                    Store (ShiftRight (Local0, 0x08), ^^PCI0.LPCB.EC.FBUF)
                                    Store (ShiftRight (Local0, 0x10), ^^PCI0.LPCB.EC.FBF1)

  FC66: A1 43 06 70 60 5E 5E 2F 04 50 43 49 30 4C 50 43  // .C.p`^^/.PCI0LPC
  FC76: 42 45 43 5F 5F 46 44 41 54 70 7A 60 0A 08 00 5E  // BEC__FDATpz`...^
  FC86: 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F 5F 46  // ^/.PCI0LPCBEC__F
  FC96: 42 55 46 70 7A 60 0A 10 00 5E 5E 2F 04 50 43 49  // BUFpz`...^^/.PCI
  FCA6: 30 4C 50 43 42 45 43 5F 5F 46 42 46 31           // 0LPCBEC__FBF1

                                    Store (0xC7, ^^PCI0.LPCB.EC.FCMD)
                                }
                            }


  FCB3: 70 0A C7 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  FCC3: 43 5F 5F 46 43 4D 44                             // C__FCMD

                            If (LEqual (Local7, 0x0F))
                            {
                                Store (Zero, Local5)
                                Store (Zero, Local6)
                                Store (And (ARGS, 0xFF), Local3)
                                Store (And (ShiftRight (ARGS, 0x08), 0xFF), Local2)
                                Store (And (ShiftRight (ARGS, 0x10), 0xFF), Local1)

  FCCA: A0 40 13 93 67 0A 0F 70 00 65 70 00 66 70 7B 41  // .@..g..p.ep.fp{A
  FCDA: 52 47 53 0A FF 00 63 70 7B 7A 41 52 47 53 0A 08  // RGS...cp{zARGS..
  FCEA: 00 0A FF 00 62 70 7B 7A 41 52 47 53 0A 10 00 0A  // ....bp{zARGS....
  FCFA: FF 00 61                                         // ..a

                                If (LLess (Local4, 0x03))
                                {
                                    Add (Local4, 0x03, Local0)
                                    Store (0x05, Local5)

  FCFD: A0 12 95 64 0A 03 72 64 0A 03 60 70 0A 05 65     // ...d..rd..`p..e

                                    Store (0xCA, Local6)
                                }

  FD0C: 70 0A CA 66                                      // p..f

                                ElseIf
  FD10: A1 31                                            // .1

 (LEqual (Local4, 0x03))
                                {
                                    Store (0x07, Local0)
                                    Store (0x05, Local5)

  FD12: A0 11 93 64 0A 03 70 0A 07 60 70 0A 05 65        // ...d..p..`p..e

                                    Store (0xCA, Local6)
                                }

  FD20: 70 0A CA 66                                      // p..f

                                ElseIf
  FD24: A1 1D                                            // ..

 (LEqual (Local4, 0x04))
                                {
                                    Store (0x06, Local0)
                                    Store (0x04, Local5)
                                    Store (And (ARGS, 0xFF), Local1)

  FD26: A0 1B 93 64 0A 04 70 0A 06 60 70 0A 04 65 70 7B  // ...d..p..`p..ep{
  FD36: 41 52 47 53 0A FF 00 61                          // ARGS...a

                                    Store (0xCA, Local6)
                                }


  FD3E: 70 0A CA 66                                      // p..f

                                If (Local6)
                                {

  FD42: A0 48 0B 66                                      // .H.f

                                    If (And (LKFG, 0x04))
                                    {
                                        Store (Local0, ODA0)
                                        Store (Local1, ODA1)
                                        Store (Local2, ODA2)
                                        Store (Local3, ODA3)
                                        Store (Local6, OCMD)
                                        Store (Local5, ODAL)
                                        Store (0x68, OIOP)
                                        Store (0x0A, PRM0)

  FD46: A0 43 04 7B 4C 4B 46 47 0A 04 00 70 60 4F 44 41  // .C.{LKFG...p`ODA
  FD56: 30 70 61 4F 44 41 31 70 62 4F 44 41 32 70 63 4F  // 0paODA1pbODA2pcO
  FD66: 44 41 33 70 66 4F 43 4D 44 70 65 4F 44 41 4C 70  // DA3pfOCMDpeODALp
  FD76: 0A 68 4F 49 4F 50 70 0A 0A 50 52 4D 30           // .hOIOPp..PRM0

                                        Store (0xE0, SSMP)
                                    }

  FD83: 70 0A E0 53 53 4D 50                             // p..SSMP

                                    Else
                                    {
                                        Store (Local0, ^^PCI0.LPCB.EC.FDAT)
                                        Store (Local1, ^^PCI0.LPCB.EC.FBUF)
                                        Store (Local2, ^^PCI0.LPCB.EC.FBF1)
                                        Store (Local3, ^^PCI0.LPCB.EC.FBF2)

  FD8A: A1 40 07 70 60 5E 5E 2F 04 50 43 49 30 4C 50 43  // .@.p`^^/.PCI0LPC
  FD9A: 42 45 43 5F 5F 46 44 41 54 70 61 5E 5E 2F 04 50  // BEC__FDATpa^^/.P
  FDAA: 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55 46 70  // CI0LPCBEC__FBUFp
  FDBA: 62 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // b^^/.PCI0LPCBEC_
  FDCA: 5F 46 42 46 31 70 63 5E 5E 2F 04 50 43 49 30 4C  // _FBF1pc^^/.PCI0L
  FDDA: 50 43 42 45 43 5F 5F 46 42 46 32                 // PCBEC__FBF2

                                        Store (Local6, ^^PCI0.LPCB.EC.FCMD)
                                    }
                                }
                            }
                        }
                    }

                    Store (0x67, Local0)

  FDE5: 70 66 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // pf^^/.PCI0LPCBEC
  FDF5: 5F 5F 46 43 4D 44 70 0A 67 60                    // __FCMDp.g`

                    Return (Local0)
                }


  FDFF: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x68))
                {

  FE01: A0 46 15 93 99 69 00 0A 68                       // .F...i..h

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (ARGS, Local4)
                        Store (One, ^^PCI0.LPCB.EC.FDAT)
                        Store (And (Local4, 0xFF), ^^PCI0.LPCB.EC.FBUF)
                        Store (0xC1, ^^PCI0.LPCB.EC.FCMD)
                        Store (0x02, ^^PCI0.LPCB.EC.FDAT)
                        Store (And (ShiftRight (Local4, 0x08), 0xFF), ^^PCI0.LPCB.EC.FBUF)
                        Store (0xC1, ^^PCI0.LPCB.EC.FCMD)
                        Store (0x03, ^^PCI0.LPCB.EC.FDAT)
                        Store (And (ShiftRight (Local4, 0x10), 0xFF), ^^PCI0.LPCB.EC.FBUF)
                        Store (0xC1, ^^PCI0.LPCB.EC.FCMD)
                        Store (0x04, ^^PCI0.LPCB.EC.FDAT)
                        Store (And (ShiftRight (Local4, 0x18), 0xFF), ^^PCI0.LPCB.EC.FBUF)

  FE0A: A0 47 14 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .G.^^/.PCI0LPCBE
  FE1A: 43 5F 5F 45 43 4F 4B 70 41 52 47 53 64 70 01 5E  // C__ECOKpARGSdp.^
  FE2A: 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F 5F 46  // ^/.PCI0LPCBEC__F
  FE3A: 44 41 54 70 7B 64 0A FF 00 5E 5E 2F 04 50 43 49  // DATp{d...^^/.PCI
  FE4A: 30 4C 50 43 42 45 43 5F 5F 46 42 55 46 70 0A C1  // 0LPCBEC__FBUFp..
  FE5A: 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F 5F  // ^^/.PCI0LPCBEC__
  FE6A: 46 43 4D 44 70 0A 02 5E 5E 2F 04 50 43 49 30 4C  // FCMDp..^^/.PCI0L
  FE7A: 50 43 42 45 43 5F 5F 46 44 41 54 70 7B 7A 64 0A  // PCBEC__FDATp{zd.
  FE8A: 08 00 0A FF 00 5E 5E 2F 04 50 43 49 30 4C 50 43  // .....^^/.PCI0LPC
  FE9A: 42 45 43 5F 5F 46 42 55 46 70 0A C1 5E 5E 2F 04  // BEC__FBUFp..^^/.
  FEAA: 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 43 4D 44  // PCI0LPCBEC__FCMD
  FEBA: 70 0A 03 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  FECA: 43 5F 5F 46 44 41 54 70 7B 7A 64 0A 10 00 0A FF  // C__FDATp{zd.....
  FEDA: 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // .^^/.PCI0LPCBEC_
  FEEA: 5F 46 42 55 46 70 0A C1 5E 5E 2F 04 50 43 49 30  // _FBUFp..^^/.PCI0
  FEFA: 4C 50 43 42 45 43 5F 5F 46 43 4D 44 70 0A 04 5E  // LPCBEC__FCMDp..^
  FF0A: 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F 5F 46  // ^/.PCI0LPCBEC__F
  FF1A: 44 41 54 70 7B 7A 64 0A 18 00 0A FF 00 5E 5E 2F  // DATp{zd......^^/
  FF2A: 04 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55  // .PCI0LPCBEC__FBU
  FF3A: 46                                               // F

                        Store (0xC1, ^^PCI0.LPCB.EC.FCMD)
                    }

                    Store (0x68, Local0)

  FF3B: 70 0A C1 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  FF4B: 43 5F 5F 46 43 4D 44 70 0A 68 60                 // C__FCMDp.h`

                    Return (Local0)
                }


  FF56: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x69))
                {

  FF58: A0 4D 15 93 99 69 00 0A 69                       // .M...i..i

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (ARGS, Local4)

  FF61: A0 4E 14 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .N.^^/.PCI0LPCBE
  FF71: 43 5F 5F 45 43 4F 4B 70 41 52 47 53 64           // C__ECOKpARGSd

                        If (And (Local4, One))
                        {
                            Store (0xFF, ^^PCI0.LPCB.EC.FDAT)
                            Store (One, ^^PCI0.LPCB.EC.FBUF)

  FF7E: A0 4A 04 7B 64 01 00 70 0A FF 5E 5E 2F 04 50 43  // .J.{d..p..^^/.PC
  FF8E: 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70 01  // I0LPCBEC__FDATp.
  FF9E: 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F 5F  // ^^/.PCI0LPCBEC__
  FFAE: 46 42 55 46                                      // FBUF

                            Store (0xC1, ^^PCI0.LPCB.EC.FCMD)
                        }


  FFB2: 70 0A C1 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
  FFC2: 43 5F 5F 46 43 4D 44                             // C__FCMD

                        If (And (Local4, 0x02))
                        {
                            Store (0xFF, ^^PCI0.LPCB.EC.FDAT)
                            Store (0x02, ^^PCI0.LPCB.EC.FBUF)

  FFC9: A0 4C 04 7B 64 0A 02 00 70 0A FF 5E 5E 2F 04 50  // .L.{d...p..^^/.P
  FFD9: 43 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70  // CI0LPCBEC__FDATp
  FFE9: 0A 02 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
  FFF9: 5F 5F 46 42 55 46                                // __FBUF

                            Store (0xC1, ^^PCI0.LPCB.EC.FCMD)
                        }


  FFFF: 70 0A C1 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
 1000F: 43 5F 5F 46 43 4D 44                             // C__FCMD

                        If (And (Local4, 0x04))
                        {
                            Store (0xFF, ^^PCI0.LPCB.EC.FDAT)
                            Store (0x03, ^^PCI0.LPCB.EC.FBUF)

 10016: A0 4C 04 7B 64 0A 04 00 70 0A FF 5E 5E 2F 04 50  // .L.{d...p..^^/.P
 10026: 43 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70  // CI0LPCBEC__FDATp
 10036: 0A 03 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
 10046: 5F 5F 46 42 55 46                                // __FBUF

                            Store (0xC1, ^^PCI0.LPCB.EC.FCMD)
                        }


 1004C: 70 0A C1 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
 1005C: 43 5F 5F 46 43 4D 44                             // C__FCMD

                        If (And (Local4, 0x08))
                        {
                            Store (0xFF, ^^PCI0.LPCB.EC.FDAT)
                            Store (0x04, ^^PCI0.LPCB.EC.FBUF)

 10063: A0 4C 04 7B 64 0A 08 00 70 0A FF 5E 5E 2F 04 50  // .L.{d...p..^^/.P
 10073: 43 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54 70  // CI0LPCBEC__FDATp
 10083: 0A 04 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
 10093: 5F 5F 46 42 55 46                                // __FBUF

                            Store (0xC1, ^^PCI0.LPCB.EC.FCMD)
                        }
                    }

                    Store (0x69, Local0)

 10099: 70 0A C1 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
 100A9: 43 5F 5F 46 43 4D 44 70 0A 69 60                 // C__FCMDp.i`

                    Return (Local0)
                }


 100B4: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x6A))
                {

 100B6: A0 40 08 93 99 69 00 0A 6A                       // .@...i..j

                    If (^^PCI0.LPCB.EC.ECOK)
                    {
                        Store (And (ShiftRight (ARGS, 0x08), 0xFF), Local0)
                        Store (And (ARGS, 0xFF), Local1)
                        Store (Local0, ^^PCI0.LPCB.EC.FDAT)
                        Store (Local1, ^^PCI0.LPCB.EC.FBUF)

 100BF: A0 41 07 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .A.^^/.PCI0LPCBE
 100CF: 43 5F 5F 45 43 4F 4B 70 7B 7A 41 52 47 53 0A 08  // C__ECOKp{zARGS..
 100DF: 00 0A FF 00 60 70 7B 41 52 47 53 0A FF 00 61 70  // ....`p{ARGS...ap
 100EF: 60 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // `^^/.PCI0LPCBEC_
 100FF: 5F 46 44 41 54 70 61 5E 5E 2F 04 50 43 49 30 4C  // _FDATpa^^/.PCI0L
 1010F: 50 43 42 45 43 5F 5F 46 42 55 46                 // PCBEC__FBUF

                        Store (0xBA, ^^PCI0.LPCB.EC.FCMD)
                    }

                    Store (0x6A, Local0)

 1011A: 70 0A BA 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
 1012A: 43 5F 5F 46 43 4D 44 70 0A 6A 60                 // C__FCMDp.j`

                    Return (Local0)
                }


 10135: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x6B))
                {
                    Store (ARGS, INDX)
                    Store (0x6B, Local0)

 10137: A0 16 93 99 69 00 0A 6B 70 41 52 47 53 49 4E 44  // ....i..kpARGSIND
 10147: 58 70 0A 6B 60                                   // Xp.k`

                    Return (Local0)
                }


 1014C: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x6C))
                {

 1014E: A0 2B 93 99 69 00 0A 6C                          // .+..i..l

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

 10156: A0 1D 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // ..^^/.PCI0LPCBEC
 10166: 5F 5F 45 43 4F 4B                                // __ECOK

                        If (ARGS){}

 1016C: A0 05 41 52 47 53                                // ..ARGS

                        Else
                        {
                        }
                    }

                    Store (0x6C, Local0)

 10172: A1 01 70 0A 6C 60                                // ..p.l`

                    Return (Local0)
                }


 10178: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x74))
                {

 1017A: A0 49 0B 93 99 69 00 0A 74                       // .I...i..t

                    CreateField (Arg2, Zero, One, SMUT)

 10183: 5B 13 6A 00 01 53 4D 55 54                       // [.j..SMUT

                    CreateField (Arg2, One, 0x07, SAUD)

 1018C: 5B 13 6A 01 0A 07 53 41 55 44                    // [.j...SAUD

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

 10196: A0 47 09 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .G.^^/.PCI0LPCBE
 101A6: 43 5F 5F 45 43 4F 4B                             // C__ECOK

                        If (ToInteger (SMUT))
                        {

 101AD: A0 0A 99 53 4D 55 54 00                          // ...SMUT.

                            Store (Zero, Local0)
                        }

 101B5: 70 00 60                                         // p.`

                        Else
                        {
                            Store (ToInteger (SAUD), Local0)

 101B8: A1 13 70 99 53 41 55 44 00 60                    // ..p.SAUD.`

                            If (LGreater (Local0, 0x64))
                            {

 101C2: A0 09 94 60 0A 64                                // ...`.d

                                Store (0x64, Local0)
                            }
                        }


 101C8: 70 0A 64 60                                      // p.d`

                        If (And (LKFG, 0x04))
                        {
                            Store (Local0, ODA0)
                            Store (0xC6, OCMD)
                            Store (0x02, ODAL)
                            Store (0x68, OIOP)
                            Store (0x0A, PRM0)

 101CC: A0 32 7B 4C 4B 46 47 0A 04 00 70 60 4F 44 41 30  // .2{LKFG...p`ODA0
 101DC: 70 0A C6 4F 43 4D 44 70 0A 02 4F 44 41 4C 70 0A  // p..OCMDp..ODALp.
 101EC: 68 4F 49 4F 50 70 0A 0A 50 52 4D 30              // hOIOPp..PRM0

                            Store (0xE0, SSMP)
                        }

 101F8: 70 0A E0 53 53 4D 50                             // p..SSMP

                        Else
                        {
                            Store (Local0, ^^PCI0.LPCB.EC.FDAT)

 101FF: A1 2E 70 60 5E 5E 2F 04 50 43 49 30 4C 50 43 42  // ..p`^^/.PCI0LPCB
 1020F: 45 43 5F 5F 46 44 41 54                          // EC__FDAT

                            Store (0xC6, ^^PCI0.LPCB.EC.FCMD)
                        }
                    }

                    Store (0x74, Local0)

 10217: 70 0A C6 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
 10227: 43 5F 5F 46 43 4D 44 70 0A 74 60                 // C__FCMDp.t`

                    Return (Local0)
                }


 10232: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x75))
                {
                    And (INDX, 0xFFFF, Local1)
                    And (ShiftRight (INDX, 0x10), 0xFFFF, Local2)

 10234: A0 4A 14 93 99 69 00 0A 75 7B 49 4E 44 58 0B FF  // .J...i..u{INDX..
 10244: FF 61 7B 7A 49 4E 44 58 0A 10 00 0B FF FF 62     // .a{zINDX......b

                    If (LGreater (Local2, 0x02))
                    {

 10253: A0 08 94 62 0A 02                                // ...b..

                        Store (Zero, Local2)
                    }


 10259: 70 00 62                                         // p.b

                    If (LGreater (Local1, 0xFF))
                    {

 1025C: A0 07 94 61 0A FF                                // ...a..

                        Return (Ones)
                    }

                    ShiftLeft (One, Local2, Local2)
                    Store (Local2, Local3)
                    Decrement (Local3)

 10262: A4 FF 79 01 62 62 70 62 63 76 63                 // ..y.bbpbcvc

                    If (LGreater (Add (Local1, Local3), 0xFF))
                    {

 1026D: A0 0A 94 72 61 63 00 0A FF                       // ...rac...

                        Return (Ones)
                    }

                    Add (Local1, 0xFF700100, Local0)

 10276: A4 FF 72 61 0C 00 01 70 FF 60                    // ..ra...p.`

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

 10280: A0 47 0F 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .G.^^/.PCI0LPCBE
 10290: 43 5F 5F 45 43 4F 4B                             // C__ECOK

                        Name (WBUF, 
 10297: 08 57 42 55 46                                   // .WBUF

Buffer (0x04)
                        {
                             0x00, 0x00, 0x00, 0x00                         
                        })

 1029C: 11 07 0A 04 00 00 00 00                          // ........

                        CreateByteField (WBUF, Zero, ARGB)

 102A4: 8C 57 42 55 46 00 41 52 47 42                    // .WBUF.ARGB

                        CreateWordField (WBUF, Zero, ARGW)

 102AE: 8B 57 42 55 46 00 41 52 47 57                    // .WBUF.ARGW

                        CreateDWordField (WBUF, Zero, ARGD)
                        Store (ARGS, WBUF)

 102B8: 8A 57 42 55 46 00 41 52 47 44 70 41 52 47 53 57  // .WBUF.ARGDpARGSW
 102C8: 42 55 46                                         // BUF

                        OperationRegion (WH2M, SystemMemory, Local0, Local2)

 102CB: 5B 80 57 48 32 4D 00 60 62                       // [.WH2M.`b

                        Switch (ToInteger (Local2))
                        {

 102D4: A2 4D 06 01 70 99 62 00 5F 54 5F 34              // .M..p.b._T_4

                            Case (One)
                            {

 102E0: A0 1D 93 5F 54 5F 34 01                          // ..._T_4.

                                Field (WH2M, ByteAcc, Lock, Preserve)
                                {
                                    WHMB,   8
                                }


 102E8: 5B 81 0B 57 48 32 4D 11 57 48 4D 42 08           // [..WH2M.WHMB.

                                Store (ARGB, WHMB)
                            }

 102F5: 70 41 52 47 42 57 48 4D 42                       // pARGBWHMB

                            Case
 102FE: A1 42 04                                         // .B.

 (0x02)
                            {

 10301: A0 1E 93 5F 54 5F 34 0A 02                       // ..._T_4..

                                Field (WH2M, ByteAcc, Lock, Preserve)
                                {
                                    WHMW,   16
                                }


 1030A: 5B 81 0B 57 48 32 4D 11 57 48 4D 57 10           // [..WH2M.WHMW.

                                Store (ARGW, WHMW)
                            }

 10317: 70 41 52 47 57 57 48 4D 57                       // pARGWWHMW

                            Case
 10320: A1 20                                            // . 

 (0x04)
                            {

 10322: A0 1E 93 5F 54 5F 34 0A 04                       // ..._T_4..

                                Field (WH2M, ByteAcc, Lock, Preserve)
                                {
                                    WHMD,   32
                                }


 1032B: 5B 81 0B 57 48 32 4D 11 57 48 4D 44 20           // [..WH2M.WHMD 

                                Store (ARGD, WHMD)
                            }


 10338: 70 41 52 47 44 57 48 4D 44                       // pARGDWHMD

                        }


 10341: A5                                               // .

                        If (LAnd (
 10342: A0 31 90 92                                      // .1..

LLessEqual (Local1, 0xF8), 
 10346: 94 61 0A F8                                      // .a..


 1034A: 92                                               // .

LGreaterEqual (Add (Local1, Local3), 0xF8)))
                        {
                            Subtract (0xF8, Local1, Local4)

 1034B: 95 72 61 63 00 0A F8 74 0A F8 61 64              // .rac...t..ad

                            Store (DerefOf (
 10357: 70 83                                            // p.

Index (WBUF, Local4)), ^^PCI0.LPCB.EC.FCMD)
                        }


 10359: 88 57 42 55 46 64 00 5E 5E 2F 04 50 43 49 30 4C  // .WBUFd.^^/.PCI0L
 10369: 50 43 42 45 43 5F 5F 46 43 4D 44                 // PCBEC__FCMD

                        Store (0x75, Local0)
                    }

 10374: 70 0A 75 60                                      // p.u`

                    Else
                    {

 10378: A1 04                                            // ..

                        Store (Ones, Local0)
                    }


 1037A: 70 FF 60                                         // p.`

                    Return (Local0)
                }


 1037D: A4 60                                            // .`

                If (LEqual (ToInteger (Arg1), 0x78))
                {

 1037F: A0 42 09 93 99 69 00 0A 78                       // .B...i..x

                    If (^^PCI0.LPCB.EC.ECOK)
                    {

 10388: A0 49 08 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .I.^^/.PCI0LPCBE
 10398: 43 5F 5F 45 43 4F 4B                             // C__ECOK

                        If (ARGS)
                        {
                            Or (^^PCI0.LPCB.EC.OEM3, 0x20, ^^PCI0.LPCB.EC.OEM3)
                            Sleep (0x01F4)
                            Store (0x0D, PRM0)

 1039F: A0 44 04 41 52 47 53 7D 5E 5E 2F 04 50 43 49 30  // .D.ARGS}^^/.PCI0
 103AF: 4C 50 43 42 45 43 5F 5F 4F 45 4D 33 0A 20 5E 5E  // LPCBEC__OEM3. ^^
 103BF: 2F 04 50 43 49 30 4C 50 43 42 45 43 5F 5F 4F 45  // /.PCI0LPCBEC__OE
 103CF: 4D 33 5B 22 0B F4 01 70 0A 0D 50 52 4D 30        // M3["...p..PRM0

                            Store (0xE0, SSMP)
                        }

 103DD: 70 0A E0 53 53 4D 50                             // p..SSMP

                        Else
                        {

 103E4: A1 2D                                            // .-

                            And (^^PCI0.LPCB.EC.OEM3, 0xFFDF, ^^PCI0.LPCB.EC.OEM3)
                        }
                    }
                }


 103E6: 7B 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // {^^/.PCI0LPCBEC_
 103F6: 5F 4F 45 4D 33 0B DF FF 5E 5E 2F 04 50 43 49 30  // _OEM3...^^/.PCI0
 10406: 4C 50 43 42 45 43 5F 5F 4F 45 4D 33              // LPCBEC__OEM3

                If (LEqual (ToInteger (Arg1), 0x79))
                {
                    Store (ShiftRight (And (ARGS, 0xFF000000), 0x18), Local1)
                    Store (And (ARGS, 0x00FFFFFF), Local2)

 10412: A0 44 37 93 99 69 00 0A 79 70 7A 7B 41 52 47 53  // .D7..i..ypz{ARGS
 10422: 0C 00 00 00 FF 00 0A 18 00 61 70 7B 41 52 47 53  // .........ap{ARGS
 10432: 0C FF FF FF 00 00 62                             // ......b

                    Switch (ToInteger (Local1))
                    {

 10439: A2 4D 34 01 70 99 61 00 5F 54 5F 35              // .M4.p.a._T_5

                        Case (One)
                        {

 10445: A0 48 1A 93 5F 54 5F 35 01                       // .H.._T_5.

                            If (^^PCI0.LPCB.EC.ECOK)
                            {

 1044E: A0 4A 19 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .J.^^/.PCI0LPCBE
 1045E: 43 5F 5F 45 43 4F 4B                             // C__ECOK

                                Switch (ToInteger (Local2))
                                {

 10465: A2 4F 13 01 70 99 62 00 5F 54 5F 36              // .O..p.b._T_6

                                    Case (Zero)
                                    {
                                        Store (0xC3, ^^PCI0.LPCB.EC.FDAT)
                                        Store (0xA9, ^^PCI0.LPCB.EC.FBUF)
                                        Store (0xB8, ^^PCI0.LPCB.EC.FCMD)

 10471: A0 43 06 93 5F 54 5F 36 00 70 0A C3 5E 5E 2F 04  // .C.._T_6.p..^^/.
 10481: 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54  // PCI0LPCBEC__FDAT
 10491: 70 0A A9 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
 104A1: 43 5F 5F 46 42 55 46 70 0A B8 5E 5E 2F 04 50 43  // C__FBUFp..^^/.PC
 104B1: 49 30 4C 50 43 42 45 43 5F 5F 46 43 4D 44        // I0LPCBEC__FCMD

                                        Store (Zero, ^^PCI0.LPCB.EC.XTUF)
                                    }

 104BF: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
 104CF: 5F 5F 58 54 55 46                                // __XTUF

                                    Case
 104D5: A1 4E 0C                                         // .N.

 (One)
                                    {
                                        Store (0xC2, ^^PCI0.LPCB.EC.FDAT)
                                        Store (0xA9, ^^PCI0.LPCB.EC.FBUF)
                                        Store (0xB8, ^^PCI0.LPCB.EC.FCMD)

 104D8: A0 43 06 93 5F 54 5F 36 01 70 0A C2 5E 5E 2F 04  // .C.._T_6.p..^^/.
 104E8: 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 44 41 54  // PCI0LPCBEC__FDAT
 104F8: 70 0A A9 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
 10508: 43 5F 5F 46 42 55 46 70 0A B8 5E 5E 2F 04 50 43  // C__FBUFp..^^/.PC
 10518: 49 30 4C 50 43 42 45 43 5F 5F 46 43 4D 44        // I0LPCBEC__FCMD

                                        Store (Zero, ^^PCI0.LPCB.EC.XTUF)
                                    }

 10526: 70 00 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
 10536: 5F 5F 58 54 55 46                                // __XTUF

                                    Case
 1053C: A1 47 06                                         // .G.

 (0x02)
                                    {
                                        Store (0xC3, ^^PCI0.LPCB.EC.FDAT)
                                        Store (0xA9, ^^PCI0.LPCB.EC.FBUF)
                                        Store (0xB8, ^^PCI0.LPCB.EC.FCMD)

 1053F: A0 44 06 93 5F 54 5F 36 0A 02 70 0A C3 5E 5E 2F  // .D.._T_6..p..^^/
 1054F: 04 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 44 41  // .PCI0LPCBEC__FDA
 1055F: 54 70 0A A9 5E 5E 2F 04 50 43 49 30 4C 50 43 42  // Tp..^^/.PCI0LPCB
 1056F: 45 43 5F 5F 46 42 55 46 70 0A B8 5E 5E 2F 04 50  // EC__FBUFp..^^/.P
 1057F: 43 49 30 4C 50 43 42 45 43 5F 5F 46 43 4D 44     // CI0LPCBEC__FCMD

                                        Store (One, ^^PCI0.LPCB.EC.XTUF)
                                    }


 1058E: 70 01 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43  // p.^^/.PCI0LPCBEC
 1059E: 5F 5F 58 54 55 46                                // __XTUF

                                }

                                Store (Local1, ^^PCI0.LPCB.EC.FDAT)
                                Store (0xA9, ^^PCI0.LPCB.EC.FBUF)

 105A4: A5 70 61 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .pa^^/.PCI0LPCBE
 105B4: 43 5F 5F 46 44 41 54 70 0A A9 5E 5E 2F 04 50 43  // C__FDATp..^^/.PC
 105C4: 49 30 4C 50 43 42 45 43 5F 5F 46 42 55 46        // I0LPCBEC__FBUF

                                Store (0xB8, ^^PCI0.LPCB.EC.FCMD)
                            }

 105D2: 70 0A B8 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
 105E2: 43 5F 5F 46 43 4D 44                             // C__FCMD

                            Else
                            {

 105E9: A1 04                                            // ..

                                Store (Ones, Local0)
                            }
                        }

 105EB: 70 FF 60                                         // p.`

                        Case
 105EE: A1 47 19                                         // .G.

 (0x05)
                        {

 105F1: A0 40 08 93 5F 54 5F 35 0A 05                    // .@.._T_5..

                            If (^^PCI0.LPCB.EC.ECOK)
                            {

 105FB: A0 41 07 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .A.^^/.PCI0LPCBE
 1060B: 43 5F 5F 45 43 4F 4B                             // C__ECOK

                                If (Local2)
                                {

 10612: A0 2D 62                                         // .-b

                                    Or (^^PCI0.LPCB.EC.ECKS, 0x10, ^^PCI0.LPCB.EC.ECKS)
                                }

 10615: 7D 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // }^^/.PCI0LPCBEC_
 10625: 5F 45 43 4B 53 0A 10 5E 5E 2F 04 50 43 49 30 4C  // _ECKS..^^/.PCI0L
 10635: 50 43 42 45 43 5F 5F 45 43 4B 53                 // PCBEC__ECKS

                                Else
                                {

 10640: A1 2C                                            // .,

                                    And (^^PCI0.LPCB.EC.ECKS, 0xEF, ^^PCI0.LPCB.EC.ECKS)
                                }
                            }

 10642: 7B 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // {^^/.PCI0LPCBEC_
 10652: 5F 45 43 4B 53 0A EF 5E 5E 2F 04 50 43 49 30 4C  // _ECKS..^^/.PCI0L
 10662: 50 43 42 45 43 5F 5F 45 43 4B 53                 // PCBEC__ECKS

                            Else
                            {

 1066D: A1 04                                            // ..

                                Store (Ones, Local0)
                            }
                        }

 1066F: 70 FF 60                                         // p.`

                        Case
 10672: A1 43 11                                         // .C.

 (0x07)
                        {

 10675: A0 40 11 93 5F 54 5F 35 0A 07                    // .@.._T_5..

                            If (^^PCI0.LPCB.EC.ECOK)
                            {
                                Store (Zero, Local4)
                                Store (Zero, Local5)
                                Store (Zero, Local6)
                                Store (Zero, Local7)

 1067F: A0 41 10 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // .A.^^/.PCI0LPCBE
 1068F: 43 5F 5F 45 43 4F 4B 70 00 64 70 00 65 70 00 66  // C__ECOKp.dp.ep.f
 1069F: 70 00 67                                         // p.g

                                If (Local2)
                                {
                                    Store (And (Local2, 0xFF), Local4)
                                    Store (And (ShiftRight (Local2, 0x08), 0xFF), Local5)
                                    Store (And (ShiftRight (Local2, 0x10), 0xFF), Local6)
                                    Divide (Multiply (Subtract (Local6, 0x32), 0x0A), Subtract (Subtract (TJMX, 0x0A), Local4), , Local3)
                                    ShiftLeft (Local3, 0x03, Local3)
                                    Divide (Local3, 0x0A, , Local7)

 106A2: A0 44 05 62 70 7B 62 0A FF 00 64 70 7B 7A 62 0A  // .D.bp{b...dp{zb.
 106B2: 08 00 0A FF 00 65 70 7B 7A 62 0A 10 00 0A FF 00  // .....ep{zb......
 106C2: 66 78 77 74 66 0A 32 00 0A 0A 00 74 74 54 4A 4D  // fxwtf.2....ttTJM
 106D2: 58 0A 0A 00 64 00 00 63 79 63 0A 03 63 78 63 0A  // X...d..cyc..cxc.
 106E2: 0A 00 67                                         // ..g

                                    If (LGreater (Subtract (Local3, Multiply (Local7, 0x0A)), 0x04))
                                    {

 106E5: A0 0E 94 74 63 77 67 0A 0A 00 00 0A 04           // ...tcwg......

                                        Increment (Local7)
                                    }


 106F2: 75 67                                            // ug

                                    Store (One, Local3)
                                }

 106F4: 70 01 63                                         // p.c

                                Else
                                {

 106F7: A1 04                                            // ..

                                    Store (Zero, Local3)
                                }

                                Store (Local3, ^^PCI0.LPCB.EC.FDAT)
                                Store (Local4, ^^PCI0.LPCB.EC.FBUF)
                                Store (Local5, ^^PCI0.LPCB.EC.FBF1)
                                Store (Local6, ^^PCI0.LPCB.EC.FBF2)
                                Store (Local7, ^^PCI0.LPCB.EC.FBF3)

 106F9: 70 00 63 70 63 5E 5E 2F 04 50 43 49 30 4C 50 43  // p.cpc^^/.PCI0LPC
 10709: 42 45 43 5F 5F 46 44 41 54 70 64 5E 5E 2F 04 50  // BEC__FDATpd^^/.P
 10719: 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 55 46 70  // CI0LPCBEC__FBUFp
 10729: 65 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45 43 5F  // e^^/.PCI0LPCBEC_
 10739: 5F 46 42 46 31 70 66 5E 5E 2F 04 50 43 49 30 4C  // _FBF1pf^^/.PCI0L
 10749: 50 43 42 45 43 5F 5F 46 42 46 32 70 67 5E 5E 2F  // PCBEC__FBF2pg^^/
 10759: 04 50 43 49 30 4C 50 43 42 45 43 5F 5F 46 42 46  // .PCI0LPCBEC__FBF
 10769: 33                                               // 3

                                Store (0xCC, ^^PCI0.LPCB.EC.FCMD)
                            }

 1076A: 70 0A CC 5E 5E 2F 04 50 43 49 30 4C 50 43 42 45  // p..^^/.PCI0LPCBE
 1077A: 43 5F 5F 46 43 4D 44                             // C__FCMD

                            Else
                            {

 10781: A1 04                                            // ..

                                Store (Ones, Local0)
                            }
                        }


 10783: 70 FF 60                                         // p.`

                    }
                }


 10786: A5                                               // .

                Return (Local0)
            }


 10787: A4 60                                            // .`

            Method (_WED, 1, NotSerialized)  // _Wxx: Wake Event
            {

 10789: 14 08 5F 57 45 44 01                             // .._WED.

                Return (Zero)
            }
        }
    }


 10790: A4 00                                            // ..

    Scope (_SB.PCI0.LPCB)
    {

 10792: 10 8C 6E 01 2F 03 5F 53 42 5F 50 43 49 30 4C 50  // ..n./._SB_PCI0LP
 107A2: 43 42                                            // CB

        Device (EC)
        {

 107A4: 5B 82 89 6D 01 45 43 5F 5F                       // [..m.EC__

            Name (_HID, EisaId ("PNP0C09"))  // _HID: Hardware ID

 107AD: 08 5F 48 49 44 0C 41 D0 0C 09                    // ._HID.A...

            Name (_GPE, 0x17)  // _GPE: General Purpose Events

 107B7: 08 5F 47 50 45 0A 17                             // ._GPE..

            Name (ECOK, Zero)

 107BE: 08 45 43 4F 4B 00                                // .ECOK.

            Name (SLFG, Zero)

 107C4: 08 53 4C 46 47 00                                // .SLFG.

            Name (ECTB, Zero)

 107CA: 08 45 43 54 42 00                                // .ECTB.

            Name (B15C, Zero)

 107D0: 08 42 31 35 43 00                                // .B15C.

            Name (PSLC, One)

 107D6: 08 50 53 4C 43 01                                // .PSLC.

            Name (XX68, Zero)

 107DC: 08 58 58 36 38 00                                // .XX68.

            Name (XXC7, Zero)

 107E2: 08 58 58 43 37 00                                // .XXC7.

            Name (XXCA, Zero)

 107E8: 08 58 58 43 41 00                                // .XXCA.

            Name (XXD7, Zero)

 107EE: 08 58 58 44 37 00                                // .XXD7.

            Name (XXDA, Zero)

 107F4: 08 58 58 44 41 00                                // .XXDA.

            Name (XXDD, Zero)

 107FA: 08 58 58 44 44 00                                // .XXDD.

            Name (XXE2, Zero)

 10800: 08 58 58 45 32 00                                // .XXE2.

            Name (XXF0, Zero)

 10806: 08 58 58 46 30 00                                // .XXF0.

            Name (XXF2, Zero)

 1080C: 08 58 58 46 32 00                                // .XXF2.

            Name (XXF4, Zero)

 10812: 08 58 58 46 34 00                                // .XXF4.

            Method (_REG, 2, NotSerialized)  // _REG: Region Availability
            {

 10818: 14 4E 13 5F 52 45 47 02                          // .N._REG.

                If (LAnd (LEqual (Arg0, 0x03), 
 10820: A0 46 13 90 93 68 0A 03                          // .F...h..

LEqual (Arg1, One)))
                {

 10828: 93 69 01                                         // .i.

                    If (And (OEMF, One))
                    {
                        Store (Arg1, ECOK)

 1082B: A0 4B 0C 7B 4F 45 4D 46 01 00 70 69 45 43 4F 4B  // .K.{OEMF..piECOK

                        If (LLess (OSYS, 0x07D9))
                        {

 1083B: A0 0F 95 4F 53 59 53 0B D9 07                    // ...OSYS...

                            Store (One, ECOS)
                        }

 10845: 70 01 45 43 4F 53                                // p.ECOS

                        ElseIf
 1084B: A1 2E                                            // ..

 (LEqual (OSYS, 0x07D9))
                        {

 1084D: A0 10 93 4F 53 59 53 0B D9 07                    // ...OSYS...

                            Store (0x08, ECOS)
                        }

 10857: 70 0A 08 45 43 4F 53                             // p..ECOS

                        ElseIf
 1085E: A1 1B                                            // ..

 (LEqual (OSYS, 0x07DC))
                        {

 10860: A0 10 93 4F 53 59 53 0B DC 07                    // ...OSYS...

                            Store (0x02, ECOS)
                        }

 1086A: 70 0A 02 45 43 4F 53                             // p..ECOS

                        Else
                        {

 10871: A1 08                                            // ..

                            Store (0x02, ECOS)
                        }


 10873: 70 0A 02 45 43 4F 53                             // p..ECOS

                        If (
 1087A: A0 14 92                                         // ...

LGreaterEqual (OSYS, 0x07D6))
                        {

 1087D: 95 4F 53 59 53 0B D6 07                          // .OSYS...

                            Or (WINF, One, WINF)
                        }

 10885: 7D 57 49 4E 46 01 57 49 4E 46                    // }WINF.WINF

                        ElseIf
 1088F: A1 15                                            // ..

 (LEqual (OSYS, 0x03E8))
                        {

 10891: A0 13 93 4F 53 59 53 0B E8 03                    // ...OSYS...

                            Or (WINF, One, WINF)
                        }

                        Store (INF2, Local0)

 1089B: 7D 57 49 4E 46 01 57 49 4E 46 70 49 4E 46 32 60  // }WINF.WINFpINF2`

                        If (And (OEMF, 0x40))
                        {

 108AB: A0 0E 7B 4F 45 4D 46 0A 40 00                    // ..{OEMF.@.

                            And (Local0, 0xDF, Local0)
                        }


 108B5: 7B 60 0A DF 60                                   // {`..`

                        If (And (OEMF, 0x4000))
                        {

 108BA: A0 0E 7B 4F 45 4D 46 0B 00 40 00                 // ..{OEMF..@.

                            Or (Local0, One, Local0)
                        }

 108C5: 7D 60 01 60                                      // }`.`

                        Else
                        {

 108C9: A1 06                                            // ..

                            And (Local0, 0xFE, Local0)
                        }


 108CB: 7B 60 0A FE 60                                   // {`..`

                        If (LLess (OSYS, 0x07D9))
                        {

 108D0: A0 0E 95 4F 53 59 53 0B D9 07                    // ...OSYS...

                            And (Local0, 0xFD, Local0)
                        }

                        Store (Local0, INF2)

 108DA: 7B 60 0A FD 60 70 60 49 4E 46 32                 // {`..`p`INF2

                        Store (ADP, ^^^^AC.ACFG)
                    }


 108E5: 70 41 44 50 5F 5E 5E 5E 5E 2E 41 43 5F 5F 41 43  // pADP_^^^^.AC__AC
 108F5: 46 47                                            // FG

                    If (And (OEMF, 0x2000))
                    {

 108F7: A0 25 7B 4F 45 4D 46 0B 00 20 00                 // .%{OEMF.. .

                        If (LEqual (And (OEMF, 0x0400), Zero))
                        {

 10902: A0 1A 93 7B 4F 45 4D 46 0B 00 04 00 00           // ...{OEMF.....

                            Store (One, ^^^GFX0.SKIP)
                        }
                    }

                    Store (Zero, SLFG)
                    Store (Zero, ECTB)
                    Store (Zero, B15C)
                    Store (One, PSLC)
                    Store (Zero, CCST)
                    Store (Zero, PRC0)
                    Store (Zero, PRC1)
                    Store (Zero, PRIN)
                    Store (Zero, PSTE)
                    PNOT ()
                }
            }


 1090F: 70 01 5E 5E 5E 2E 47 46 58 30 53 4B 49 50 70 00  // p.^^^.GFX0SKIPp.
 1091F: 53 4C 46 47 70 00 45 43 54 42 70 00 42 31 35 43  // SLFGp.ECTBp.B15C
 1092F: 70 01 50 53 4C 43 70 00 43 43 53 54 70 00 50 52  // p.PSLCp.CCSTp.PR
 1093F: 43 30 70 00 50 52 43 31 70 00 50 52 49 4E 70 00  // C0p.PRC1p.PRINp.
 1094F: 50 53 54 45 50 4E 4F 54                          // PSTEPNOT

            Name (_CRS, 
 10957: 08 5F 43 52 53                                   // ._CRS

ResourceTemplate ()  // _CRS: Current Resource Settings
            {
                IO (Decode16,
                    0x0062,             // Range Minimum
                    0x0062,             // Range Maximum
                    0x00,               // Alignment
                    0x01,               // Length
                    )
                IO (Decode16,
                    0x0066,             // Range Minimum
                    0x0066,             // Range Maximum
                    0x00,               // Alignment
                    0x01,               // Length
                    )
            })

 1095C: 11 15 0A 12 47 01 62 00 62 00 00 01 47 01 66 00  // ....G.b.b...G.f.
 1096C: 66 00 00 01 79 00                                // f...y.

            OperationRegion (RAM, SystemMemory, 0xFF700100, 0x0100)

 10972: 5B 80 52 41 4D 5F 00 0C 00 01 70 FF 0B 00 01     // [.RAM_....p....

            Field (RAM, ByteAcc, Lock, Preserve)
            {
                NMSG,   8, 
                SLED,   4, 
                Offset (0x02), 
                MODE,   1, 
                FAN0,   1, 
                TME0,   1, 
                TME1,   1, 
                FAN1,   1, 
                    ,   2, 
                Offset (0x03), 
                LIDS,   1, 
                LSW0,   1, 
                LWKE,   1, 
                WAKF,   1, 
                    ,   2, 
                PWKE,   1, 
                MWKE,   1, 
                AC0,    8, 
                PSV,    8, 
                CRT,    8, 
                TMP,    8, 
                AC1,    8, 
                BBST,   8, 
                CCST,   8, 
                Offset (0x0C), 
                Offset (0x0D), 
                Offset (0x0E), 
                SLPT,   8, 
                SWEJ,   1, 
                SWCH,   1, 
                Offset (0x10), 
                ADP,    1, 
                AFLT,   1, 
                BAT0,   1, 
                BAT1,   1, 
                    ,   3, 
                PWOF,   1, 
                WFNO,   8, 
                BPU0,   32, 
                BDC0,   32, 
                BFC0,   32, 
                BTC0,   32, 
                BDV0,   32, 
                BST0,   32, 
                BPR0,   32, 
                BRC0,   32, 
                BPV0,   32, 
                BTP0,   16, 
                BRS0,   16, 
                BCW0,   32, 
                BCL0,   32, 
                BCG0,   32, 
                BG20,   32, 
                BMO0,   64, 
                BIF0,   64, 
                BSN0,   32, 
                BTY0,   64, 
                Offset (0x67), 
                Offset (0x68), 
                ECOS,   8, 
                Offset (0x6A), 
                ECPS,   8, 
                Offset (0x6C), 
                BTMP,   16, 
                EVTN,   8, 
                Offset (0x72), 
                PRCL,   8, 
                PRC0,   8, 
                PRC1,   8, 
                PRCM,   8, 
                PRIN,   8, 
                PSTE,   8, 
                PCAD,   8, 
                PEWL,   8, 
                PWRL,   8, 
                PECD,   8, 
                PEHI,   8, 
                PECI,   8, 
                PEPL,   8, 
                PEPM,   8, 
                PWFC,   8, 
                PECC,   8, 
                PDT0,   8, 
                PDT1,   8, 
                PDT2,   8, 
                PDT3,   8, 
                PRFC,   8, 
                PRS0,   8, 
                PRS1,   8, 
                PRS2,   8, 
                PRS3,   8, 
                PRS4,   8, 
                PRCS,   8, 
                PEC0,   8, 
                PEC1,   8, 
                PEC2,   8, 
                PEC3,   8, 
                CMDR,   8, 
                CVRT,   8, 
                GTVR,   8, 
                FANT,   8, 
                SKNT,   8, 
                AMBT,   8, 
                MCRT,   8, 
                DIM0,   8, 
                DIM1,   8, 
                PMAX,   8, 
                PPDT,   8, 
                PECH,   8, 
                PMDT,   8, 
                TSD0,   8, 
                TSD1,   8, 
                TSD2,   8, 
                TSD3,   8, 
                CPUP,   16, 
                MCHP,   16, 
                SYSP,   16, 
                CPAP,   16, 
                MCAP,   16, 
                SYAP,   16, 
                CFSP,   16, 
                CPUE,   16, 
                Offset (0xC6), 
                Offset (0xC7), 
                VGAT,   8, 
                OEM1,   8, 
                OEM2,   8, 
                OEM3,   16, 
                OEM4,   8, 
                Offset (0xCE), 
                DUT1,   8, 
                DUT2,   8, 
                RPM1,   16, 
                RPM2,   16, 
                RPM4,   16, 
                Offset (0xD7), 
                DTHL,   8, 
                DTBP,   8, 
                    ,   3, 
                GC6I,   1, 
                GC6O,   1, 
                GC6S,   1, 
                    ,   1, 
                GPUT,   1, 
                WINF,   8, 
                    ,   3, 
                DGPU,   1, 
                    ,   1, 
                TBFG,   1, 
                Offset (0xDC), 
                Offset (0xDD), 
                INF2,   8, 
                MUTE,   1, 
                Offset (0xE0), 
                RPM3,   16, 
                ECKS,   8, 
                Offset (0xE4), 
                    ,   4, 
                XTUF,   1, 
                    ,   2, 
                Offset (0xE5), 
                Offset (0xF0), 
                PL1T,   16, 
                PL2T,   16, 
                TAUT,   8
            }


 10981: 5B 81 4B 2E 52 41 4D 5F 11 4E 4D 53 47 08 53 4C  // [.K.RAM_.NMSG.SL
 10991: 45 44 04 00 04 4D 4F 44 45 01 46 41 4E 30 01 54  // ED...MODE.FAN0.T
 109A1: 4D 45 30 01 54 4D 45 31 01 46 41 4E 31 01 00 02  // ME0.TME1.FAN1...
 109B1: 00 01 4C 49 44 53 01 4C 53 57 30 01 4C 57 4B 45  // ..LIDS.LSW0.LWKE
 109C1: 01 57 41 4B 46 01 00 02 50 57 4B 45 01 4D 57 4B  // .WAKF...PWKE.MWK
 109D1: 45 01 41 43 30 5F 08 50 53 56 5F 08 43 52 54 5F  // E.AC0_.PSV_.CRT_
 109E1: 08 54 4D 50 5F 08 41 43 31 5F 08 42 42 53 54 08  // .TMP_.AC1_.BBST.
 109F1: 43 43 53 54 08 00 08 00 08 00 08 53 4C 50 54 08  // CCST.......SLPT.
 10A01: 53 57 45 4A 01 53 57 43 48 01 00 06 41 44 50 5F  // SWEJ.SWCH...ADP_
 10A11: 01 41 46 4C 54 01 42 41 54 30 01 42 41 54 31 01  // .AFLT.BAT0.BAT1.
 10A21: 00 03 50 57 4F 46 01 57 46 4E 4F 08 42 50 55 30  // ..PWOF.WFNO.BPU0
 10A31: 20 42 44 43 30 20 42 46 43 30 20 42 54 43 30 20  //  BDC0 BFC0 BTC0 
 10A41: 42 44 56 30 20 42 53 54 30 20 42 50 52 30 20 42  // BDV0 BST0 BPR0 B
 10A51: 52 43 30 20 42 50 56 30 20 42 54 50 30 10 42 52  // RC0 BPV0 BTP0.BR
 10A61: 53 30 10 42 43 57 30 20 42 43 4C 30 20 42 43 47  // S0.BCW0 BCL0 BCG
 10A71: 30 20 42 47 32 30 20 42 4D 4F 30 40 04 42 49 46  // 0 BG20 BMO0@.BIF
 10A81: 30 40 04 42 53 4E 30 20 42 54 59 30 40 04 00 08  // 0@.BSN0 BTY0@...
 10A91: 00 08 45 43 4F 53 08 00 08 45 43 50 53 08 00 08  // ..ECOS...ECPS...
 10AA1: 42 54 4D 50 10 45 56 54 4E 08 00 18 50 52 43 4C  // BTMP.EVTN...PRCL
 10AB1: 08 50 52 43 30 08 50 52 43 31 08 50 52 43 4D 08  // .PRC0.PRC1.PRCM.
 10AC1: 50 52 49 4E 08 50 53 54 45 08 50 43 41 44 08 50  // PRIN.PSTE.PCAD.P
 10AD1: 45 57 4C 08 50 57 52 4C 08 50 45 43 44 08 50 45  // EWL.PWRL.PECD.PE
 10AE1: 48 49 08 50 45 43 49 08 50 45 50 4C 08 50 45 50  // HI.PECI.PEPL.PEP
 10AF1: 4D 08 50 57 46 43 08 50 45 43 43 08 50 44 54 30  // M.PWFC.PECC.PDT0
 10B01: 08 50 44 54 31 08 50 44 54 32 08 50 44 54 33 08  // .PDT1.PDT2.PDT3.
 10B11: 50 52 46 43 08 50 52 53 30 08 50 52 53 31 08 50  // PRFC.PRS0.PRS1.P
 10B21: 52 53 32 08 50 52 53 33 08 50 52 53 34 08 50 52  // RS2.PRS3.PRS4.PR
 10B31: 43 53 08 50 45 43 30 08 50 45 43 31 08 50 45 43  // CS.PEC0.PEC1.PEC
 10B41: 32 08 50 45 43 33 08 43 4D 44 52 08 43 56 52 54  // 2.PEC3.CMDR.CVRT
 10B51: 08 47 54 56 52 08 46 41 4E 54 08 53 4B 4E 54 08  // .GTVR.FANT.SKNT.
 10B61: 41 4D 42 54 08 4D 43 52 54 08 44 49 4D 30 08 44  // AMBT.MCRT.DIM0.D
 10B71: 49 4D 31 08 50 4D 41 58 08 50 50 44 54 08 50 45  // IM1.PMAX.PPDT.PE
 10B81: 43 48 08 50 4D 44 54 08 54 53 44 30 08 54 53 44  // CH.PMDT.TSD0.TSD
 10B91: 31 08 54 53 44 32 08 54 53 44 33 08 43 50 55 50  // 1.TSD2.TSD3.CPUP
 10BA1: 10 4D 43 48 50 10 53 59 53 50 10 43 50 41 50 10  // .MCHP.SYSP.CPAP.
 10BB1: 4D 43 41 50 10 53 59 41 50 10 43 46 53 50 10 43  // MCAP.SYAP.CFSP.C
 10BC1: 50 55 45 10 00 40 0A 00 08 56 47 41 54 08 4F 45  // PUE..@...VGAT.OE
 10BD1: 4D 31 08 4F 45 4D 32 08 4F 45 4D 33 10 4F 45 4D  // M1.OEM2.OEM3.OEM
 10BE1: 34 08 00 08 44 55 54 31 08 44 55 54 32 08 52 50  // 4...DUT1.DUT2.RP
 10BF1: 4D 31 10 52 50 4D 32 10 52 50 4D 34 10 00 08 44  // M1.RPM2.RPM4...D
 10C01: 54 48 4C 08 44 54 42 50 08 00 03 47 43 36 49 01  // THL.DTBP...GC6I.
 10C11: 47 43 36 4F 01 47 43 36 53 01 00 01 47 50 55 54  // GC6O.GC6S...GPUT
 10C21: 01 57 49 4E 46 08 00 03 44 47 50 55 01 00 01 54  // .WINF...DGPU...T
 10C31: 42 46 47 01 00 02 00 08 49 4E 46 32 08 4D 55 54  // BFG.....INF2.MUT
 10C41: 45 01 00 0F 52 50 4D 33 10 45 43 4B 53 08 00 08  // E...RPM3.ECKS...
 10C51: 00 04 58 54 55 46 01 00 02 00 01 00 48 05 50 4C  // ..XTUF......H.PL
 10C61: 31 54 10 50 4C 32 54 10 54 41 55 54 08           // 1T.PL2T.TAUT.

            OperationRegion (EC81, EmbeddedControl, Zero, 0xFF)

 10C6E: 5B 80 45 43 38 31 03 00 0A FF                    // [.EC81....

            Field (EC81, ByteAcc, Lock, Preserve)
            {
                Offset (0xF8), 
                FCMD,   8, 
                FDAT,   8, 
                FBUF,   8, 
                FBF1,   8, 
                FBF2,   8, 
                FBF3,   8
            }


 10C78: 5B 81 27 45 43 38 31 11 00 40 7C 46 43 4D 44 08  // [.'EC81..@|FCMD.
 10C88: 46 44 41 54 08 46 42 55 46 08 46 42 46 31 08 46  // FDAT.FBUF.FBF1.F
 10C98: 42 46 32 08 46 42 46 33 08                       // BF2.FBF3.

            OperationRegion (RAM2, SystemMemory, 0xFF70F100, 0x0100)

 10CA1: 5B 80 52 41 4D 32 00 0C 00 F1 70 FF 0B 00 01     // [.RAM2....p....

            Field (RAM2, ByteAcc, Lock, Preserve)
            {
                Offset (0xDD), 
                    ,   4, 
                MUTC,   1, 
                VLBR,   1, 
                Offset (0xDE), 
                Offset (0xE0), 
                LCHA,   8, 
                RCHA,   8, 
                VOLP,   8
            }


 10CB0: 5B 81 28 52 41 4D 32 11 00 48 6E 00 04 4D 55 54  // [.(RAM2..Hn..MUT
 10CC0: 43 01 56 4C 42 52 01 00 02 00 10 4C 43 48 41 08  // C.VLBR.....LCHA.
 10CD0: 52 43 48 41 08 56 4F 4C 50 08                    // RCHA.VOLP.

            Mutex (GC6M, 0x00)

 10CDA: 5B 01 47 43 36 4D 00                             // [.GC6M.

            Method (ECNV, 1, NotSerialized)
            {
                P8XH (Zero, 0xAA)
                Acquire (GC6M, 0xFFFF)

 10CE1: 14 31 45 43 4E 56 01 50 38 58 48 00 0A AA 5B 23  // .1ECNV.P8XH...[#
 10CF1: 47 43 36 4D FF FF                                // GC6M..

                If (LEqual (Arg0, Zero))
                {

 10CF7: A0 0A 93 68 00                                   // ...h.

                    Store (One, GC6I)
                }


 10CFC: 70 01 47 43 36 49                                // p.GC6I

                If (LEqual (Arg0, One))
                {

 10D02: A0 0A 93 68 01                                   // ...h.

                    Store (One, GC6O)
                }


 10D07: 70 01 47 43 36 4F                                // p.GC6O

                Release (GC6M)
            }


 10D0D: 5B 27 47 43 36 4D                                // ['GC6M

            Method (_Q0A, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x0A, P80H)

 10D13: 14 35 5F 51 30 41 00 70 0A 0A 50 38 30 48        // .5_Q0A.p..P80H

                If (^^^^WMI.HKDR)
                {
                    Store (OEM4, ^^^^WMI.EVNT)

 10D21: A0 27 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .'^^^^.WMI_HKDRp
 10D31: 4F 45 4D 34 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E  // OEM4^^^^.WMI_EVN
 10D41: 54                                               // T

                    Notify (WMI, 0xD0)
                }
            }


 10D42: 86 57 4D 49 5F 0A D0                             // .WMI_..

            Method (_Q0B, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x0B, P80H)

 10D49: 14 35 5F 51 30 42 00 70 0A 0B 50 38 30 48        // .5_Q0B.p..P80H

                If (^^^^WMI.HKDR)
                {
                    Store (OEM4, ^^^^WMI.EVNT)

 10D57: A0 27 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .'^^^^.WMI_HKDRp
 10D67: 4F 45 4D 34 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E  // OEM4^^^^.WMI_EVN
 10D77: 54                                               // T

                    Notify (WMI, 0xD0)
                }
            }


 10D78: 86 57 4D 49 5F 0A D0                             // .WMI_..

            Method (_Q0C, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x0C, P80H)

 10D7F: 14 33 5F 51 30 43 00 70 0A 0C 50 38 30 48        // .3_Q0C.p..P80H

                If (^^^^WMI.HKDR)
                {
                    Store (0xFB, ^^^^WMI.EVNT)

 10D8D: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 10D9D: 0A FB 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                    Notify (WMI, 0xD0)
                }
            }


 10DAC: 86 57 4D 49 5F 0A D0                             // .WMI_..

            Method (_Q0D, 0, NotSerialized)  // _Qxx: EC Query
            {

 10DB3: 14 0D 5F 51 30 44 00                             // .._Q0D.

                Store (0x0D, P80H)
            }


 10DBA: 70 0A 0D 50 38 30 48                             // p..P80H

            Method (_Q0E, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x0E, P80H)

 10DC1: 14 33 5F 51 30 45 00 70 0A 0E 50 38 30 48        // .3_Q0E.p..P80H

                If (^^^^WMI.HKDR)
                {
                    Store (0xFA, ^^^^WMI.EVNT)

 10DCF: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 10DDF: 0A FA 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                    Notify (WMI, 0xD0)
                }
            }


 10DEE: 86 57 4D 49 5F 0A D0                             // .WMI_..

            Method (_Q0F, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x0F, P80H)

 10DF5: 14 33 5F 51 30 46 00 70 0A 0F 50 38 30 48        // .3_Q0F.p..P80H

                If (^^^^WMI.HKDR)
                {
                    Store (0xFA, ^^^^WMI.EVNT)

 10E03: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 10E13: 0A FA 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                    Notify (WMI, 0xD0)
                }
            }


 10E22: 86 57 4D 49 5F 0A D0                             // .WMI_..

            Method (_Q10, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x10, P80H)

 10E29: 14 45 06 5F 51 31 30 00 70 0A 10 50 38 30 48     // .E._Q10.p..P80H

                If (LEqual (OSYS, 0x03E8))
                {

 10E38: A0 2E 93 4F 53 59 53 0B E8 03                    // ...OSYS...

                    If (LEqual (And (OEMF, 0x0400), Zero))
                    {

 10E42: A0 13 93 7B 4F 45 4D 46 0B 00 04 00 00           // ...{OEMF.....

                        Notify (GFX0, 0x80)
                    }

 10E4F: 86 47 46 58 30 0A 80                             // .GFX0..

                    Else
                    {

 10E56: A1 10                                            // ..

                        Notify (^^^PEG0.PEGP, 0x80)
                    }
                }

 10E58: 86 5E 5E 5E 2E 50 45 47 30 50 45 47 50 0A 80     // .^^^.PEG0PEGP..

                ElseIf
 10E67: A1 27                                            // .'

 (^^^^WMI.HKDR)
                {
                    Store (0x94, ^^^^WMI.EVNT)

 10E69: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 10E79: 0A 94 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                    Notify (WMI, 0xD0)
                }
            }


 10E88: 86 57 4D 49 5F 0A D0                             // .WMI_..

            Method (_Q11, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x11, P80H)

 10E8F: 14 4B 0A 5F 51 31 31 00 70 0A 11 50 38 30 48     // .K._Q11.p..P80H

                If (And (WINF, One))
                {

 10E9E: A0 40 07 7B 57 49 4E 46 01 00                    // .@.{WINF..

                    If (LEqual (OSYS, 0x03E8))
                    {

 10EA8: A0 45 05 93 4F 53 59 53 0B E8 03                 // .E..OSYS...

                        If (LEqual (And (OEMF, 0x0400), Zero))
                        {

 10EB3: A0 34 93 7B 4F 45 4D 46 0B 00 04 00 00           // .4.{OEMF.....

                            If (And (OEMF, 0x2000))
                            {

 10EC0: A0 18 7B 4F 45 4D 46 0B 00 20 00                 // ..{OEMF.. .

                                Store (Zero, ^^^GFX0.SKIP)
                            }


 10ECB: 70 00 5E 5E 5E 2E 47 46 58 30 53 4B 49 50        // p.^^^.GFX0SKIP

                            Notify (^^^GFX0.LCD0, 0x87)
                        }

 10ED9: 86 5E 5E 5E 2E 47 46 58 30 4C 43 44 30 0A 87     // .^^^.GFX0LCD0..

                        Else
                        {

 10EE8: A1 15                                            // ..

                            Notify (^^^PEG0.PEGP.LCD0, 0x87)
                        }
                    }

 10EEA: 86 5E 5E 5E 2F 03 50 45 47 30 50 45 47 50 4C 43  // .^^^/.PEG0PEGPLC
 10EFA: 44 30 0A 87                                      // D0..

                    Else
                    {

 10EFE: A1 10                                            // ..

                        Notify (^^^GFX0.LCD0, 0x87)
                    }
                }

 10F00: 86 5E 5E 5E 2E 47 46 58 30 4C 43 44 30 0A 87     // .^^^.GFX0LCD0..

                ElseIf
 10F0F: A1 2B                                            // .+

 (^^^^WMI.HKDR)
                {
                    Add (OEM2, 0xE0, ^^^^WMI.EVNT)

 10F11: A0 29 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 72  // .)^^^^.WMI_HKDRr
 10F21: 4F 45 4D 32 0A E0 5E 5E 5E 5E 2E 57 4D 49 5F 45  // OEM2..^^^^.WMI_E
 10F31: 56 4E 54                                         // VNT

                    Notify (WMI, 0xD0)
                }
            }


 10F34: 86 57 4D 49 5F 0A D0                             // .WMI_..

            Method (_Q12, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x12, P80H)

 10F3B: 14 4B 0A 5F 51 31 32 00 70 0A 12 50 38 30 48     // .K._Q12.p..P80H

                If (And (WINF, One))
                {

 10F4A: A0 40 07 7B 57 49 4E 46 01 00                    // .@.{WINF..

                    If (LEqual (OSYS, 0x03E8))
                    {

 10F54: A0 45 05 93 4F 53 59 53 0B E8 03                 // .E..OSYS...

                        If (LEqual (And (OEMF, 0x0400), Zero))
                        {

 10F5F: A0 34 93 7B 4F 45 4D 46 0B 00 04 00 00           // .4.{OEMF.....

                            If (And (OEMF, 0x2000))
                            {

 10F6C: A0 18 7B 4F 45 4D 46 0B 00 20 00                 // ..{OEMF.. .

                                Store (Zero, ^^^GFX0.SKIP)
                            }


 10F77: 70 00 5E 5E 5E 2E 47 46 58 30 53 4B 49 50        // p.^^^.GFX0SKIP

                            Notify (^^^GFX0.LCD0, 0x86)
                        }

 10F85: 86 5E 5E 5E 2E 47 46 58 30 4C 43 44 30 0A 86     // .^^^.GFX0LCD0..

                        Else
                        {

 10F94: A1 15                                            // ..

                            Notify (^^^PEG0.PEGP.LCD0, 0x86)
                        }
                    }

 10F96: 86 5E 5E 5E 2F 03 50 45 47 30 50 45 47 50 4C 43  // .^^^/.PEG0PEGPLC
 10FA6: 44 30 0A 86                                      // D0..

                    Else
                    {

 10FAA: A1 10                                            // ..

                        Notify (^^^GFX0.LCD0, 0x86)
                    }
                }

 10FAC: 86 5E 5E 5E 2E 47 46 58 30 4C 43 44 30 0A 86     // .^^^.GFX0LCD0..

                ElseIf
 10FBB: A1 2B                                            // .+

 (^^^^WMI.HKDR)
                {
                    Add (OEM2, 0xE0, ^^^^WMI.EVNT)

 10FBD: A0 29 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 72  // .)^^^^.WMI_HKDRr
 10FCD: 4F 45 4D 32 0A E0 5E 5E 5E 5E 2E 57 4D 49 5F 45  // OEM2..^^^^.WMI_E
 10FDD: 56 4E 54                                         // VNT

                    Notify (WMI, 0xD0)
                }
            }


 10FE0: 86 57 4D 49 5F 0A D0                             // .WMI_..

            Method (_Q13, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x13, P80H)

 10FE7: 14 3F 5F 51 31 33 00 70 0A 13 50 38 30 48        // .?_Q13.p..P80H

                If (
 10FF5: A0 09                                            // ..

LEqual (OSYS, 0x03E8)){}

 10FF7: 93 4F 53 59 53 0B E8 03                          // .OSYS...

                If (^^^^WMI.HKDR)
                {
                    Store (OEM4, ^^^^WMI.EVNT)

 10FFF: A0 27 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .'^^^^.WMI_HKDRp
 1100F: 4F 45 4D 34 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E  // OEM4^^^^.WMI_EVN
 1101F: 54                                               // T

                    Notify (WMI, 0xD0)
                }
            }


 11020: 86 57 4D 49 5F 0A D0                             // .WMI_..

            Method (_Q14, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x14, P80H)

 11027: 14 44 06 5F 51 31 34 00 70 0A 14 50 38 30 48     // .D._Q14.p..P80H

                If (
 11036: A0 09                                            // ..

LEqual (OSYS, 0x03E8)){}

 11038: 93 4F 53 59 53 0B E8 03                          // .OSYS...

                If (^^^^WMI.HKDR)
                {

 11040: A0 4B 04 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52  // .K.^^^^.WMI_HKDR

                    If (LLess (OSYS, 0x07DC))
                    {
                        Store (0xF4, ^^^^WMI.EVNT)

 11050: A0 20 95 4F 53 59 53 0B DC 07 70 0A F4 5E 5E 5E  // . .OSYS...p..^^^
 11060: 5E 2E 57 4D 49 5F 45 56 4E 54                    // ^.WMI_EVNT

                        Notify (WMI, 0xD0)
                    }

 1106A: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Else
                    {
                        Store (OEM4, ^^^^WMI.EVNT)

 11071: A1 1A 70 4F 45 4D 34 5E 5E 5E 5E 2E 57 4D 49 5F  // ..pOEM4^^^^.WMI_
 11081: 45 56 4E 54                                      // EVNT

                        Notify (WMI, 0xD0)
                    }
                }
            }


 11085: 86 57 4D 49 5F 0A D0                             // .WMI_..

            Method (_Q15, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x15, P80H)

 1108C: 14 4C 04 5F 51 31 35 00 70 0A 15 50 38 30 48     // .L._Q15.p..P80H

                If (^^^^LID0.LIDF)
                {

 1109B: A0 34 5E 5E 5E 5E 2E 4C 49 44 30 4C 49 44 46     // .4^^^^.LID0LIDF

                    If (^^^^WMI.HKDR)
                    {
                        Store (0xC2, ^^^^WMI.EVNT)

 110AA: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 110BA: 0A C2 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                        Notify (WMI, 0xD0)
                    }
                }

 110C9: 86 57 4D 49 5F 0A D0                             // .WMI_..

                Else
                {

 110D0: A1 08                                            // ..

                    Notify (SLPB, 0x80)
                }
            }


 110D2: 86 53 4C 50 42 0A 80                             // .SLPB..

            Method (_Q16, 0, Serialized)  // _Qxx: EC Query
            {

 110D9: 14 47 0F 5F 51 31 36 08                          // .G._Q16.

                Store (0x16, P80H)
                Store (ADP, ^^^^AC.ACFG)

 110E1: 08 5F 54 5F 30 00 70 0A 16 50 38 30 48 70 41 44  // ._T_0.p..P80HpAD
 110F1: 50 5F 5E 5E 5E 5E 2E 41 43 5F 5F 41 43 46 47     // P_^^^^.AC__ACFG

                If (And (OEMF, 0x2000))
                {

 11100: A0 25 7B 4F 45 4D 46 0B 00 20 00                 // .%{OEMF.. .

                    If (LEqual (And (OEMF, 0x0400), Zero))
                    {

 1110B: A0 1A 93 7B 4F 45 4D 46 0B 00 04 00 00           // ...{OEMF.....

                        Store (One, ^^^GFX0.SKIP)
                    }
                }

                Notify (AC, 0x80)
                Sleep (0x01F4)

 11118: 70 01 5E 5E 5E 2E 47 46 58 30 53 4B 49 50 86 41  // p.^^^.GFX0SKIP.A
 11128: 43 5F 5F 0A 80 5B 22 0B F4 01                    // C__..["...

                If (BAT0)
                {
                    Notify (^^^^BAT0, 0x81)
                    Sleep (0x32)
                    Notify (^^^^BAT0, 0x80)

 11132: A0 23 42 41 54 30 86 5E 5E 5E 5E 42 41 54 30 0A  // .#BAT0.^^^^BAT0.
 11142: 81 5B 22 0A 32 86 5E 5E 5E 5E 42 41 54 30 0A 80  // .[".2.^^^^BAT0..

                    Sleep (0x32)
                }


 11152: 5B 22 0A 32                                      // [".2

                If (ADP)
                {
                    Store (Zero, BBST)

 11156: A0 1A 41 44 50 5F 70 00 42 42 53 54              // ..ADP_p.BBST

                    Notify (^^^PEG0.PEGP, 0xD1)
                }

 11162: 86 5E 5E 5E 2E 50 45 47 30 50 45 47 50 0A D1     // .^^^.PEG0PEGP..

                Else
                {

 11171: A1 45 04                                         // .E.

                    Switch (And (OEMF, 0x06))
                    {

 11174: A2 42 04 01 70 7B 4F 45 4D 46 0A 06 00 5F 54 5F  // .B..p{OEMF..._T_
 11184: 30                                               // 0

                        Case (Zero)
                        {

 11185: A0 0D 93 5F 54 5F 30 00                          // ..._T_0.

                            Store (Zero, BBST)
                        }

 1118D: 70 00 42 42 53 54                                // p.BBST

                        Case
 11193: A1 22                                            // ."

 (0x02)
                        {

 11195: A0 0E 93 5F 54 5F 30 0A 02                       // ..._T_0..

                            Store (Zero, BBST)
                        }

 1119E: 70 00 42 42 53 54                                // p.BBST

                        Case
 111A4: A1 11                                            // ..

 (0x04)
                        {

 111A6: A0 0F 93 5F 54 5F 30 0A 04                       // ..._T_0..

                            Store (0x51, BBST)
                        }


 111AF: 70 0A 51 42 42 53 54                             // p.QBBST

                    }
                }

                Store (Zero, TBFG)
                Store (Zero, ECTB)
                ^^^^AC.ADJP (Zero)
            }


 111B6: A5 70 00 54 42 46 47 70 00 45 43 54 42 5E 5E 5E  // .p.TBFGp.ECTB^^^
 111C6: 5E 2E 41 43 5F 5F 41 44 4A 50 00                 // ^.AC__ADJP.

            Method (_Q17, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x17, P80H)

 111D1: 14 18 5F 51 31 37 00 70 0A 17 50 38 30 48        // .._Q17.p..P80H

                Notify (^^^^BAT0, 0x81)
            }


 111DF: 86 5E 5E 5E 5E 42 41 54 30 0A 81                 // .^^^^BAT0..

            Method (_Q19, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x19, P80H)
                Notify (^^^^BAT0, 0x81)

 111EA: 14 49 07 5F 51 31 39 00 70 0A 19 50 38 30 48 86  // .I._Q19.p..P80H.
 111FA: 5E 5E 5E 5E 42 41 54 30 0A 81                    // ^^^^BAT0..

                If (LEqual (ECBL, Zero))
                {

 11204: A0 39 93 45 43 42 4C 00                          // .9.ECBL.

                    If (LEqual (And (OEMF, 0x0400), Zero))
                    {

 1120C: A0 1B 93 7B 4F 45 4D 46 0B 00 04 00 00           // ...{OEMF.....

                        Notify (^^^GFX0.LCD0, 0x88)
                    }

 11219: 86 5E 5E 5E 2E 47 46 58 30 4C 43 44 30 0A 88     // .^^^.GFX0LCD0..

                    Else
                    {

 11228: A1 15                                            // ..

                        Notify (^^^PEG0.PEGP.LCD0, 0x88)
                    }
                }


 1122A: 86 5E 5E 5E 2F 03 50 45 47 30 50 45 47 50 4C 43  // .^^^/.PEG0PEGPLC
 1123A: 44 30 0A 88                                      // D0..

                If (^^^^WMI.HKDR)
                {
                    Store (0xB7, ^^^^WMI.EVNT)

 1123E: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 1124E: 0A B7 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                    Notify (WMI, 0xD0)
                }
            }


 1125D: 86 57 4D 49 5F 0A D0                             // .WMI_..

            Method (_Q1B, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x1B, P80H)

 11264: 14 4C 05 5F 51 31 42 00 70 0A 1B 50 38 30 48     // .L._Q1B.p..P80H

                If (^^^^LID0.LIDF)
                {

 11273: A0 44 04 5E 5E 5E 5E 2E 4C 49 44 30 4C 49 44 46  // .D.^^^^.LID0LIDF

                    If (LIDS)
                    {

 11283: A0 0C 4C 49 44 53                                // ..LIDS

                        Notify (LID0, 0x80)
                    }

 11289: 86 4C 49 44 30 0A 80                             // .LID0..

                    ElseIf
 11290: A1 27                                            // .'

 (^^^^WMI.HKDR)
                    {
                        Store (0xC0, ^^^^WMI.EVNT)

 11292: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 112A2: 0A C0 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                        Notify (WMI, 0xD0)
                    }
                }

 112B1: 86 57 4D 49 5F 0A D0                             // .WMI_..

                Else
                {

 112B8: A1 08                                            // ..

                    Notify (LID0, 0x80)
                }
            }


 112BA: 86 4C 49 44 30 0A 80                             // .LID0..

            Method (_Q1C, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x1C, P80H)
                Notify (\_TZ.TZ0, 0x81)

 112C1: 14 27 5F 51 31 43 00 70 0A 1C 50 38 30 48 86 5C  // .'_Q1C.p..P80H.\
 112D1: 2E 5F 54 5A 5F 54 5A 30 5F 0A 81                 // ._TZ_TZ0_..

                Notify (\_TZ.TZ0, 0x80)
            }


 112DC: 86 5C 2E 5F 54 5A 5F 54 5A 30 5F 0A 80           // .\._TZ_TZ0_..

            Method (_Q1D, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x1D, P80H)

 112E9: 14 14 5F 51 31 44 00 70 0A 1D 50 38 30 48        // .._Q1D.p..P80H

                Notify (PWRB, 0x80)
            }


 112F7: 86 50 57 52 42 0A 80                             // .PWRB..

            Method (_Q1E, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x1E, P80H)

 112FE: 14 4E 06 5F 51 31 45 00 70 0A 1E 50 38 30 48     // .N._Q1E.p..P80H

                If (LEqual (ECBL, Zero))
                {

 1130D: A0 39 93 45 43 42 4C 00                          // .9.ECBL.

                    If (LEqual (And (OEMF, 0x0400), Zero))
                    {

 11315: A0 1B 93 7B 4F 45 4D 46 0B 00 04 00 00           // ...{OEMF.....

                        Notify (^^^GFX0.LCD0, 0x88)
                    }

 11322: 86 5E 5E 5E 2E 47 46 58 30 4C 43 44 30 0A 88     // .^^^.GFX0LCD0..

                    Else
                    {

 11331: A1 15                                            // ..

                        Notify (^^^PEG0.PEGP.LCD0, 0x88)
                    }
                }


 11333: 86 5E 5E 5E 2F 03 50 45 47 30 50 45 47 50 4C 43  // .^^^/.PEG0PEGPLC
 11343: 44 30 0A 88                                      // D0..

                If (^^^^WMI.HKDR)
                {
                    Store (0xB7, ^^^^WMI.EVNT)

 11347: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11357: 0A B7 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                    Notify (WMI, 0xD0)
                }
            }


 11366: 86 57 4D 49 5F 0A D0                             // .WMI_..

            Method (_Q24, 0, NotSerialized)  // _Qxx: EC Query
            {

 1136D: 14 0D 5F 51 32 34 00                             // .._Q24.

                Store (0x24, P80H)
            }


 11374: 70 0A 24 50 38 30 48                             // p.$P80H

            Method (_Q35, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x35, P80H)

 1137B: 14 4C 06 5F 51 33 35 00 70 0A 35 50 38 30 48     // .L._Q35.p.5P80H

                If (^^^^WMI.HKDR)
                {

 1138A: A0 48 04 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52  // .H.^^^^.WMI_HKDR

                    If (And (OEM3, 0x8000))
                    {
                        Store (One, SLFG)

 1139A: A0 20 7B 4F 45 4D 33 0B 00 80 00 70 01 53 4C 46  // . {OEM3....p.SLF
 113AA: 47                                               // G

                        Store (0xDE, ^^^^WMI.EVNT)
                    }

 113AB: 70 0A DE 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54  // p..^^^^.WMI_EVNT

                    Else
                    {
                        Store (Zero, SLFG)

 113BB: A1 17 70 00 53 4C 46 47                          // ..p.SLFG

                        Store (0xDF, ^^^^WMI.EVNT)
                    }
                }

                Notify (WMI, 0xD0)
                ^^^^AC.ADJP (Zero)
            }


 113C3: 70 0A DF 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54  // p..^^^^.WMI_EVNT
 113D3: 86 57 4D 49 5F 0A D0 5E 5E 5E 5E 2E 41 43 5F 5F  // .WMI_..^^^^.AC__
 113E3: 41 44 4A 50 00                                   // ADJP.

            Method (_Q36, 0, NotSerialized)  // _Qxx: EC Query
            {

 113E8: 14 0D 5F 51 33 36 00                             // .._Q36.

                Store (0x36, P80H)
            }


 113EF: 70 0A 36 50 38 30 48                             // p.6P80H

            Method (_Q37, 0, Serialized)  // _Qxx: EC Query
            {

 113F6: 14 45 12 5F 51 33 37 08                          // .E._Q37.


 113FE: 08 5F 54 5F 31 00                                // ._T_1.

                Store (0x37, P80H)

 11404: 08 5F 54 5F 30 00 70 0A 37 50 38 30 48           // ._T_0.p.7P80H

                If (And (OEM3, 0x2000))
                {
                    Store (One, B15C)

 11411: A0 42 08 7B 4F 45 4D 33 0B 00 20 00 70 01 42 31  // .B.{OEM3.. .p.B1
 11421: 35 43                                            // 5C

                    Switch (And (OEMF, 0x06))
                    {

 11423: A2 40 07 01 70 7B 4F 45 4D 46 0A 06 00 5F 54 5F  // .@..p{OEMF..._T_
 11433: 30                                               // 0

                        Case (Zero)
                        {
                            Store (Zero, BBST)

 11434: A0 1C 93 5F 54 5F 30 00 70 00 42 42 53 54        // ..._T_0.p.BBST

                            Notify (^^^PEG0.PEGP, 0xD1)
                        }

 11442: 86 5E 5E 5E 2E 50 45 47 30 50 45 47 50 0A D1     // .^^^.PEG0PEGP..

                        Case
 11451: A1 41 04                                         // .A.

 (0x02)
                        {
                            Store (Zero, BBST)

 11454: A0 1D 93 5F 54 5F 30 0A 02 70 00 42 42 53 54     // ..._T_0..p.BBST

                            Notify (^^^PEG0.PEGP, 0xD1)
                        }

 11463: 86 5E 5E 5E 2E 50 45 47 30 50 45 47 50 0A D1     // .^^^.PEG0PEGP..

                        Case
 11472: A1 20                                            // . 

 (0x04)
                        {
                            Store (0x55, BBST)

 11474: A0 1E 93 5F 54 5F 30 0A 04 70 0A 55 42 42 53 54  // ..._T_0..p.UBBST

                            Notify (^^^PEG0.PEGP, 0xD5)
                        }


 11484: 86 5E 5E 5E 2E 50 45 47 30 50 45 47 50 0A D5     // .^^^.PEG0PEGP..

                    }
                }

 11493: A5                                               // .

                Else
                {
                    Store (Zero, B15C)

 11494: A1 49 07 70 00 42 31 35 43                       // .I.p.B15C

                    Switch (And (OEMF, 0x06))
                    {

 1149D: A2 40 07 01 70 7B 4F 45 4D 46 0A 06 00 5F 54 5F  // .@..p{OEMF..._T_
 114AD: 31                                               // 1

                        Case (Zero)
                        {
                            Store (Zero, BBST)

 114AE: A0 1C 93 5F 54 5F 31 00 70 00 42 42 53 54        // ..._T_1.p.BBST

                            Notify (^^^PEG0.PEGP, 0xD1)
                        }

 114BC: 86 5E 5E 5E 2E 50 45 47 30 50 45 47 50 0A D1     // .^^^.PEG0PEGP..

                        Case
 114CB: A1 41 04                                         // .A.

 (0x02)
                        {
                            Store (Zero, BBST)

 114CE: A0 1D 93 5F 54 5F 31 0A 02 70 00 42 42 53 54     // ..._T_1..p.BBST

                            Notify (^^^PEG0.PEGP, 0xD1)
                        }

 114DD: 86 5E 5E 5E 2E 50 45 47 30 50 45 47 50 0A D1     // .^^^.PEG0PEGP..

                        Case
 114EC: A1 20                                            // . 

 (0x04)
                        {
                            Store (0x51, BBST)

 114EE: A0 1E 93 5F 54 5F 31 0A 04 70 0A 51 42 42 53 54  // ..._T_1..p.QBBST

                            Notify (^^^PEG0.PEGP, 0xD1)
                        }


 114FE: 86 5E 5E 5E 2E 50 45 47 30 50 45 47 50 0A D1     // .^^^.PEG0PEGP..

                    }
                }

                ^^^^AC.ADJP (Zero)
            }


 1150D: A5 5E 5E 5E 5E 2E 41 43 5F 5F 41 44 4A 50 00     // .^^^^.AC__ADJP.

            Method (_Q39, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x39, P80H)

 1151C: 14 35 5F 51 33 39 00 70 0A 39 50 38 30 48        // .5_Q39.p.9P80H

                If (^^^^WMI.HKDR)
                {
                    Store (OEM4, ^^^^WMI.EVNT)

 1152A: A0 27 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .'^^^^.WMI_HKDRp
 1153A: 4F 45 4D 34 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E  // OEM4^^^^.WMI_EVN
 1154A: 54                                               // T

                    Notify (WMI, 0xD0)
                }
            }


 1154B: 86 57 4D 49 5F 0A D0                             // .WMI_..

            Method (_Q40, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x40, P80H)

 11552: 14 33 5F 51 34 30 00 70 0A 40 50 38 30 48        // .3_Q40.p.@P80H

                If (^^^^WMI.HKDR)
                {
                    Store (0xFE, ^^^^WMI.EVNT)

 11560: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11570: 0A FE 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                    Notify (WMI, 0xD0)
                }
            }


 1157F: 86 57 4D 49 5F 0A D0                             // .WMI_..

            Method (_Q41, 0, NotSerialized)  // _Qxx: EC Query
            {

 11586: 14 0D 5F 51 34 31 00                             // .._Q41.

                Store (0x41, P80H)
            }


 1158D: 70 0A 41 50 38 30 48                             // p.AP80H

            Method (_Q42, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x42, P80H)
                Store (Increment (PRC0), PRC0)
                Store (One, TBFG)
                Store (One, ECTB)
                ^^^^AC.ADJP (Zero)
            }


 11594: 14 31 5F 51 34 32 00 70 0A 42 50 38 30 48 70 75  // .1_Q42.p.BP80Hpu
 115A4: 50 52 43 30 50 52 43 30 70 01 54 42 46 47 70 01  // PRC0PRC0p.TBFGp.
 115B4: 45 43 54 42 5E 5E 5E 5E 2E 41 43 5F 5F 41 44 4A  // ECTB^^^^.AC__ADJ
 115C4: 50 00                                            // P.

            Method (_Q53, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x53, P80H)
                Store (Increment (PRC1), PRC1)
                Store (Zero, TBFG)
                Store (Zero, ECTB)
                ^^^^AC.ADJP (Zero)
            }


 115C6: 14 31 5F 51 35 33 00 70 0A 53 50 38 30 48 70 75  // .1_Q53.p.SP80Hpu
 115D6: 50 52 43 31 50 52 43 31 70 00 54 42 46 47 70 00  // PRC1PRC1p.TBFGp.
 115E6: 45 43 54 42 5E 5E 5E 5E 2E 41 43 5F 5F 41 44 4A  // ECTB^^^^.AC__ADJ
 115F6: 50 00                                            // P.

            Method (_Q54, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x54, P80H)
                Store (0x08, CCST)
                Store (Increment (PRIN), PRIN)
                Store (Zero, PSLC)
                ^^^^AC.ADJP (Zero)
                Store (Zero, TBFG)

 115F8: 14 3E 5F 51 35 34 00 70 0A 54 50 38 30 48 70 0A  // .>_Q54.p.TP80Hp.
 11608: 08 43 43 53 54 70 75 50 52 49 4E 50 52 49 4E 70  // .CCSTpuPRINPRINp
 11618: 00 50 53 4C 43 5E 5E 5E 5E 2E 41 43 5F 5F 41 44  // .PSLC^^^^.AC__AD
 11628: 4A 50 00 70 00 54 42 46 47                       // JP.p.TBFG

                Store (Zero, ECTB)
            }


 11631: 70 00 45 43 54 42                                // p.ECTB

            Method (_Q55, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x55, P80H)
                Store (Zero, CCST)
                Store (Increment (PSTE), PSTE)
                Store (One, PSLC)
                ^^^^AC.ADJP (Zero)
                Store (Zero, TBFG)

 11637: 14 3D 5F 51 35 35 00 70 0A 55 50 38 30 48 70 00  // .=_Q55.p.UP80Hp.
 11647: 43 43 53 54 70 75 50 53 54 45 50 53 54 45 70 01  // CCSTpuPSTEPSTEp.
 11657: 50 53 4C 43 5E 5E 5E 5E 2E 41 43 5F 5F 41 44 4A  // PSLC^^^^.AC__ADJ
 11667: 50 00 70 00 54 42 46 47                          // P.p.TBFG

                Store (Zero, ECTB)
            }


 1166F: 70 00 45 43 54 42                                // p.ECTB

            Method (_Q46, 0, NotSerialized)  // _Qxx: EC Query
            {

 11675: 14 0D 5F 51 34 36 00                             // .._Q46.

                Store (0x46, P80H)
            }


 1167C: 70 0A 46 50 38 30 48                             // p.FP80H

            Method (_Q4A, 0, Serialized)  // _Qxx: EC Query
            {

 11683: 14 47 08 5F 51 34 41 08                          // .G._Q4A.

                Store (0x4A, P80H)
                Store (OEM4, Local0)

 1168B: 08 5F 54 5F 30 00 70 0A 4A 50 38 30 48 70 4F 45  // ._T_0.p.JP80HpOE
 1169B: 4D 34 60                                         // M4`

                Switch (ToInteger (Local0))
                {

 1169E: A2 4C 06 01 70 99 60 00 5F 54 5F 30              // .L..p.`._T_0

                    Case (0xCC)
                    {

 116AA: A0 2E 93 5F 54 5F 30 0A CC                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0xBA, ^^^^WMI.EVNT)

 116B3: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 116C3: 0A BA 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 116D2: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 116D9: A1 30                                            // .0

 (0xCB)
                    {

 116DB: A0 2E 93 5F 54 5F 30 0A CB                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0xBB, ^^^^WMI.EVNT)

 116E4: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 116F4: 0A BB 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }


 11703: 86 57 4D 49 5F 0A D0                             // .WMI_..

                }
            }


 1170A: A5                                               // .

            Method (_Q4C, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x4C, P80H)

 1170B: 14 4F 06 5F 51 34 43 00 70 0A 4C 50 38 30 48     // .O._Q4C.p.LP80H

                CreateField (^^^PEG0.PEGP.TGPC, 0x0A, 0x02, PRGE)

 1171A: 5B 13 5E 5E 5E 2F 03 50 45 47 30 50 45 47 50 54  // [.^^^/.PEG0PEGPT
 1172A: 47 50 43 0A 0A 0A 02 50 52 47 45                 // GPC....PRGE

                If (LEqual (ToInteger (PRGE), Zero))
                {

 11735: A0 17 93 99 50 52 47 45 00 00                    // ....PRGE..

                    Store (One, ^^^PEG0.LNKD)
                }


 1173F: 70 01 5E 5E 5E 2E 50 45 47 30 4C 4E 4B 44        // p.^^^.PEG0LNKD

                While (LEqual (DGPU, Zero))
                {
                    Store (Zero, FDAT)

 1174D: A2 14 93 44 47 50 55 00 70 00 46 44 41 54        // ...DGPU.p.FDAT

                    Store (0xBF, FCMD)
                }


 1175B: 70 0A BF 46 43 4D 44                             // p..FCMD

                If (LEqual (ToInteger (PRGE), 0x02))
                {

 11762: A0 18 93 99 50 52 47 45 00 0A 02                 // ....PRGE...

                    Store (One, ^^^PEG0.LNKD)
                }
            }


 1176D: 70 01 5E 5E 5E 2E 50 45 47 30 4C 4E 4B 44        // p.^^^.PEG0LNKD

            Method (_Q61, 0, NotSerialized)  // _Qxx: EC Query
            {
            }


 1177B: 14 06 5F 51 36 31 00                             // .._Q61.

            Method (_Q51, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x51, P80H)
                Store ("Q_event 51", Debug)
                Store (Decrement (BBST), BBST)

 11782: 14 47 14 5F 51 35 31 00 70 0A 51 50 38 30 48 70  // .G._Q51.p.QP80Hp
 11792: 0D 51 5F 65 76 65 6E 74 20 35 31 00 5B 31 70 76  // .Q_event 51.[1pv
 117A2: 42 42 53 54 42 42 53 54                          // BBSTBBST

                If (LLess (And (BBST, 0x0F), 0x02))
                {
                    Notify (^^^PEG0.PEGP, 0xD1)
                    Store (0x51, BBST)

 117AA: A0 30 95 7B 42 42 53 54 0A 0F 00 0A 02 86 5E 5E  // .0.{BBST......^^
 117BA: 5E 2E 50 45 47 30 50 45 47 50 0A D1 70 0A 51 42  // ^.PEG0PEGP..p.QB
 117CA: 42 53 54                                         // BST

                    Store ("Notify D1", Debug)
                }

 117CD: 70 0D 4E 6F 74 69 66 79 20 44 31 00 5B 31        // p.Notify D1.[1

                ElseIf
 117DB: A1 4E 0E                                         // .N.

 (LEqual (And (BBST, 0x0F), 0x02))
                {
                    Notify (^^^PEG0.PEGP, 0xD2)
                    Store (0x52, BBST)

 117DE: A0 30 93 7B 42 42 53 54 0A 0F 00 0A 02 86 5E 5E  // .0.{BBST......^^
 117EE: 5E 2E 50 45 47 30 50 45 47 50 0A D2 70 0A 52 42  // ^.PEG0PEGP..p.RB
 117FE: 42 53 54                                         // BST

                    Store ("Notify D2", Debug)
                }

 11801: 70 0D 4E 6F 74 69 66 79 20 44 32 00 5B 31        // p.Notify D2.[1

                ElseIf
 1180F: A1 4A 0B                                         // .J.

 (LEqual (And (BBST, 0x0F), 0x03))
                {
                    Notify (^^^PEG0.PEGP, 0xD3)
                    Store (0x53, BBST)

 11812: A0 30 93 7B 42 42 53 54 0A 0F 00 0A 03 86 5E 5E  // .0.{BBST......^^
 11822: 5E 2E 50 45 47 30 50 45 47 50 0A D3 70 0A 53 42  // ^.PEG0PEGP..p.SB
 11832: 42 53 54                                         // BST

                    Store ("Notify D3", Debug)
                }

 11835: 70 0D 4E 6F 74 69 66 79 20 44 33 00 5B 31        // p.Notify D3.[1

                ElseIf
 11843: A1 46 08                                         // .F.

 (LEqual (And (BBST, 0x0F), 0x04))
                {
                    Notify (^^^PEG0.PEGP, 0xD4)
                    Store (0x54, BBST)

 11846: A0 30 93 7B 42 42 53 54 0A 0F 00 0A 04 86 5E 5E  // .0.{BBST......^^
 11856: 5E 2E 50 45 47 30 50 45 47 50 0A D4 70 0A 54 42  // ^.PEG0PEGP..p.TB
 11866: 42 53 54                                         // BST

                    Store ("Notify D4", Debug)
                }

 11869: 70 0D 4E 6F 74 69 66 79 20 44 34 00 5B 31        // p.Notify D4.[1

                ElseIf
 11877: A1 42 05                                         // .B.

 (LEqual (And (BBST, 0x0F), 0x05))
                {
                    Notify (^^^PEG0.PEGP, 0xD5)
                    Store (0x55, BBST)

 1187A: A0 30 93 7B 42 42 53 54 0A 0F 00 0A 05 86 5E 5E  // .0.{BBST......^^
 1188A: 5E 2E 50 45 47 30 50 45 47 50 0A D5 70 0A 55 42  // ^.PEG0PEGP..p.UB
 1189A: 42 53 54                                         // BST

                    Store ("Notify D5", Debug)
                }

 1189D: 70 0D 4E 6F 74 69 66 79 20 44 35 00 5B 31        // p.Notify D5.[1

                Else
                {
                    Notify (^^^PEG0.PEGP, 0xD5)

 118AB: A1 1E 86 5E 5E 5E 2E 50 45 47 30 50 45 47 50 0A  // ...^^^.PEG0PEGP.
 118BB: D5                                               // .

                    Store ("Notify D5", Debug)
                }
            }


 118BC: 70 0D 4E 6F 74 69 66 79 20 44 35 00 5B 31        // p.Notify D5.[1

            Method (_Q52, 0, NotSerialized)  // _Qxx: EC Query
            {
                Store (0x52, P80H)
                Store ("Q_event 52", Debug)
                Store (Increment (BBST), BBST)

 118CA: 14 46 14 5F 51 35 32 00 70 0A 52 50 38 30 48 70  // .F._Q52.p.RP80Hp
 118DA: 0D 51 5F 65 76 65 6E 74 20 35 32 00 5B 31 70 75  // .Q_event 52.[1pu
 118EA: 42 42 53 54 42 42 53 54                          // BBSTBBST

                If (LGreater (And (BBST, 0x0F), 0x04))
                {
                    Notify (^^^PEG0.PEGP, 0xD5)
                    Store (0x55, BBST)

 118F2: A0 30 94 7B 42 42 53 54 0A 0F 00 0A 04 86 5E 5E  // .0.{BBST......^^
 11902: 5E 2E 50 45 47 30 50 45 47 50 0A D5 70 0A 55 42  // ^.PEG0PEGP..p.UB
 11912: 42 53 54                                         // BST

                    Store ("Notify D5", Debug)
                }

 11915: 70 0D 4E 6F 74 69 66 79 20 44 35 00 5B 31        // p.Notify D5.[1

                ElseIf
 11923: A1 4D 0E                                         // .M.

 (LEqual (And (BBST, 0x0F), 0x04))
                {
                    Notify (^^^PEG0.PEGP, 0xD4)
                    Store (0x54, BBST)

 11926: A0 30 93 7B 42 42 53 54 0A 0F 00 0A 04 86 5E 5E  // .0.{BBST......^^
 11936: 5E 2E 50 45 47 30 50 45 47 50 0A D4 70 0A 54 42  // ^.PEG0PEGP..p.TB
 11946: 42 53 54                                         // BST

                    Store ("Notify D4", Debug)
                }

 11949: 70 0D 4E 6F 74 69 66 79 20 44 34 00 5B 31        // p.Notify D4.[1

                ElseIf
 11957: A1 49 0B                                         // .I.

 (LEqual (And (BBST, 0x0F), 0x03))
                {
                    Notify (^^^PEG0.PEGP, 0xD3)
                    Store (0x53, BBST)

 1195A: A0 30 93 7B 42 42 53 54 0A 0F 00 0A 03 86 5E 5E  // .0.{BBST......^^
 1196A: 5E 2E 50 45 47 30 50 45 47 50 0A D3 70 0A 53 42  // ^.PEG0PEGP..p.SB
 1197A: 42 53 54                                         // BST

                    Store ("Notify D3", Debug)
                }

 1197D: 70 0D 4E 6F 74 69 66 79 20 44 33 00 5B 31        // p.Notify D3.[1

                ElseIf
 1198B: A1 45 08                                         // .E.

 (LEqual (And (BBST, 0x0F), 0x02))
                {
                    Notify (^^^PEG0.PEGP, 0xD2)
                    Store (0x52, BBST)

 1198E: A0 30 93 7B 42 42 53 54 0A 0F 00 0A 02 86 5E 5E  // .0.{BBST......^^
 1199E: 5E 2E 50 45 47 30 50 45 47 50 0A D2 70 0A 52 42  // ^.PEG0PEGP..p.RB
 119AE: 42 53 54                                         // BST

                    Store ("Notify D2", Debug)
                }

 119B1: 70 0D 4E 6F 74 69 66 79 20 44 32 00 5B 31        // p.Notify D2.[1

                ElseIf
 119BF: A1 41 05                                         // .A.

 (LEqual (And (BBST, 0x0F), One))
                {
                    Notify (^^^PEG0.PEGP, 0xD1)
                    Store (0x51, BBST)

 119C2: A0 2F 93 7B 42 42 53 54 0A 0F 00 01 86 5E 5E 5E  // ./.{BBST.....^^^
 119D2: 2E 50 45 47 30 50 45 47 50 0A D1 70 0A 51 42 42  // .PEG0PEGP..p.QBB
 119E2: 53 54                                            // ST

                    Store ("Notify D1", Debug)
                }

 119E4: 70 0D 4E 6F 74 69 66 79 20 44 31 00 5B 31        // p.Notify D1.[1

                Else
                {
                    Notify (^^^PEG0.PEGP, 0xD1)

 119F2: A1 1E 86 5E 5E 5E 2E 50 45 47 30 50 45 47 50 0A  // ...^^^.PEG0PEGP.
 11A02: D1                                               // .

                    Store ("Notify D1", Debug)
                }
            }


 11A03: 70 0D 4E 6F 74 69 66 79 20 44 31 00 5B 31        // p.Notify D1.[1

            Method (_Q50, 0, Serialized)  // _Qxx: EC Query
            {

 11A11: 14 4D 46 5F 51 35 30 08                          // .MF_Q50.

                Store (0x50, P80H)
                Store (OEM4, Local0)

 11A19: 08 5F 54 5F 30 00 70 0A 50 50 38 30 48 70 4F 45  // ._T_0.p.PP80HpOE
 11A29: 4D 34 60                                         // M4`

                Switch (ToInteger (Local0))
                {

 11A2C: A2 42 45 01 70 99 60 00 5F 54 5F 30              // .BE.p.`._T_0

                    Case (0x7B)
                    {

 11A38: A0 2E 93 5F 54 5F 30 0A 7B                       // ..._T_0.{

                        If (^^^^WMI.HKDR)
                        {
                            Store (0x7B, ^^^^WMI.EVNT)

 11A41: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11A51: 0A 7B 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // .{^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11A60: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11A67: A1 46 41                                         // .FA

 (0x80)
                    {

 11A6A: A0 2E 93 5F 54 5F 30 0A 80                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0x83, ^^^^WMI.EVNT)

 11A73: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11A83: 0A 83 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11A92: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11A99: A1 44 3E                                         // .D>

 (0x81)
                    {

 11A9C: A0 2E 93 5F 54 5F 30 0A 81                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0x81, ^^^^WMI.EVNT)

 11AA5: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11AB5: 0A 81 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11AC4: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11ACB: A1 42 3B                                         // .B;

 (0x82)
                    {

 11ACE: A0 2E 93 5F 54 5F 30 0A 82                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0x82, ^^^^WMI.EVNT)

 11AD7: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11AE7: 0A 82 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11AF6: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11AFD: A1 40 38                                         // .@8

 (0x89)
                    {

 11B00: A0 1E 93 5F 54 5F 30 0A 89                       // ..._T_0..

                        If (LEqual (VLBR, One))
                        {

 11B09: A0 0D 93 56 4C 42 52 01                          // ...VLBR.

                            Store (Zero, VLBR)
                        }

 11B11: 70 00 56 4C 42 52                                // p.VLBR

                        Else
                        {

 11B17: A1 07                                            // ..

                            Store (One, VLBR)
                        }
                    }

 11B19: 70 01 56 4C 42 52                                // p.VLBR

                    Case
 11B1F: A1 4E 35                                         // .N5

 (0x8A)
                    {

 11B22: A0 2E 93 5F 54 5F 30 0A 8A                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0x8A, ^^^^WMI.EVNT)

 11B2B: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11B3B: 0A 8A 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11B4A: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11B51: A1 4C 32                                         // .L2

 (0x9E)
                    {

 11B54: A0 2E 93 5F 54 5F 30 0A 9E                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0x9E, ^^^^WMI.EVNT)

 11B5D: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11B6D: 0A 9E 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11B7C: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11B83: A1 4A 2F                                         // .J/

 (0x9F)
                    {

 11B86: A0 2E 93 5F 54 5F 30 0A 9F                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0x9F, ^^^^WMI.EVNT)

 11B8F: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11B9F: 0A 9F 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11BAE: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11BB5: A1 48 2C                                         // .H,

 (0xA0)
                    {

 11BB8: A0 2E 93 5F 54 5F 30 0A A0                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0x9B, ^^^^WMI.EVNT)

 11BC1: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11BD1: 0A 9B 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11BE0: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11BE7: A1 46 29                                         // .F)

 (0xA8)
                    {

 11BEA: A0 2E 93 5F 54 5F 30 0A A8                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0x95, ^^^^WMI.EVNT)

 11BF3: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11C03: 0A 95 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11C12: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11C19: A1 44 26                                         // .D&

 (0xA9)
                    {

 11C1C: A0 2E 93 5F 54 5F 30 0A A9                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0x9C, ^^^^WMI.EVNT)

 11C25: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11C35: 0A 9C 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11C44: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11C4B: A1 42 23                                         // .B#

 (0xAB)
                    {

 11C4E: A0 2E 93 5F 54 5F 30 0A AB                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0x84, ^^^^WMI.EVNT)

 11C57: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11C67: 0A 84 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11C76: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11C7D: A1 40 20                                         // .@ 

 (0xAE)
                    {

 11C80: A0 2E 93 5F 54 5F 30 0A AE                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0x86, ^^^^WMI.EVNT)

 11C89: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11C99: 0A 86 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11CA8: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11CAF: A1 4E 1C                                         // .N.

 (0xAF)
                    {

 11CB2: A0 2E 93 5F 54 5F 30 0A AF                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0x86, ^^^^WMI.EVNT)

 11CBB: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11CCB: 0A 86 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11CDA: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11CE1: A1 4C 19                                         // .L.

 (0xC7)
                    {

 11CE4: A0 2E 93 5F 54 5F 30 0A C7                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0xC7, ^^^^WMI.EVNT)

 11CED: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11CFD: 0A C7 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11D0C: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11D13: A1 4A 16                                         // .J.

 (0xC8)
                    {

 11D16: A0 2E 93 5F 54 5F 30 0A C8                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0xC8, ^^^^WMI.EVNT)

 11D1F: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11D2F: 0A C8 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11D3E: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11D45: A1 48 13                                         // .H.

 (0xC9)
                    {

 11D48: A0 2E 93 5F 54 5F 30 0A C9                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0xC9, ^^^^WMI.EVNT)

 11D51: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11D61: 0A C9 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11D70: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11D77: A1 46 10                                         // .F.

 (0xCA)
                    {

 11D7A: A0 2E 93 5F 54 5F 30 0A CA                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0xCA, ^^^^WMI.EVNT)

 11D83: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11D93: 0A CA 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11DA2: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11DA9: A1 44 0D                                         // .D.

 (0xCF)
                    {

 11DAC: A0 2E 93 5F 54 5F 30 0A CF                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0xCB, ^^^^WMI.EVNT)

 11DB5: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11DC5: 0A CB 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11DD4: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11DDB: A1 42 0A                                         // .B.

 (0xD0)
                    {

 11DDE: A0 2E 93 5F 54 5F 30 0A D0                       // ..._T_0..

                        If (^^^^WMI.HKDR)
                        {
                            Store (0xCC, ^^^^WMI.EVNT)

 11DE7: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11DF7: 0A CC 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11E06: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11E0D: A1 40 07                                         // .@.

 (0xF2)
                    {
                        P8XH (Zero, 0xF2)

 11E10: A0 35 93 5F 54 5F 30 0A F2 50 38 58 48 00 0A F2  // .5._T_0..P8XH...

                        If (^^^^WMI.HKDR)
                        {
                            Store (0x70, ^^^^WMI.EVNT)

 11E20: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11E30: 0A 70 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // .p^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }

 11E3F: 86 57 4D 49 5F 0A D0                             // .WMI_..

                    Case
 11E46: A1 37                                            // .7

 (0xF3)
                    {
                        P8XH (Zero, 0xF3)

 11E48: A0 35 93 5F 54 5F 30 0A F3 50 38 58 48 00 0A F3  // .5._T_0..P8XH...

                        If (^^^^WMI.HKDR)
                        {
                            Store (0x8F, ^^^^WMI.EVNT)

 11E58: A0 25 5E 5E 5E 5E 2E 57 4D 49 5F 48 4B 44 52 70  // .%^^^^.WMI_HKDRp
 11E68: 0A 8F 5E 5E 5E 5E 2E 57 4D 49 5F 45 56 4E 54     // ..^^^^.WMI_EVNT

                            Notify (WMI, 0xD0)
                        }
                    }


 11E77: 86 57 4D 49 5F 0A D0                             // .WMI_..

                }
            }
        }
    }


 11E7E: A5                                               // .

    Name (_S0, 
 11E7F: 08 5F 53 30 5F                                   // ._S0_

Package (0x04)  // _S0_: S0 System State
    {
        Zero, 
        Zero, 
        Zero, 
        Zero
    })

 11E84: 12 06 04 00 00 00 00                             // .......

    If (SS1)
    {

 11E8B: A0 11 53 53 31 5F                                // ..SS1_

        Name (_S1, 
 11E91: 08 5F 53 31 5F                                   // ._S1_

Package (0x04)  // _S1_: S1 System State
        {
            One, 
            Zero, 
            Zero, 
            Zero
        })
    }


 11E96: 12 06 04 01 00 00 00                             // .......

    If (SS3)
    {

 11E9D: A0 12 53 53 33 5F                                // ..SS3_

        Name (_S3, 
 11EA3: 08 5F 53 33 5F                                   // ._S3_

Package (0x04)  // _S3_: S3 System State
        {
            0x05, 
            Zero, 
            Zero, 
            Zero
        })
    }


 11EA8: 12 07 04 0A 05 00 00 00                          // ........

    If (SS4)
    {

 11EB0: A0 12 53 53 34 5F                                // ..SS4_

        Name (_S4, 
 11EB6: 08 5F 53 34 5F                                   // ._S4_

Package (0x04)  // _S4_: S4 System State
        {
            0x06, 
            Zero, 
            Zero, 
            Zero
        })
    }


 11EBB: 12 07 04 0A 06 00 00 00                          // ........

    Name (_S5, 
 11EC3: 08 5F 53 35 5F                                   // ._S5_

Package (0x04)  // _S5_: S5 System State
    {
        0x07, 
        Zero, 
        Zero, 
        Zero
    })

 11EC8: 12 07 04 0A 07 00 00 00                          // ........

    Method (PTS, 1, NotSerialized)
    {

 11ED0: 14 2D 50 54 53 5F 01                             // .-PTS_.

        If (Arg0)
        {
            \_SB.PCI0.LPCB.SPTS (Arg0)
            \_SB.PCI0.NPTS (Arg0)
        }
    }


 11ED7: A0 26 68 5C 2F 04 5F 53 42 5F 50 43 49 30 4C 50  // .&h\/._SB_PCI0LP
 11EE7: 43 42 53 50 54 53 68 5C 2F 03 5F 53 42 5F 50 43  // CBSPTSh\/._SB_PC
 11EF7: 49 30 4E 50 54 53 68                             // I0NPTSh

    Method (WAK, 1, NotSerialized)
    {
        \_SB.PCI0.LPCB.SWAK (Arg0)
        \_SB.PCI0.NWAK (Arg0)
    }


 11EFE: 14 2A 57 41 4B 5F 01 5C 2F 04 5F 53 42 5F 50 43  // .*WAK_.\/._SB_PC
 11F0E: 49 30 4C 50 43 42 53 57 41 4B 68 5C 2F 03 5F 53  // I0LPCBSWAKh\/._S
 11F1E: 42 5F 50 43 49 30 4E 57 41 4B 68                 // B_PCI0NWAKh

    Method (OSCM, 4, NotSerialized)
    {

 11F29: 14 08 4F 53 43 4D 04                             // ..OSCM.

        Return (Zero)
    }


 11F30: A4 00                                            // ..

    Method (PINI, 0, NotSerialized)
    {
    }
}



Table Header:
Table Body (Length 0x11F39)
